<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [flexspi_nor_sdram_release\emwin_slide_show.out]</title></head>
<body><HR>
<H1>Static Call Graph for image flexspi_nor_sdram_release\emwin_slide_show.out</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6130100: Last Updated: Wed Oct 21 15:50:34 2020
<BR><P>
<H3>Maximum Stack Usage =        352 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
_cbWinPreview &rArr; GUI_SPLINE_Create &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[12]">Reset_Handler</a>
 <LI><a href="#[97]">ACMP1_IRQHandler</a>
 <LI><a href="#[98]">ACMP2_IRQHandler</a>
 <LI><a href="#[99]">ACMP3_IRQHandler</a>
 <LI><a href="#[9a]">ACMP4_IRQHandler</a>
 <LI><a href="#[5f]">ADC1_IRQHandler</a>
 <LI><a href="#[60]">ADC2_IRQHandler</a>
 <LI><a href="#[95]">ADC_ETC_ERROR_IRQ_IRQHandler</a>
 <LI><a href="#[92]">ADC_ETC_IRQ0_IRQHandler</a>
 <LI><a href="#[93]">ADC_ETC_IRQ1_IRQHandler</a>
 <LI><a href="#[94]">ADC_ETC_IRQ2_IRQHandler</a>
 <LI><a href="#[53]">BEE_IRQHandler</a>
 <LI><a href="#[16]">BusFault_Handler</a>
 <LI><a href="#[de]">CAN1_DriverIRQHandler</a>
 <LI><a href="#[df]">CAN2_DriverIRQHandler</a>
 <LI><a href="#[ef]">CAN3_DriverIRQHandler</a>
 <LI><a href="#[7b]">CCM_1_IRQHandler</a>
 <LI><a href="#[7c]">CCM_2_IRQHandler</a>
 <LI><a href="#[2f]">CORE_IRQHandler</a>
 <LI><a href="#[47]">CSI_IRQHandler</a>
 <LI><a href="#[4d]">CSU_IRQHandler</a>
 <LI><a href="#[2d]">CTI0_ERROR_IRQHandler</a>
 <LI><a href="#[2e]">CTI1_ERROR_IRQHandler</a>
 <LI><a href="#[61]">DCDC_IRQHandler</a>
 <LI><a href="#[4e]">DCP_IRQHandler</a>
 <LI><a href="#[4f]">DCP_VMI_IRQHandler</a>
 <LI><a href="#[bd]">DMA0_DMA16_DriverIRQHandler</a>
 <LI><a href="#[c7]">DMA10_DMA26_DriverIRQHandler</a>
 <LI><a href="#[c8]">DMA11_DMA27_DriverIRQHandler</a>
 <LI><a href="#[c9]">DMA12_DMA28_DriverIRQHandler</a>
 <LI><a href="#[ca]">DMA13_DMA29_DriverIRQHandler</a>
 <LI><a href="#[cb]">DMA14_DMA30_DriverIRQHandler</a>
 <LI><a href="#[cc]">DMA15_DMA31_DriverIRQHandler</a>
 <LI><a href="#[be]">DMA1_DMA17_DriverIRQHandler</a>
 <LI><a href="#[bf]">DMA2_DMA18_DriverIRQHandler</a>
 <LI><a href="#[c0]">DMA3_DMA19_DriverIRQHandler</a>
 <LI><a href="#[c1]">DMA4_DMA20_DriverIRQHandler</a>
 <LI><a href="#[c2]">DMA5_DMA21_DriverIRQHandler</a>
 <LI><a href="#[c3]">DMA6_DMA22_DriverIRQHandler</a>
 <LI><a href="#[c4]">DMA7_DMA23_DriverIRQHandler</a>
 <LI><a href="#[c5]">DMA8_DMA24_DriverIRQHandler</a>
 <LI><a href="#[c6]">DMA9_DMA25_DriverIRQHandler</a>
 <LI><a href="#[cd]">DMA_ERROR_DriverIRQHandler</a>
 <LI><a href="#[19]">DebugMon_Handler</a>
 <LI><a href="#[11]">DefaultISR</a>
 <LI><a href="#[9d]">ENC1_IRQHandler</a>
 <LI><a href="#[9e]">ENC2_IRQHandler</a>
 <LI><a href="#[9f]">ENC3_IRQHandler</a>
 <LI><a href="#[a0]">ENC4_IRQHandler</a>
 <LI><a href="#[ee]">ENET2_1588_Timer_DriverIRQHandler</a>
 <LI><a href="#[ed]">ENET2_DriverIRQHandler</a>
 <LI><a href="#[ec]">ENET_1588_Timer_DriverIRQHandler</a>
 <LI><a href="#[eb]">ENET_DriverIRQHandler</a>
 <LI><a href="#[7a]">EWM_IRQHandler</a>
 <LI><a href="#[e5]">FLEXIO1_DriverIRQHandler</a>
 <LI><a href="#[e6]">FLEXIO2_DriverIRQHandler</a>
 <LI><a href="#[f0]">FLEXIO3_DriverIRQHandler</a>
 <LI><a href="#[42]">FLEXRAM_IRQHandler</a>
 <LI><a href="#[e7]">FLEXSPI2_DriverIRQHandler</a>
 <LI><a href="#[e8]">FLEXSPI_DriverIRQHandler</a>
 <LI><a href="#[7d]">GPC_IRQHandler</a>
 <LI><a href="#[6c]">GPIO1_Combined_0_15_IRQHandler</a>
 <LI><a href="#[6d]">GPIO1_Combined_16_31_IRQHandler</a>
 <LI><a href="#[64]">GPIO1_INT0_IRQHandler</a>
 <LI><a href="#[65]">GPIO1_INT1_IRQHandler</a>
 <LI><a href="#[66]">GPIO1_INT2_IRQHandler</a>
 <LI><a href="#[67]">GPIO1_INT3_IRQHandler</a>
 <LI><a href="#[68]">GPIO1_INT4_IRQHandler</a>
 <LI><a href="#[69]">GPIO1_INT5_IRQHandler</a>
 <LI><a href="#[6a]">GPIO1_INT6_IRQHandler</a>
 <LI><a href="#[6b]">GPIO1_INT7_IRQHandler</a>
 <LI><a href="#[6e]">GPIO2_Combined_0_15_IRQHandler</a>
 <LI><a href="#[6f]">GPIO2_Combined_16_31_IRQHandler</a>
 <LI><a href="#[70]">GPIO3_Combined_0_15_IRQHandler</a>
 <LI><a href="#[71]">GPIO3_Combined_16_31_IRQHandler</a>
 <LI><a href="#[72]">GPIO4_Combined_0_15_IRQHandler</a>
 <LI><a href="#[73]">GPIO4_Combined_16_31_IRQHandler</a>
 <LI><a href="#[74]">GPIO5_Combined_0_15_IRQHandler</a>
 <LI><a href="#[75]">GPIO5_Combined_16_31_IRQHandler</a>
 <LI><a href="#[b9]">GPIO6_7_8_9_IRQHandler</a>
 <LI><a href="#[45]">GPR_IRQ_IRQHandler</a>
 <LI><a href="#[80]">GPT1_IRQHandler</a>
 <LI><a href="#[81]">GPT2_IRQHandler</a>
 <LI><a href="#[43]">KPP_IRQHandler</a>
 <LI><a href="#[da]">LPSPI1_DriverIRQHandler</a>
 <LI><a href="#[db]">LPSPI2_DriverIRQHandler</a>
 <LI><a href="#[dc]">LPSPI3_DriverIRQHandler</a>
 <LI><a href="#[dd]">LPSPI4_DriverIRQHandler</a>
 <LI><a href="#[15]">MemManage_Handler</a>
 <LI><a href="#[96]">PIT_IRQHandler</a>
 <LI><a href="#[59]">PMU_EVENT_IRQHandler</a>
 <LI><a href="#[82]">PWM1_0_IRQHandler</a>
 <LI><a href="#[83]">PWM1_1_IRQHandler</a>
 <LI><a href="#[84]">PWM1_2_IRQHandler</a>
 <LI><a href="#[85]">PWM1_3_IRQHandler</a>
 <LI><a href="#[86]">PWM1_FAULT_IRQHandler</a>
 <LI><a href="#[a5]">PWM2_0_IRQHandler</a>
 <LI><a href="#[a6]">PWM2_1_IRQHandler</a>
 <LI><a href="#[a7]">PWM2_2_IRQHandler</a>
 <LI><a href="#[a8]">PWM2_3_IRQHandler</a>
 <LI><a href="#[a9]">PWM2_FAULT_IRQHandler</a>
 <LI><a href="#[aa]">PWM3_0_IRQHandler</a>
 <LI><a href="#[ab]">PWM3_1_IRQHandler</a>
 <LI><a href="#[ac]">PWM3_2_IRQHandler</a>
 <LI><a href="#[ad]">PWM3_3_IRQHandler</a>
 <LI><a href="#[ae]">PWM3_FAULT_IRQHandler</a>
 <LI><a href="#[af]">PWM4_0_IRQHandler</a>
 <LI><a href="#[b0]">PWM4_1_IRQHandler</a>
 <LI><a href="#[b1]">PWM4_2_IRQHandler</a>
 <LI><a href="#[b2]">PWM4_3_IRQHandler</a>
 <LI><a href="#[b3]">PWM4_FAULT_IRQHandler</a>
 <LI><a href="#[48]">PXP_IRQHandler</a>
 <LI><a href="#[79]">RTWDOG_IRQHandler</a>
 <LI><a href="#[7f]">Reserved115_IRQHandler</a>
 <LI><a href="#[9b]">Reserved143_IRQHandler</a>
 <LI><a href="#[9c]">Reserved144_IRQHandler</a>
 <LI><a href="#[b7]">Reserved171_IRQHandler</a>
 <LI><a href="#[50]">Reserved68_IRQHandler</a>
 <LI><a href="#[5a]">Reserved78_IRQHandler</a>
 <LI><a href="#[62]">Reserved86_IRQHandler</a>
 <LI><a href="#[63]">Reserved87_IRQHandler</a>
 <LI><a href="#[e0]">SAI1_DriverIRQHandler</a>
 <LI><a href="#[e1]">SAI2_DriverIRQHandler</a>
 <LI><a href="#[e2]">SAI3_RX_DriverIRQHandler</a>
 <LI><a href="#[e3]">SAI3_TX_DriverIRQHandler</a>
 <LI><a href="#[89]">SEMC_IRQHandler</a>
 <LI><a href="#[52]">SJC_IRQHandler</a>
 <LI><a href="#[4a]">SNVS_HP_WRAPPER_IRQHandler</a>
 <LI><a href="#[4b]">SNVS_HP_WRAPPER_TZ_IRQHandler</a>
 <LI><a href="#[4c]">SNVS_LP_WRAPPER_IRQHandler</a>
 <LI><a href="#[e4]">SPDIF_DriverIRQHandler</a>
 <LI><a href="#[7e]">SRC_IRQHandler</a>
 <LI><a href="#[5b]">TEMP_LOW_HIGH_IRQHandler</a>
 <LI><a href="#[5c]">TEMP_PANIC_IRQHandler</a>
 <LI><a href="#[a1]">TMR1_IRQHandler</a>
 <LI><a href="#[a2]">TMR2_IRQHandler</a>
 <LI><a href="#[a3]">TMR3_IRQHandler</a>
 <LI><a href="#[a4]">TMR4_IRQHandler</a>
 <LI><a href="#[51]">TRNG_IRQHandler</a>
 <LI><a href="#[44]">TSC_DIG_IRQHandler</a>
 <LI><a href="#[8d]">USB_OTG1_IRQHandler</a>
 <LI><a href="#[8c]">USB_OTG2_IRQHandler</a>
 <LI><a href="#[5d]">USB_PHY1_IRQHandler</a>
 <LI><a href="#[5e]">USB_PHY2_IRQHandler</a>
 <LI><a href="#[e9]">USDHC1_DriverIRQHandler</a>
 <LI><a href="#[ea]">USDHC2_DriverIRQHandler</a>
 <LI><a href="#[17]">UsageFault_Handler</a>
 <LI><a href="#[78]">WDOG1_IRQHandler</a>
 <LI><a href="#[49]">WDOG2_IRQHandler</a>
 <LI><a href="#[90]">XBAR1_IRQ_0_1_IRQHandler</a>
 <LI><a href="#[91]">XBAR1_IRQ_2_3_IRQHandler</a>
 <LI><a href="#[13]">NMI_Handler</a>
 <LI><a href="#[14]">HardFault_Handler</a>
 <LI><a href="#[18]">SVC_Handler</a>
 <LI><a href="#[1a]">PendSV_Handler</a>
 <LI><a href="#[1b]">SysTick_Handler</a>
 <LI><a href="#[1c]">DMA0_DMA16_IRQHandler</a>
 <LI><a href="#[1d]">DMA1_DMA17_IRQHandler</a>
 <LI><a href="#[1e]">DMA2_DMA18_IRQHandler</a>
 <LI><a href="#[1f]">DMA3_DMA19_IRQHandler</a>
 <LI><a href="#[20]">DMA4_DMA20_IRQHandler</a>
 <LI><a href="#[21]">DMA5_DMA21_IRQHandler</a>
 <LI><a href="#[22]">DMA6_DMA22_IRQHandler</a>
 <LI><a href="#[23]">DMA7_DMA23_IRQHandler</a>
 <LI><a href="#[24]">DMA8_DMA24_IRQHandler</a>
 <LI><a href="#[25]">DMA9_DMA25_IRQHandler</a>
 <LI><a href="#[26]">DMA10_DMA26_IRQHandler</a>
 <LI><a href="#[27]">DMA11_DMA27_IRQHandler</a>
 <LI><a href="#[28]">DMA12_DMA28_IRQHandler</a>
 <LI><a href="#[29]">DMA13_DMA29_IRQHandler</a>
 <LI><a href="#[2a]">DMA14_DMA30_IRQHandler</a>
 <LI><a href="#[2b]">DMA15_DMA31_IRQHandler</a>
 <LI><a href="#[2c]">DMA_ERROR_IRQHandler</a>
 <LI><a href="#[30]">LPUART1_IRQHandler</a>
 <LI><a href="#[31]">LPUART2_IRQHandler</a>
 <LI><a href="#[32]">LPUART3_IRQHandler</a>
 <LI><a href="#[33]">LPUART4_IRQHandler</a>
 <LI><a href="#[34]">LPUART5_IRQHandler</a>
 <LI><a href="#[35]">LPUART6_IRQHandler</a>
 <LI><a href="#[36]">LPUART7_IRQHandler</a>
 <LI><a href="#[37]">LPUART8_IRQHandler</a>
 <LI><a href="#[38]">LPI2C1_IRQHandler</a>
 <LI><a href="#[39]">LPI2C2_IRQHandler</a>
 <LI><a href="#[3a]">LPI2C3_IRQHandler</a>
 <LI><a href="#[3b]">LPI2C4_IRQHandler</a>
 <LI><a href="#[3c]">LPSPI1_IRQHandler</a>
 <LI><a href="#[3d]">LPSPI2_IRQHandler</a>
 <LI><a href="#[3e]">LPSPI3_IRQHandler</a>
 <LI><a href="#[3f]">LPSPI4_IRQHandler</a>
 <LI><a href="#[40]">CAN1_IRQHandler</a>
 <LI><a href="#[41]">CAN2_IRQHandler</a>
 <LI><a href="#[54]">SAI1_IRQHandler</a>
 <LI><a href="#[55]">SAI2_IRQHandler</a>
 <LI><a href="#[56]">SAI3_RX_IRQHandler</a>
 <LI><a href="#[57]">SAI3_TX_IRQHandler</a>
 <LI><a href="#[58]">SPDIF_IRQHandler</a>
 <LI><a href="#[76]">FLEXIO1_IRQHandler</a>
 <LI><a href="#[77]">FLEXIO2_IRQHandler</a>
 <LI><a href="#[87]">FLEXSPI2_IRQHandler</a>
 <LI><a href="#[88]">FLEXSPI_IRQHandler</a>
 <LI><a href="#[8a]">USDHC1_IRQHandler</a>
 <LI><a href="#[8b]">USDHC2_IRQHandler</a>
 <LI><a href="#[8e]">ENET_IRQHandler</a>
 <LI><a href="#[8f]">ENET_1588_Timer_IRQHandler</a>
 <LI><a href="#[b4]">ENET2_IRQHandler</a>
 <LI><a href="#[b5]">ENET2_1588_Timer_IRQHandler</a>
 <LI><a href="#[b6]">CAN3_IRQHandler</a>
 <LI><a href="#[b8]">FLEXIO3_IRQHandler</a>
 <LI><a href="#[f3]">BUTTON_Callback</a>
 <LI><a href="#[1da]">BUTTON_CreateAsChild</a>
 <LI><a href="#[1a8]">BUTTON_CreateIndirect</a>
 <LI><a href="#[1db]">BUTTON_CreateUser</a>
 <LI><a href="#[0]">BUTTON_DrawSkinFlex</a>
 <LI><a href="#[1ee]">BUTTON_GetText</a>
 <LI><a href="#[1d8]">BUTTON_IsPressed</a>
 <LI><a href="#[145]">BUTTON_SetBitmapEx</a>
 <LI><a href="#[1f1]">BUTTON_SetSkin</a>
 <LI><a href="#[1dc]">BUTTON_SetText</a>
 <LI><a href="#[1f0]">BUTTON__SetDrawObj</a>
 <LI><a href="#[20f]">GL_DrawBitmap</a>
 <LI><a href="#[212]">GL_DrawLineEx</a>
 <LI><a href="#[217]">GL_DrawPoint</a>
 <LI><a href="#[218]">GL_FillCircle</a>
 <LI><a href="#[219]">GL_FillCircleAA_HiRes</a>
 <LI><a href="#[216]">GL_FillPolygon</a>
 <LI><a href="#[21d]">GL_SetDefault</a>
 <LI><a href="#[16d]">GUIMONO_DispChar</a>
 <LI><a href="#[16e]">GUIMONO_GetCharDistX</a>
 <LI><a href="#[16f]">GUIMONO_GetFontInfo</a>
 <LI><a href="#[170]">GUIMONO_IsInFont</a>
 <LI><a href="#[171]">GUIPROP_AA4_EXT_DispChar</a>
 <LI><a href="#[169]">GUIPROP_DispChar</a>
 <LI><a href="#[176]">GUIPROP_EXT_DispChar</a>
 <LI><a href="#[172]">GUIPROP_EXT_GetCharDistX</a>
 <LI><a href="#[175]">GUIPROP_EXT_GetCharInfo</a>
 <LI><a href="#[173]">GUIPROP_EXT_GetFontInfo</a>
 <LI><a href="#[174]">GUIPROP_EXT_IsInFont</a>
 <LI><a href="#[d]">GUIPROP_EXT__ClearLine</a>
 <LI><a href="#[168]">GUIPROP_EXT__DispLine</a>
 <LI><a href="#[226]">GUIPROP_EXT__FindChar</a>
 <LI><a href="#[16a]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[16b]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[16c]">GUIPROP_IsInFont</a>
 <LI><a href="#[22e]">GUITASK_CopyContext</a>
 <LI><a href="#[231]">GUITASK_Init</a>
 <LI><a href="#[235]">GUI_AA_DrawRoundedRect</a>
 <LI><a href="#[21b]">GUI_AA_Exit</a>
 <LI><a href="#[23d]">GUI_AA_FillCircle</a>
 <LI><a href="#[239]">GUI_AA_HiRes2Pixel</a>
 <LI><a href="#[23e]">GUI_AA_Init</a>
 <LI><a href="#[21a]">GUI_AA_Init_HiRes</a>
 <LI><a href="#[228]">GUI_AA__DrawCharAA4</a>
 <LI><a href="#[242]">GUI_ALLOC_AllocInit</a>
 <LI><a href="#[243]">GUI_ALLOC_AllocNoInit</a>
 <LI><a href="#[245]">GUI_ALLOC_AllocZero</a>
 <LI><a href="#[30d]">GUI_ALLOC_AssignMemory</a>
 <LI><a href="#[246]">GUI_ALLOC_Free</a>
 <LI><a href="#[272]">GUI_ALLOC_FreeFixedBlock</a>
 <LI><a href="#[1d1]">GUI_ALLOC_FreePtr</a>
 <LI><a href="#[1d2]">GUI_ALLOC_FreePtrArray</a>
 <LI><a href="#[233]">GUI_ALLOC_GetFixedBlock</a>
 <LI><a href="#[24b]">GUI_ALLOC_GetMaxSize</a>
 <LI><a href="#[32b]">GUI_ALLOC_GetSize</a>
 <LI><a href="#[277]">GUI_ALLOC_Lock</a>
 <LI><a href="#[1d0]">GUI_ALLOC_LockH</a>
 <LI><a href="#[24c]">GUI_ALLOC_Realloc</a>
 <LI><a href="#[24d]">GUI_ALLOC_RequestSize</a>
 <LI><a href="#[279]">GUI_ALLOC_Unlock</a>
 <LI><a href="#[1d3]">GUI_ALLOC_UnlockH</a>
 <LI><a href="#[26b]">GUI_ALLOC_h2p</a>
 <LI><a href="#[3f8]">GUI_ALLOC_p2h</a>
 <LI><a href="#[24e]">GUI_ANIM_AddItem</a>
 <LI><a href="#[24f]">GUI_ANIM_Create</a>
 <LI><a href="#[250]">GUI_ANIM_Delete</a>
 <LI><a href="#[251]">GUI_ANIM_Exec</a>
 <LI><a href="#[253]">GUI_ANIM_Start</a>
 <LI><a href="#[255]">GUI_ANIM_StartEx</a>
 <LI><a href="#[11d]">GUI_ANIM__AccelDecel</a>
 <LI><a href="#[256]">GUI_ARRAY_AddItem</a>
 <LI><a href="#[257]">GUI_ARRAY_Create</a>
 <LI><a href="#[258]">GUI_ARRAY_Delete</a>
 <LI><a href="#[259]">GUI_ARRAY_DeleteItem</a>
 <LI><a href="#[25a]">GUI_ARRAY_GetNumItems</a>
 <LI><a href="#[25b]">GUI_ARRAY_GethItem</a>
 <LI><a href="#[25d]">GUI_ARRAY_GetpItemLocked</a>
 <LI><a href="#[25c]">GUI_ARRAY__GethItem</a>
 <LI><a href="#[25e]">GUI_CURSOR_SetPositionEx</a>
 <LI><a href="#[3df]">GUI_CalcColorDist</a>
 <LI><a href="#[204]">GUI_Clear</a>
 <LI><a href="#[263]">GUI_ClearRect</a>
 <LI><a href="#[264]">GUI_ClearRectEx</a>
 <LI><a href="#[207]">GUI_CreateDialogBox</a>
 <LI><a href="#[2d1]">GUI_DCACHE_Clear</a>
 <LI><a href="#[347]">GUI_DCACHE_SetClearCacheHook</a>
 <LI><a href="#[26e]">GUI_DEVICE_Create</a>
 <LI><a href="#[26f]">GUI_DEVICE_CreateAndLink</a>
 <LI><a href="#[271]">GUI_DEVICE_Delete</a>
 <LI><a href="#[270]">GUI_DEVICE_Link</a>
 <LI><a href="#[273]">GUI_DEVICE_LinkDevices</a>
 <LI><a href="#[33e]">GUI_DEVICE_Unlink</a>
 <LI><a href="#[2a5]">GUI_DEVICE_UnlinkTaskDevices</a>
 <LI><a href="#[2ae]">GUI_DEVICE__GetpDriver</a>
 <LI><a href="#[1ef]">GUI_DRAW_BITMAP_Create</a>
 <LI><a href="#[1ed]">GUI_DRAW__Draw</a>
 <LI><a href="#[274]">GUI_Delay</a>
 <LI><a href="#[27a]">GUI_DispString</a>
 <LI><a href="#[281]">GUI_DispStringAt</a>
 <LI><a href="#[147]">GUI_DispStringInRect</a>
 <LI><a href="#[282]">GUI_DispStringInRectMax</a>
 <LI><a href="#[205]">GUI_DrawBitmap</a>
 <LI><a href="#[1ec]">GUI_DrawGradientV</a>
 <LI><a href="#[1e2]">GUI_DrawHLine</a>
 <LI><a href="#[287]">GUI_DrawLine</a>
 <LI><a href="#[1eb]">GUI_DrawRect</a>
 <LI><a href="#[1e3]">GUI_DrawVLine</a>
 <LI><a href="#[276]">GUI_Exec</a>
 <LI><a href="#[28a]">GUI_Exec1</a>
 <LI><a href="#[1e4]">GUI_FillRect</a>
 <LI><a href="#[28c]">GUI_FillRoundedRect</a>
 <LI><a href="#[28e]">GUI_GetBitmapPixelIndex</a>
 <LI><a href="#[28f]">GUI_GetBitmapPixelIndexEx</a>
 <LI><a href="#[2c8]">GUI_GetBitsPerPixelEx</a>
 <LI><a href="#[22a]">GUI_GetBkColor</a>
 <LI><a href="#[291]">GUI_GetCharDistX</a>
 <LI><a href="#[292]">GUI_GetCharDistXEx</a>
 <LI><a href="#[1e6]">GUI_GetClientRect</a>
 <LI><a href="#[229]">GUI_GetColor</a>
 <LI><a href="#[25f]">GUI_GetCursorLayer</a>
 <LI><a href="#[27b]">GUI_GetFontDistY</a>
 <LI><a href="#[295]">GUI_GetLayerPosEx</a>
 <LI><a href="#[297]">GUI_GetOrg</a>
 <LI><a href="#[238]">GUI_GetPenSize</a>
 <LI><a href="#[252]">GUI_GetTime</a>
 <LI><a href="#[27c]">GUI_GetYAdjust</a>
 <LI><a href="#[35f]">GUI_GetYSizeOfFont</a>
 <LI><a href="#[2ca]">GUI_GetpfColor2IndexEx</a>
 <LI><a href="#[2c9]">GUI_GetpfIndex2ColorEx</a>
 <LI><a href="#[262]">GUI_GotoXY</a>
 <LI><a href="#[298]">GUI_Init</a>
 <LI><a href="#[1dd]">GUI_Lock</a>
 <LI><a href="#[2a6]">GUI_MEMDEV_Clear</a>
 <LI><a href="#[2a7]">GUI_MEMDEV_CopyToLCD</a>
 <LI><a href="#[2a8]">GUI_MEMDEV_CopyToLCDAt</a>
 <LI><a href="#[2ac]">GUI_MEMDEV_Create</a>
 <LI><a href="#[2ad]">GUI_MEMDEV_CreateEx</a>
 <LI><a href="#[203]">GUI_MEMDEV_CreateFixed32</a>
 <LI><a href="#[2b0]">GUI_MEMDEV_Delete</a>
 <LI><a href="#[2b2]">GUI_MEMDEV_Draw</a>
 <LI><a href="#[2bb]">GUI_MEMDEV_GetBitsPerPixel</a>
 <LI><a href="#[2bd]">GUI_MEMDEV_GetDataPtr</a>
 <LI><a href="#[2be]">GUI_MEMDEV_GetXSize</a>
 <LI><a href="#[2b7]">GUI_MEMDEV_GetYSize</a>
 <LI><a href="#[119]">GUI_MEMDEV_Paint1Static</a>
 <LI><a href="#[2b9]">GUI_MEMDEV_ReduceYSize</a>
 <LI><a href="#[14e]">GUI_MEMDEV_Select</a>
 <LI><a href="#[2ba]">GUI_MEMDEV_SetOrg</a>
 <LI><a href="#[2c0]">GUI_MEMDEV_Write</a>
 <LI><a href="#[2c4]">GUI_MEMDEV_WriteAt</a>
 <LI><a href="#[2af]">GUI_MEMDEV__CreateFixed</a>
 <LI><a href="#[137]">GUI_MEMDEV__WriteToActiveAlpha</a>
 <LI><a href="#[2c5]">GUI_MEMDEV__WriteToActiveAt</a>
 <LI><a href="#[2ab]">GUI_MEMDEV__WriteToActiveOpaque</a>
 <LI><a href="#[3fa]">GUI_MULTIBUF_Begin</a>
 <LI><a href="#[2ce]">GUI_MULTIBUF_BeginEx</a>
 <LI><a href="#[344]">GUI_MULTIBUF_Config</a>
 <LI><a href="#[2cf]">GUI_MULTIBUF_ConfigEx</a>
 <LI><a href="#[1b1]">GUI_MULTIBUF_Confirm</a>
 <LI><a href="#[3fb]">GUI_MULTIBUF_End</a>
 <LI><a href="#[2d0]">GUI_MULTIBUF_EndEx</a>
 <LI><a href="#[3bf]">GUI_MergeRect</a>
 <LI><a href="#[1e7]">GUI_MoveRect</a>
 <LI><a href="#[3a5]">GUI_PID_GetState</a>
 <LI><a href="#[3a4]">GUI_PID_IsEmpty</a>
 <LI><a href="#[2d2]">GUI_PID_StoreState</a>
 <LI><a href="#[2d4]">GUI_PollKeyMsg</a>
 <LI><a href="#[2d6]">GUI_QR_Create</a>
 <LI><a href="#[2e7]">GUI_QR_Draw</a>
 <LI><a href="#[2e8]">GUI_QR_GetInfo</a>
 <LI><a href="#[2e9]">GUI_ReadRectEx</a>
 <LI><a href="#[3e4]">GUI_RectsIntersect</a>
 <LI><a href="#[2eb]">GUI_RestoreContext</a>
 <LI><a href="#[2ec]">GUI_SPLINE_Create</a>
 <LI><a href="#[2ed]">GUI_SPLINE_Delete</a>
 <LI><a href="#[2ee]">GUI_SPLINE_DrawAA</a>
 <LI><a href="#[261]">GUI_SPRITE_SetPosition</a>
 <LI><a href="#[2f8]">GUI_SaveContext_W</a>
 <LI><a href="#[2a9]">GUI_SelectLCD</a>
 <LI><a href="#[2fa]">GUI_SelectLayer</a>
 <LI><a href="#[148]">GUI_SetBkColor</a>
 <LI><a href="#[152]">GUI_SetColor</a>
 <LI><a href="#[2fb]">GUI_SetColorIndex</a>
 <LI><a href="#[30e]">GUI_SetDefaultFont</a>
 <LI><a href="#[210]">GUI_SetDrawMode</a>
 <LI><a href="#[1e5]">GUI_SetFont</a>
 <LI><a href="#[260]">GUI_SetLayerPosEx</a>
 <LI><a href="#[2a1]">GUI_SetOrg</a>
 <LI><a href="#[1e8]">GUI_SetTextMode</a>
 <LI><a href="#[2d3]">GUI_SignalEvent</a>
 <LI><a href="#[2fe]">GUI_StoreKey</a>
 <LI><a href="#[2ff]">GUI_TIMER_Create</a>
 <LI><a href="#[301]">GUI_TIMER_Delete</a>
 <LI><a href="#[108]">GUI_TIMER_Exec</a>
 <LI><a href="#[303]">GUI_TIMER_GetFlag</a>
 <LI><a href="#[304]">GUI_TIMER_Restart</a>
 <LI><a href="#[305]">GUI_TIMER_SetPeriod</a>
 <LI><a href="#[306]">GUI_TIMER__GetFirstTimer</a>
 <LI><a href="#[307]">GUI_TIMER__GetNextTimerLin</a>
 <LI><a href="#[1ce]">GUI_TOUCH_StoreStateEx</a>
 <LI><a href="#[309]">GUI_UC_ConvertUC2UTF8</a>
 <LI><a href="#[30a]">GUI_UC_Encode</a>
 <LI><a href="#[22c]">GUI_UC__GetCharCodeInc</a>
 <LI><a href="#[280]">GUI_UC__NumChars2NumBytes</a>
 <LI><a href="#[3e8]">GUI_USAGE_AddRect</a>
 <LI><a href="#[2c6]">GUI_USAGE_BM_Create</a>
 <LI><a href="#[2b1]">GUI_USAGE_DecUseCnt</a>
 <LI><a href="#[1e0]">GUI_Unlock</a>
 <LI><a href="#[310]">GUI__ASinHQ</a>
 <LI><a href="#[30f]">GUI__ATan2</a>
 <LI><a href="#[311]">GUI__AllocAlphaBuffer</a>
 <LI><a href="#[313]">GUI__AlphaPreserveTrans</a>
 <LI><a href="#[315]">GUI__BIDI2_IsNSM</a>
 <LI><a href="#[317]">GUI__BIDI2_Log2Vis</a>
 <LI><a href="#[3]">GUI__BIDI_Log2VisBuffered</a>
 <LI><a href="#[3e0]">GUI__CompactPixelIndices</a>
 <LI><a href="#[31e]">GUI__CompactPixelIndicesEx</a>
 <LI><a href="#[299]">GUI__Config</a>
 <LI><a href="#[31f]">GUI__ConvertColor2Index</a>
 <LI><a href="#[27f]">GUI__DispLine</a>
 <LI><a href="#[285]">GUI__DispStringInRect</a>
 <LI><a href="#[323]">GUI__DoAlphaBlending</a>
 <LI><a href="#[4]">GUI__DrawCharEXT</a>
 <LI><a href="#[227]">GUI__DrawNonExistingCharacter</a>
 <LI><a href="#[1e1]">GUI__DrawTwinArc4</a>
 <LI><a href="#[324]">GUI__ExpandPixelIndicesEx</a>
 <LI><a href="#[312]">GUI__GetAlphaBuffer</a>
 <LI><a href="#[27e]">GUI__GetLineDistX</a>
 <LI><a href="#[27d]">GUI__GetLineNumChars</a>
 <LI><a href="#[22b]">GUI__GetNonExistingCharWidth</a>
 <LI><a href="#[22d]">GUI__GetOverlap</a>
 <LI><a href="#[326]">GUI__GetPresentationForm</a>
 <LI><a href="#[322]">GUI__HandleEOLine</a>
 <LI><a href="#[3ae]">GUI__IntersectRect</a>
 <LI><a href="#[284]">GUI__IntersectRects</a>
 <LI><a href="#[3e6]">GUI__IsArabicCharacter</a>
 <LI><a href="#[213]">GUI__ManageCache</a>
 <LI><a href="#[329]">GUI__ManageCacheEx</a>
 <LI><a href="#[7]">GUI__MixColors</a>
 <LI><a href="#[37b]">GUI__ReduceRect</a>
 <LI><a href="#[232]">GUI__RegisterExit</a>
 <LI><a href="#[1f3]">GUI__SetText</a>
 <LI><a href="#[3f9]">GUI__memset</a>
 <LI><a href="#[28d]">GUI__sqrt32</a>
 <LI><a href="#[32a]">GUI__strcmp_hp</a>
 <LI><a href="#[361]">GUI__strlen</a>
 <LI><a href="#[215]">GUI_sin</a>
 <LI><a href="#[c]">LCD_AA_MixColors16</a>
 <LI><a href="#[314]">LCD_AA_SetOrMask</a>
 <LI><a href="#[2ef]">LCD_Color2Index</a>
 <LI><a href="#[211]">LCD_DrawBitmap</a>
 <LI><a href="#[fc]">LCD_DrawHLine</a>
 <LI><a href="#[19f]">LCD_DrawPixel</a>
 <LI><a href="#[289]">LCD_DrawVLine</a>
 <LI><a href="#[225]">LCD_FillRect</a>
 <LI><a href="#[32f]">LCD_GetBitsPerPixelEx</a>
 <LI><a href="#[290]">LCD_GetBkColorIndex</a>
 <LI><a href="#[294]">LCD_GetColorIndex</a>
 <LI><a href="#[330]">LCD_GetMirrorXEx</a>
 <LI><a href="#[331]">LCD_GetMirrorYEx</a>
 <LI><a href="#[332]">LCD_GetNumColors</a>
 <LI><a href="#[333]">LCD_GetNumColorsEx</a>
 <LI><a href="#[334]">LCD_GetNumLayers</a>
 <LI><a href="#[335]">LCD_GetPalette</a>
 <LI><a href="#[2f0]">LCD_GetPixelColor</a>
 <LI><a href="#[336]">LCD_GetPixelIndex</a>
 <LI><a href="#[296]">LCD_GetPosEx</a>
 <LI><a href="#[337]">LCD_GetSwapXYEx</a>
 <LI><a href="#[2b5]">LCD_GetVXSizeEx</a>
 <LI><a href="#[23f]">LCD_GetVXSizeMax</a>
 <LI><a href="#[2b6]">LCD_GetVYSizeEx</a>
 <LI><a href="#[339]">LCD_GetXSize</a>
 <LI><a href="#[29c]">LCD_GetXSizeDisplay</a>
 <LI><a href="#[2b3]">LCD_GetXSizeEx</a>
 <LI><a href="#[29e]">LCD_GetXSizeMax</a>
 <LI><a href="#[33a]">LCD_GetYSize</a>
 <LI><a href="#[29d]">LCD_GetYSizeDisplay</a>
 <LI><a href="#[2b4]">LCD_GetYSizeEx</a>
 <LI><a href="#[29f]">LCD_GetYSizeMax</a>
 <LI><a href="#[b]">LCD_GetpPalConvTableBM</a>
 <LI><a href="#[241]">LCD_GetpPalConvTableUncached</a>
 <LI><a href="#[240]">LCD_Index2Color</a>
 <LI><a href="#[18b]">LCD_Index2Color_8888</a>
 <LI><a href="#[10b]">LCD_Index2Color_M8888I</a>
 <LI><a href="#[29b]">LCD_Init</a>
 <LI><a href="#[33b]">LCD_InitColors</a>
 <LI><a href="#[33c]">LCD_InitLUT</a>
 <LI><a href="#[2f9]">LCD_SelectLCD</a>
 <LI><a href="#[21e]">LCD_SetBkColor</a>
 <LI><a href="#[343]">LCD_SetBkColorIndex</a>
 <LI><a href="#[33f]">LCD_SetClipRectEx</a>
 <LI><a href="#[2c3]">LCD_SetClipRectMax</a>
 <LI><a href="#[21f]">LCD_SetColor</a>
 <LI><a href="#[2fc]">LCD_SetColorIndex</a>
 <LI><a href="#[2a0]">LCD_SetDisplaySize</a>
 <LI><a href="#[220]">LCD_SetDrawMode</a>
 <LI><a href="#[33d]">LCD_SetLUTEntryEx</a>
 <LI><a href="#[121]">LCD_SetPixelAA4_Trans</a>
 <LI><a href="#[2f1]">LCD_SetPixelIndex</a>
 <LI><a href="#[2fd]">LCD_SetPosEx</a>
 <LI><a href="#[340]">LCD_SetSizeEx</a>
 <LI><a href="#[341]">LCD_SetVRAMAddrEx</a>
 <LI><a href="#[342]">LCD_SetVSizeEx</a>
 <LI><a href="#[2c2]">LCD_UpdateColorIndices</a>
 <LI><a href="#[2cc]">LCD__DrawBitmap_1bpp</a>
 <LI><a href="#[349]">LCD__GetBPP</a>
 <LI><a href="#[2bc]">LCD__GetBPPDevice</a>
 <LI><a href="#[34a]">LISTWHEEL_AddString</a>
 <LI><a href="#[10f]">LISTWHEEL_Callback</a>
 <LI><a href="#[359]">LISTWHEEL_CreateEx</a>
 <LI><a href="#[35a]">LISTWHEEL_CreateUser</a>
 <LI><a href="#[35c]">LISTWHEEL_GetPos</a>
 <LI><a href="#[35d]">LISTWHEEL_MoveToPos</a>
 <LI><a href="#[110]">LISTWHEEL_OwnerDraw</a>
 <LI><a href="#[14c]">LISTWHEEL_SetBkColor</a>
 <LI><a href="#[362]">LISTWHEEL_SetDeceleration</a>
 <LI><a href="#[363]">LISTWHEEL_SetFont</a>
 <LI><a href="#[365]">LISTWHEEL_SetSel</a>
 <LI><a href="#[35b]">LISTWHEEL_SetText</a>
 <LI><a href="#[366]">LISTWHEEL_SetTextAlign</a>
 <LI><a href="#[14b]">LISTWHEEL_SetTextColor</a>
 <LI><a href="#[1d6]">WIDGET_AndState</a>
 <LI><a href="#[1cf]">WIDGET_HandleActive</a>
 <LI><a href="#[267]">WIDGET_OrState</a>
 <LI><a href="#[37e]">WIDGET_SetFocusable</a>
 <LI><a href="#[37d]">WIDGET_SetState</a>
 <LI><a href="#[1df]">WIDGET__Init</a>
 <LI><a href="#[111]">WINDOW_Callback</a>
 <LI><a href="#[1a7]">WINDOW_CreateIndirect</a>
 <LI><a href="#[384]">WINDOW_CreateUser</a>
 <LI><a href="#[2aa]">WM_Activate</a>
 <LI><a href="#[385]">WM_BringToBottom</a>
 <LI><a href="#[379]">WM_BringToTop</a>
 <LI><a href="#[38c]">WM_CreateTimer</a>
 <LI><a href="#[1de]">WM_CreateWindowAsChild</a>
 <LI><a href="#[2c1]">WM_Deactivate</a>
 <LI><a href="#[1d4]">WM_DefaultProc</a>
 <LI><a href="#[354]">WM_DeleteTimer</a>
 <LI><a href="#[26d]">WM_DeleteWindow</a>
 <LI><a href="#[28b]">WM_Exec</a>
 <LI><a href="#[38b]">WM_ForEachDesc</a>
 <LI><a href="#[3a2]">WM_GetActiveWindow</a>
 <LI><a href="#[293]">WM_GetClientRect</a>
 <LI><a href="#[34e]">WM_GetClientRectEx</a>
 <LI><a href="#[266]">WM_GetClientWindow</a>
 <LI><a href="#[265]">WM_GetDesktopWindow</a>
 <LI><a href="#[398]">WM_GetDialogItem</a>
 <LI><a href="#[39a]">WM_GetFirstChild</a>
 <LI><a href="#[26a]">WM_GetFocusedWindow</a>
 <LI><a href="#[360]">WM_GetHasTrans</a>
 <LI><a href="#[39b]">WM_GetId</a>
 <LI><a href="#[34b]">WM_GetInsideRect</a>
 <LI><a href="#[350]">WM_GetInsideRectEx</a>
 <LI><a href="#[387]">WM_GetParent</a>
 <LI><a href="#[39c]">WM_GetUserData</a>
 <LI><a href="#[39e]">WM_GetWindowOrgX</a>
 <LI><a href="#[39f]">WM_GetWindowOrgY</a>
 <LI><a href="#[3a0]">WM_GetWindowRectEx</a>
 <LI><a href="#[3a1]">WM_GetWindowSizeX</a>
 <LI><a href="#[3a3]">WM_GetWindowSizeY</a>
 <LI><a href="#[ff]">WM_HandlePID</a>
 <LI><a href="#[34d]">WM_HasCaptured</a>
 <LI><a href="#[380]">WM_HasFocus</a>
 <LI><a href="#[2a2]">WM_Init</a>
 <LI><a href="#[38e]">WM_InvalidateRect</a>
 <LI><a href="#[1f2]">WM_InvalidateWindow</a>
 <LI><a href="#[3b2]">WM_InvalidateWindowAndDescs</a>
 <LI><a href="#[3b3]">WM_InvalidateWindowAndDescsEx</a>
 <LI><a href="#[3b4]">WM_IsEnabled</a>
 <LI><a href="#[3b5]">WM_IsFocusable</a>
 <LI><a href="#[37f]">WM_IsWindow</a>
 <LI><a href="#[3b7]">WM_MOTION_Enable</a>
 <LI><a href="#[407]">WM_MULTIBUF_Enable</a>
 <LI><a href="#[3ba]">WM_MoveTo</a>
 <LI><a href="#[3bc]">WM_MoveWindow</a>
 <LI><a href="#[357]">WM_NotifyParent</a>
 <LI><a href="#[2d5]">WM_OnKey</a>
 <LI><a href="#[3ab]">WM_PID__SetPrevState</a>
 <LI><a href="#[358]">WM_ReleaseCapture</a>
 <LI><a href="#[3be]">WM_ResizeWindow</a>
 <LI><a href="#[356]">WM_RestartTimer</a>
 <LI><a href="#[3a7]">WM_Screen2hWin</a>
 <LI><a href="#[38d]">WM_SelectWindow</a>
 <LI><a href="#[397]">WM_SendMessage</a>
 <LI><a href="#[269]">WM_SendMessageNoPara</a>
 <LI><a href="#[391]">WM_SendToParent</a>
 <LI><a href="#[14a]">WM_SetCallback</a>
 <LI><a href="#[352]">WM_SetCapture</a>
 <LI><a href="#[378]">WM_SetFocus</a>
 <LI><a href="#[26c]">WM_SetFocusOnNextChild</a>
 <LI><a href="#[383]">WM_SetFocusOnPrevChild</a>
 <LI><a href="#[1e9]">WM_SetHasTrans</a>
 <LI><a href="#[3c6]">WM_SetSize</a>
 <LI><a href="#[283]">WM_SetUserClipRect</a>
 <LI><a href="#[3c8]">WM_SetUserData</a>
 <LI><a href="#[268]">WM_ShowWindow</a>
 <LI><a href="#[3c5]">WM_ValidateWindow</a>
 <LI><a href="#[3c7]">WM__ActivateClipRect</a>
 <LI><a href="#[3a6]">WM__AddCriticalHandle</a>
 <LI><a href="#[3af]">WM__ClipAtParentBorders</a>
 <LI><a href="#[392]">WM__DeleteAssocTimer</a>
 <LI><a href="#[393]">WM__DetachWindow</a>
 <LI><a href="#[396]">WM__ForEachDesc</a>
 <LI><a href="#[390]">WM__GetClientRectEx</a>
 <LI><a href="#[37a]">WM__GetClientRectWin</a>
 <LI><a href="#[3cb]">WM__GetFirstSibling</a>
 <LI><a href="#[3c2]">WM__GetFocusedChild</a>
 <LI><a href="#[3cd]">WM__GetLastSibling</a>
 <LI><a href="#[23b]">WM__GetNextIVR</a>
 <LI><a href="#[236]">WM__GetOrgX_AA</a>
 <LI><a href="#[237]">WM__GetOrgY_AA</a>
 <LI><a href="#[386]">WM__GetPrevSibling</a>
 <LI><a href="#[39d]">WM__GetUserDataEx</a>
 <LI><a href="#[23a]">WM__InitIVRSearch</a>
 <LI><a href="#[38a]">WM__InsertWindowIntoList</a>
 <LI><a href="#[3ad]">WM__InvalidateDrawAndDescs</a>
 <LI><a href="#[3d1]">WM__InvalidateParent</a>
 <LI><a href="#[3b0]">WM__InvalidateRect</a>
 <LI><a href="#[388]">WM__InvalidateRectEx</a>
 <LI><a href="#[382]">WM__IsAncestor</a>
 <LI><a href="#[381]">WM__IsAncestorOrSelf</a>
 <LI><a href="#[3cc]">WM__IsChild</a>
 <LI><a href="#[1ea]">WM__IsEnabled</a>
 <LI><a href="#[3a8]">WM__IsInModalArea</a>
 <LI><a href="#[3b6]">WM__IsWindow</a>
 <LI><a href="#[3bb]">WM__MoveTo</a>
 <LI><a href="#[3bd]">WM__MoveWindow</a>
 <LI><a href="#[3d3]">WM__Paint</a>
 <LI><a href="#[11a]">WM__Paint1</a>
 <LI><a href="#[3ac]">WM__RemoveCriticalHandle</a>
 <LI><a href="#[389]">WM__RemoveWindowFromList</a>
 <LI><a href="#[38f]">WM__SendMessage</a>
 <LI><a href="#[3aa]">WM__SendMessageIfEnabled</a>
 <LI><a href="#[2b8]">WM__SendMessageNoPara</a>
 <LI><a href="#[3c0]">WM__SendMsgNoData</a>
 <LI><a href="#[3d7]">WM__SendPIDMessage</a>
 <LI><a href="#[3a9]">WM__SendTouchMessage</a>
 <LI><a href="#[3b8]">WM__SetMotionCallback</a>
 <LI><a href="#[3c9]">WM__SetUserDataEx</a>
 <LI><a href="#[37c]">WM__UpdateChildPositions</a>
 <LI><a href="#[34c]">_CheckTimer</a>
 <LI><a href="#[34f]">_CreateTimer</a>
 <LI><a href="#[35e]">_GetDestination</a>
 <LI><a href="#[355]">_GetDistToNextItem</a>
 <LI><a href="#[353]">_OnPressed</a>
 <LI><a href="#[364]">_RecalcDatasizeY</a>
 <LI><a href="#[351]">_StopAutoMove</a>
 <LI><a href="#[1d5]">_OnButtonPressed</a>
 <LI><a href="#[1d9]">_OnButtonReleased</a>
 <LI><a href="#[1d7]">_OnPidStateChange</a>
 <LI><a href="#[f]">_OnTouchDefault</a>
 <LI><a href="#[2]">_Create</a>
 <LI><a href="#[1]">_Paint</a>
 <LI><a href="#[134]">_CopyBuffer</a>
 <LI><a href="#[159]">_DrawBitmap</a>
 <LI><a href="#[15a]">_DrawHLine</a>
 <LI><a href="#[15b]">_DrawVLine</a>
 <LI><a href="#[15c]">_FillRect</a>
 <LI><a href="#[163]">_GetDevData</a>
 <LI><a href="#[161]">_GetDevFunc</a>
 <LI><a href="#[162]">_GetDevProp</a>
 <LI><a href="#[15d]">_GetPixelIndex</a>
 <LI><a href="#[129]">_GetPos</a>
 <LI><a href="#[164]">_GetRect</a>
 <LI><a href="#[12d]">_Init</a>
 <LI><a href="#[3e1]">_InitOnce</a>
 <LI><a href="#[12f]">_Off</a>
 <LI><a href="#[12e]">_On</a>
 <LI><a href="#[126]">_ReadRect</a>
 <LI><a href="#[127]">_SetAlpha</a>
 <LI><a href="#[130]">_SetAlphaMode</a>
 <LI><a href="#[132]">_SetChroma</a>
 <LI><a href="#[131]">_SetChromaMode</a>
 <LI><a href="#[133]">_SetDevFunc</a>
 <LI><a href="#[160]">_SetOrg</a>
 <LI><a href="#[15e]">_SetPixelIndex</a>
 <LI><a href="#[128]">_SetPos</a>
 <LI><a href="#[12c]">_SetSize</a>
 <LI><a href="#[125]">_SetVRAMAddr</a>
 <LI><a href="#[136]">_SetVRAM_BufferPTR</a>
 <LI><a href="#[12b]">_SetVSize</a>
 <LI><a href="#[12a]">_SetVis</a>
 <LI><a href="#[135]">_ShowBuffer</a>
 <LI><a href="#[15f]">_XorPixel</a>
 <LI><a href="#[113]">_cbTimer</a>
 <LI><a href="#[3d8]">_AimDestination</a>
 <LI><a href="#[3d9]">_AimDestinationXY</a>
 <LI><a href="#[3e2]">_CreatehCrit</a>
 <LI><a href="#[3b9]">_ExecMotion</a>
 <LI><a href="#[3f0]">_GetConfirmation</a>
 <LI><a href="#[3ed]">_GetContext</a>
 <LI><a href="#[124]">_GetMotionTagR</a>
 <LI><a href="#[120]">_GetMotionTagXY</a>
 <LI><a href="#[3f2]">_GetSigns</a>
 <LI><a href="#[3f1]">_GetphCrit</a>
 <LI><a href="#[123]">_Motion_AutoWithinParent</a>
 <LI><a href="#[122]">_Motion_ByWindow</a>
 <LI><a href="#[3f6]">_MoveToNearestSnapPosition</a>
 <LI><a href="#[3fd]">_MoveToNearestSnapPositionXY</a>
 <LI><a href="#[116]">_OnExit</a>
 <LI><a href="#[3f5]">_ProcessMotion</a>
 <LI><a href="#[3f4]">_SavePrivateContextOnDemand</a>
 <LI><a href="#[3ee]">_Screen2hWin</a>
 <LI><a href="#[3f3]">_StartMotionTimer</a>
 <LI><a href="#[3ef]">_StopMotionOnHit</a>
 <LI><a href="#[117]">_cbMotion</a>
 <LI><a href="#[138]">_cbTimer</a>
 <LI><a href="#[3d4]">WM__PaintWinAndOverlays</a>
 <LI><a href="#[395]">_Exec1Draw</a>
 <LI><a href="#[394]">_Exec1Input</a>
 <LI><a href="#[3cf]">_Findx0</a>
 <LI><a href="#[3d0]">_Findx1</a>
 <LI><a href="#[3ce]">_Findy1</a>
 <LI><a href="#[3b1]">_Invalidate1Abs</a>
 <LI><a href="#[115]">_OnExit</a>
 <LI><a href="#[3d6]">_Paint1Trans</a>
 <LI><a href="#[3d5]">_PaintTransChildren</a>
 <LI><a href="#[3ca]">_SetClipRectUserIntersect</a>
 <LI><a href="#[114]">_cbBackWin</a>
 <LI><a href="#[118]">_cbPaintMemDev</a>
 <LI><a href="#[1a0]">_MULTIBUF_Begin</a>
 <LI><a href="#[1a1]">_MULTIBUF_End</a>
 <LI><a href="#[399]">_GetDialogItem</a>
 <LI><a href="#[3d2]">_MoveDescendants</a>
 <LI><a href="#[338]">_GetMaxValue</a>
 <LI><a href="#[11f]">_Draw</a>
 <LI><a href="#[167]">_DrawBitmap_RLEAlpha</a>
 <LI><a href="#[11e]">_DrawClip</a>
 <LI><a href="#[247]">_AddFreeMemory</a>
 <LI><a href="#[244]">_Alloc</a>
 <LI><a href="#[3da]">_EnlargeBlocks</a>
 <LI><a href="#[248]">_InitOnce</a>
 <LI><a href="#[24a]">_RemoveFreeBlock</a>
 <LI><a href="#[249]">_RemoveHoles</a>
 <LI><a href="#[10a]">_OnExit</a>
 <LI><a href="#[3dc]">_BS_Allocate</a>
 <LI><a href="#[2db]">_BS_Append</a>
 <LI><a href="#[2df]">_BS_AppendBytes</a>
 <LI><a href="#[2de]">_BS_AppendNum</a>
 <LI><a href="#[3dd]">_BS_Delete</a>
 <LI><a href="#[2d7]">_Eat8</a>
 <LI><a href="#[2d8]">_EatAn</a>
 <LI><a href="#[2e2]">_FRAME_FILLER_Next</a>
 <LI><a href="#[2dc]">_Free</a>
 <LI><a href="#[2e0]">_InitRS</a>
 <LI><a href="#[3fc]">_Malloc</a>
 <LI><a href="#[2e6]">_QR_CalcN1N3</a>
 <LI><a href="#[2e5]">_QR_CalcRunLength</a>
 <LI><a href="#[2dd]">_QR_INPUT_Delete</a>
 <LI><a href="#[2da]">_QR_INPUT_EncodeBitStream</a>
 <LI><a href="#[2d9]">_QR_INPUT_LIST_CreateEntry</a>
 <LI><a href="#[3fe]">_QR_INPUT_LIST_DeleteEntry</a>
 <LI><a href="#[100]">_QR_Mask0</a>
 <LI><a href="#[101]">_QR_Mask1</a>
 <LI><a href="#[102]">_QR_Mask2</a>
 <LI><a href="#[103]">_QR_Mask3</a>
 <LI><a href="#[104]">_QR_Mask4</a>
 <LI><a href="#[105]">_QR_Mask5</a>
 <LI><a href="#[106]">_QR_Mask6</a>
 <LI><a href="#[107]">_QR_Mask7</a>
 <LI><a href="#[2e3]">_QR_RAW_Delete</a>
 <LI><a href="#[2e1]">_RS_BLOCK_InitBlock</a>
 <LI><a href="#[166]">_CallDrawBitmapHW</a>
 <LI><a href="#[3de]">_DoClipping</a>
 <LI><a href="#[3e7]">_DrawBitmap</a>
 <LI><a href="#[165]">_DrawBitmap_M8888I</a>
 <LI><a href="#[10]">_SetPixelAlpha</a>
 <LI><a href="#[191]">_Color2IndexBulk_M8888I</a>
 <LI><a href="#[18f]">_Color2Index_M8888I</a>
 <LI><a href="#[190]">_GetIndexMask_M8888I</a>
 <LI><a href="#[192]">_Index2ColorBulk_M8888I</a>
 <LI><a href="#[214]">_DrawLine1Ex</a>
 <LI><a href="#[3ea]">_SetLineColor</a>
 <LI><a href="#[fd]">_OnExit</a>
 <LI><a href="#[fb]">_ExecAnimations</a>
 <LI><a href="#[fa]">_OnExit</a>
 <LI><a href="#[254]">_Start</a>
 <LI><a href="#[3ec]">_StopAuto</a>
 <LI><a href="#[2cb]">_Convert16</a>
 <LI><a href="#[2cd]">_Convert8</a>
 <LI><a href="#[2bf]">_CreateStaticDevice</a>
 <LI><a href="#[177]">_DrawBitmap</a>
 <LI><a href="#[178]">_DrawHLine</a>
 <LI><a href="#[179]">_DrawVLine</a>
 <LI><a href="#[17a]">_FillRect</a>
 <LI><a href="#[181]">_GetDevData</a>
 <LI><a href="#[17f]">_GetDevFunc</a>
 <LI><a href="#[180]">_GetDevProp</a>
 <LI><a href="#[17b]">_GetPixelIndex</a>
 <LI><a href="#[182]">_GetRect</a>
 <LI><a href="#[17e]">_SetOrg</a>
 <LI><a href="#[17c]">_SetPixelIndex</a>
 <LI><a href="#[3e9]">_XY2PTR</a>
 <LI><a href="#[17d]">_XorPixel</a>
 <LI><a href="#[155]">GUI_USAGE_BM_AddHLine</a>
 <LI><a href="#[154]">GUI_USAGE_BM_AddPixel</a>
 <LI><a href="#[156]">GUI_USAGE_BM_Clear</a>
 <LI><a href="#[158]">GUI_USAGE_BM_GetNextDirty</a>
 <LI><a href="#[157]">_GUI_USAGE_BM_Delete</a>
 <LI><a href="#[19c]">_DrawBitmap</a>
 <LI><a href="#[19d]">_GetXSize</a>
 <LI><a href="#[19e]">_GetYSize</a>
 <LI><a href="#[195]">_DrawDown</a>
 <LI><a href="#[196]">_DrawDownRect</a>
 <LI><a href="#[197]">_DrawFlat</a>
 <LI><a href="#[193]">_DrawUp</a>
 <LI><a href="#[194]">_DrawUpRect</a>
 <LI><a href="#[19a]">_DrawDown</a>
 <LI><a href="#[19b]">_DrawDownRect</a>
 <LI><a href="#[198]">_DrawUp</a>
 <LI><a href="#[199]">_DrawUpRect</a>
 <LI><a href="#[3c1]">_Screen2hWin</a>
 <LI><a href="#[3c4]">_GetPrevChild</a>
 <LI><a href="#[3c3]">_GetNextChild</a>
 <LI><a href="#[112]">_cbInvalidateOne</a>
 <LI><a href="#[11b]">_OnExit</a>
 <LI><a href="#[10d]">_OnExit</a>
 <LI><a href="#[230]">_GetTaskNo</a>
 <LI><a href="#[f7]">_OnExit</a>
 <LI><a href="#[1a5]">_SetBkColor</a>
 <LI><a href="#[1a4]">_SetColor</a>
 <LI><a href="#[1a6]">_SetDrawMode</a>
 <LI><a href="#[21c]">_Add</a>
 <LI><a href="#[286]">_DrawGradient</a>
 <LI><a href="#[300]">_Link</a>
 <LI><a href="#[109]">_OnExit</a>
 <LI><a href="#[302]">_Unlink</a>
 <LI><a href="#[185]">_CalcSizeOfChar</a>
 <LI><a href="#[186]">_Encode</a>
 <LI><a href="#[183]">_GetCharCode</a>
 <LI><a href="#[184]">_GetCharSize</a>
 <LI><a href="#[18d]">_Color2IndexBulk</a>
 <LI><a href="#[18a]">_Color2Index_8888</a>
 <LI><a href="#[18c]">_GetIndexMask_8888</a>
 <LI><a href="#[18e]">_Index2ColorBulk</a>
 <LI><a href="#[fe]">_OnExit</a>
 <LI><a href="#[321]">_DispLine</a>
 <LI><a href="#[1a3]">_DrawNonExistingCharacter_Dummy</a>
 <LI><a href="#[1a2]">_GetNonExistingCharWidth_Dummy</a>
 <LI><a href="#[10c]">_OnExit</a>
 <LI><a href="#[288]">_DrawRect</a>
 <LI><a href="#[325]">_GetTwinArcPara</a>
 <LI><a href="#[e]">_DrawCharAA4_Trans</a>
 <LI><a href="#[f9]">_DrawHLine</a>
 <LI><a href="#[23c]">_FlushLine</a>
 <LI><a href="#[f8]">_OnExit</a>
 <LI><a href="#[2c7]">_WriteToActiveAlpha</a>
 <LI><a href="#[187]">_Color2Index_0</a>
 <LI><a href="#[189]">_GetIndexMask_0</a>
 <LI><a href="#[188]">_Index2Color_0</a>
 <LI><a href="#[2ea]">LCD_ReadRectEx</a>
 <LI><a href="#[31a]">_ConstructContext</a>
 <LI><a href="#[3e3]">_DecideParaLevel</a>
 <LI><a href="#[319]">_DoJoiningAndDecoding</a>
 <LI><a href="#[31d]">_DropContext</a>
 <LI><a href="#[3eb]">_Free</a>
 <LI><a href="#[316]">_GetAttribs</a>
 <LI><a href="#[3e5]">_GetNextChar</a>
 <LI><a href="#[402]">_IsPriorContextL</a>
 <LI><a href="#[403]">_IsPriorContextRANEN</a>
 <LI><a href="#[31c]">_ReorderAndMirror</a>
 <LI><a href="#[401]">_ReverseRange</a>
 <LI><a href="#[404]">_SetBracketPairBC</a>
 <LI><a href="#[31b]">_UBA</a>
 <LI><a href="#[143]">_UBA_Empty</a>
 <LI><a href="#[13b]">_UBA_ResolveAL</a>
 <LI><a href="#[139]">_UBA_ResolveCombiningMarks</a>
 <LI><a href="#[13f]">_UBA_ResolveEN</a>
 <LI><a href="#[13e]">_UBA_ResolveESCSET</a>
 <LI><a href="#[13a]">_UBA_ResolveEuropeanNumbers</a>
 <LI><a href="#[141]">_UBA_ResolveNeutralsByContext</a>
 <LI><a href="#[142]">_UBA_ResolveNeutralsByLevel</a>
 <LI><a href="#[140]">_UBA_ResolvePairedBrackets</a>
 <LI><a href="#[13c]">_UBA_ResolveSeparators</a>
 <LI><a href="#[13d]">_UBA_ResolveTerminators</a>
 <LI><a href="#[400]">_UBA_RuleDispatch</a>
 <LI><a href="#[328]">_GetLigature</a>
 <LI><a href="#[327]">_GetTableIndex</a>
 <LI><a href="#[2f3]">_CreateBuffer</a>
 <LI><a href="#[3f7]">_FlushBuffer</a>
 <LI><a href="#[2f5]">_GetBkIndex</a>
 <LI><a href="#[2f6]">_GetBkIndexAlpha</a>
 <LI><a href="#[2f2]">_GetDeviceRect</a>
 <LI><a href="#[2f7]">_ReleaseBuffer</a>
 <LI><a href="#[2f4]">_SetBkIndexBuffered</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3b0]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b0]">WM__InvalidateRect</a><BR>
 <LI><a href="#[3b3]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b3]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[3ad]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ad]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[38f]">WM__SendMessage</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d4]">WM_DefaultProc</a><BR>
 <LI><a href="#[3be]">WM_ResizeWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37c]">WM__UpdateChildPositions</a><BR>
 <LI><a href="#[3d2]">_MoveDescendants</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d2]">_MoveDescendants</a><BR>
 <LI><a href="#[396]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[396]">WM__ForEachDesc</a><BR>
 <LI><a href="#[3da]">_EnlargeBlocks</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244]">_Alloc</a><BR>
 <LI><a href="#[3ce]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ce]">_Findy1</a><BR>
 <LI><a href="#[3d0]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d0]">_Findx1</a><BR>
 <LI><a href="#[3cf]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3cf]">_Findx0</a><BR>
 <LI><a href="#[226]">GUIPROP_EXT__FindChar</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[226]">GUIPROP_EXT__FindChar</a><BR>
 <LI><a href="#[3e3]">_DecideParaLevel</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e3]">_DecideParaLevel</a><BR>
 <LI><a href="#[3c1]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3c1]">_Screen2hWin</a><BR>
 <LI><a href="#[26d]">WM_DeleteWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26d]">WM_DeleteWindow</a><BR>
 <LI><a href="#[3d5]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d5]">_PaintTransChildren</a><BR>
 <LI><a href="#[3b2]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b2]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[399]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[399]">_GetDialogItem</a><BR>
 <LI><a href="#[2da]">_QR_INPUT_EncodeBitStream</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2da]">_QR_INPUT_EncodeBitStream</a><BR>
 <LI><a href="#[191]">_Color2IndexBulk_M8888I</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[191]">_Color2IndexBulk_M8888I</a><BR>
 <LI><a href="#[192]">_Index2ColorBulk_M8888I</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[192]">_Index2ColorBulk_M8888I</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[97]">ACMP1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[98]">ACMP2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[99]">ACMP3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[9a]">ACMP4_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[5f]">ADC1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[60]">ADC2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[95]">ADC_ETC_ERROR_IRQ_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[92]">ADC_ETC_IRQ0_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[93]">ADC_ETC_IRQ1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[94]">ADC_ETC_IRQ2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[53]">BEE_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[f3]">BUTTON_Callback</a> from BUTTON.o(.text.BUTTON_Callback) referenced 2 times from BUTTON.o(.text.BUTTON_CreateUser)
 <LI><a href="#[1a8]">BUTTON_CreateIndirect</a> from BUTTON.o(.text.BUTTON_CreateIndirect) referenced 3 times from weather.o(.rodata._aDialogCreate)
 <LI><a href="#[0]">BUTTON_DrawSkinFlex</a> from BUTTON_SkinFlex.o(.text.BUTTON_DrawSkinFlex) referenced 2 times from BUTTON.o(.data.BUTTON__DefaultProps)
 <LI><a href="#[145]">BUTTON_SetBitmapEx</a> from BUTTON_Bitmap.o(.text.BUTTON_SetBitmapEx) referenced from emwin_slide_show.o(.text._cbBk)
 <LI><a href="#[16]">BusFault_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[de]">CAN1_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[40]">CAN1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[df]">CAN2_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[41]">CAN2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ef]">CAN3_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[b6]">CAN3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[7b]">CCM_1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[7c]">CCM_2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[f1]">CLOCK_SetDiv</a> from clock_config.o(.text.CLOCK_SetDiv) referenced from clock_config.o(.text.BOARD_BootClockRUN)
 <LI><a href="#[f2]">CLOCK_SetMux</a> from clock_config.o(.text.CLOCK_SetMux) referenced from clock_config.o(.text.BOARD_BootClockRUN)
 <LI><a href="#[2f]">CORE_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[47]">CSI_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[4d]">CSU_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[2d]">CTI0_ERROR_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[2e]">CTI1_ERROR_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[61]">DCDC_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[4e]">DCP_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[4f]">DCP_VMI_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[bd]">DMA0_DMA16_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[1c]">DMA0_DMA16_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c7]">DMA10_DMA26_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[26]">DMA10_DMA26_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c8]">DMA11_DMA27_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[27]">DMA11_DMA27_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c9]">DMA12_DMA28_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[28]">DMA12_DMA28_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ca]">DMA13_DMA29_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[29]">DMA13_DMA29_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[cb]">DMA14_DMA30_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[2a]">DMA14_DMA30_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[cc]">DMA15_DMA31_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[2b]">DMA15_DMA31_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[be]">DMA1_DMA17_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[1d]">DMA1_DMA17_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[bf]">DMA2_DMA18_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[1e]">DMA2_DMA18_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c0]">DMA3_DMA19_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[1f]">DMA3_DMA19_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c1]">DMA4_DMA20_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[20]">DMA4_DMA20_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c2]">DMA5_DMA21_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[21]">DMA5_DMA21_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c3]">DMA6_DMA22_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[22]">DMA6_DMA22_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c4]">DMA7_DMA23_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[23]">DMA7_DMA23_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c5]">DMA8_DMA24_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[24]">DMA8_DMA24_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c6]">DMA9_DMA25_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[25]">DMA9_DMA25_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[cd]">DMA_ERROR_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[2c]">DMA_ERROR_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[19]">DebugMon_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[11]">DefaultISR</a> from startup_mimxrt1062.o(.text) referenced 2 times from fsl_lpuart.o(.data.s_lpuartIsr)
 <LI><a href="#[11]">DefaultISR</a> from startup_mimxrt1062.o(.text) referenced 81 times from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[9d]">ENC1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[9e]">ENC2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[9f]">ENC3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a0]">ENC4_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ee]">ENET2_1588_Timer_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[b5]">ENET2_1588_Timer_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ed]">ENET2_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[b4]">ENET2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ec]">ENET_1588_Timer_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[8f]">ENET_1588_Timer_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[eb]">ENET_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[8e]">ENET_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[7a]">EWM_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e5]">FLEXIO1_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[76]">FLEXIO1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e6]">FLEXIO2_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[77]">FLEXIO2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[f0]">FLEXIO3_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[b8]">FLEXIO3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[42]">FLEXRAM_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e7]">FLEXSPI2_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[87]">FLEXSPI2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e8]">FLEXSPI_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[88]">FLEXSPI_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[7d]">GPC_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[6c]">GPIO1_Combined_0_15_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[6d]">GPIO1_Combined_16_31_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[64]">GPIO1_INT0_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[65]">GPIO1_INT1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[66]">GPIO1_INT2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[67]">GPIO1_INT3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[68]">GPIO1_INT4_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[69]">GPIO1_INT5_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[6a]">GPIO1_INT6_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[6b]">GPIO1_INT7_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[6e]">GPIO2_Combined_0_15_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[6f]">GPIO2_Combined_16_31_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[70]">GPIO3_Combined_0_15_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[71]">GPIO3_Combined_16_31_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[72]">GPIO4_Combined_0_15_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[73]">GPIO4_Combined_16_31_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[74]">GPIO5_Combined_0_15_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[75]">GPIO5_Combined_16_31_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[b9]">GPIO6_7_8_9_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[45]">GPR_IRQ_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[80]">GPT1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[81]">GPT2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[16d]">GUIMONO_DispChar</a> from GUI_CharM.o(.text.GUIMONO_DispChar) referenced from F6x8.o(.rodata.GUI_Font6x8)
 <LI><a href="#[16e]">GUIMONO_GetCharDistX</a> from GUI_CharM.o(.text.GUIMONO_GetCharDistX) referenced from F6x8.o(.rodata.GUI_Font6x8)
 <LI><a href="#[16f]">GUIMONO_GetFontInfo</a> from GUI_CharM.o(.text.GUIMONO_GetFontInfo) referenced from F6x8.o(.rodata.GUI_Font6x8)
 <LI><a href="#[170]">GUIMONO_IsInFont</a> from GUI_CharM.o(.text.GUIMONO_IsInFont) referenced from F6x8.o(.rodata.GUI_Font6x8)
 <LI><a href="#[171]">GUIPROP_AA4_EXT_DispChar</a> from GUIAA_Char4Ext.o(.text.GUIPROP_AA4_EXT_DispChar) referenced from aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
 <LI><a href="#[171]">GUIPROP_AA4_EXT_DispChar</a> from GUIAA_Char4Ext.o(.text.GUIPROP_AA4_EXT_DispChar) referenced from aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
 <LI><a href="#[171]">GUIPROP_AA4_EXT_DispChar</a> from GUIAA_Char4Ext.o(.text.GUIPROP_AA4_EXT_DispChar) referenced from aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
 <LI><a href="#[169]">GUIPROP_DispChar</a> from GUI_CharP.o(.text.GUIPROP_DispChar) referenced from F13_1.o(.rodata.GUI_Font13_1)
 <LI><a href="#[176]">GUIPROP_EXT_DispChar</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_DispChar) referenced from font_13_r.o(.rodata.GUI_Font_13_R)
 <LI><a href="#[172]">GUIPROP_EXT_GetCharDistX</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharDistX) referenced from aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
 <LI><a href="#[172]">GUIPROP_EXT_GetCharDistX</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharDistX) referenced from aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
 <LI><a href="#[172]">GUIPROP_EXT_GetCharDistX</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharDistX) referenced from aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
 <LI><a href="#[172]">GUIPROP_EXT_GetCharDistX</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharDistX) referenced from font_13_r.o(.rodata.GUI_Font_13_R)
 <LI><a href="#[175]">GUIPROP_EXT_GetCharInfo</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharInfo) referenced from aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
 <LI><a href="#[175]">GUIPROP_EXT_GetCharInfo</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharInfo) referenced from aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
 <LI><a href="#[175]">GUIPROP_EXT_GetCharInfo</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharInfo) referenced from aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
 <LI><a href="#[175]">GUIPROP_EXT_GetCharInfo</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharInfo) referenced from font_13_r.o(.rodata.GUI_Font_13_R)
 <LI><a href="#[173]">GUIPROP_EXT_GetFontInfo</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetFontInfo) referenced from aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
 <LI><a href="#[173]">GUIPROP_EXT_GetFontInfo</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetFontInfo) referenced from aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
 <LI><a href="#[173]">GUIPROP_EXT_GetFontInfo</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetFontInfo) referenced from aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
 <LI><a href="#[173]">GUIPROP_EXT_GetFontInfo</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_GetFontInfo) referenced from font_13_r.o(.rodata.GUI_Font_13_R)
 <LI><a href="#[174]">GUIPROP_EXT_IsInFont</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_IsInFont) referenced from aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
 <LI><a href="#[174]">GUIPROP_EXT_IsInFont</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_IsInFont) referenced from aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
 <LI><a href="#[174]">GUIPROP_EXT_IsInFont</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_IsInFont) referenced from aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
 <LI><a href="#[174]">GUIPROP_EXT_IsInFont</a> from GUI_CharPExt.o(.text.GUIPROP_EXT_IsInFont) referenced from font_13_r.o(.rodata.GUI_Font_13_R)
 <LI><a href="#[d]">GUIPROP_EXT__ClearLine</a> from GUI_EncExt.o(.text.GUIPROP_EXT__ClearLine) referenced 2 times from GUI_EncExt.o(.data._fpClearLine)
 <LI><a href="#[168]">GUIPROP_EXT__DispLine</a> from GUI_EncExt.o(.text.GUIPROP_EXT__DispLine) referenced from GUI_EncExt.o(.rodata.GUI_ENC_APIList_EXT)
 <LI><a href="#[16a]">GUIPROP_GetCharDistX</a> from GUI_CharP.o(.text.GUIPROP_GetCharDistX) referenced from F13_1.o(.rodata.GUI_Font13_1)
 <LI><a href="#[16b]">GUIPROP_GetFontInfo</a> from GUI_CharP.o(.text.GUIPROP_GetFontInfo) referenced from F13_1.o(.rodata.GUI_Font13_1)
 <LI><a href="#[16c]">GUIPROP_IsInFont</a> from GUI_CharP.o(.text.GUIPROP_IsInFont) referenced from F13_1.o(.rodata.GUI_Font13_1)
 <LI><a href="#[11d]">GUI_ANIM__AccelDecel</a> from GUI_ANIM.o(.text.GUI_ANIM__AccelDecel) referenced from emwin_slide_show.o(.text._AnimateCreate)
 <LI><a href="#[147]">GUI_DispStringInRect</a> from GUI_DispString.o(.text.GUI_DispStringInRect) referenced from weather.o(.text._cbButton)
 <LI><a href="#[147]">GUI_DispStringInRect</a> from GUI_DispString.o(.text.GUI_DispStringInRect) referenced from weather.o(.text._cbWinCurrent)
 <LI><a href="#[119]">GUI_MEMDEV_Paint1Static</a> from GUIDEV_StaticDevices.o(.text.GUI_MEMDEV_Paint1Static) referenced 2 times from WM.o(.text.WM__PaintWinAndOverlays)
 <LI><a href="#[119]">GUI_MEMDEV_Paint1Static</a> from GUIDEV_StaticDevices.o(.text.GUI_MEMDEV_Paint1Static) referenced 2 times from WM.o(.text._Paint1Trans)
 <LI><a href="#[14e]">GUI_MEMDEV_Select</a> from GUIDEV.o(.text.GUI_MEMDEV_Select) referenced from alarm.o(.text._cbClock)
 <LI><a href="#[137]">GUI_MEMDEV__WriteToActiveAlpha</a> from GUIDEV_WriteToActiveAlpha.o(.text.GUI_MEMDEV__WriteToActiveAlpha) referenced 2 times from GUIDEV_32.o(.text._GetDevFunc)
 <LI><a href="#[148]">GUI_SetBkColor</a> from GUI_Common.o(.text.GUI_SetBkColor) referenced from alarm.o(.text._cbClock)
 <LI><a href="#[148]">GUI_SetBkColor</a> from GUI_Common.o(.text.GUI_SetBkColor) referenced from weather.o(.text._cbWinCurrent)
 <LI><a href="#[152]">GUI_SetColor</a> from GUI_Common.o(.text.GUI_SetColor) referenced from weather.o(.text._cbWinCurrent)
 <LI><a href="#[108]">GUI_TIMER_Exec</a> from GUI_Timer.o(.text.GUI_TIMER_Exec) referenced 2 times from GUI_Timer.o(.text.GUI_TIMER_Create)
 <LI><a href="#[155]">GUI_USAGE_BM_AddHLine</a> from GUIDEV_UsageBM.o(.text.GUI_USAGE_BM_AddHLine) referenced from GUIDEV_UsageBM.o(.rodata.API)
 <LI><a href="#[154]">GUI_USAGE_BM_AddPixel</a> from GUIDEV_UsageBM.o(.text.GUI_USAGE_BM_AddPixel) referenced from GUIDEV_UsageBM.o(.rodata.API)
 <LI><a href="#[156]">GUI_USAGE_BM_Clear</a> from GUIDEV_UsageBM.o(.text.GUI_USAGE_BM_Clear) referenced from GUIDEV_UsageBM.o(.rodata.API)
 <LI><a href="#[158]">GUI_USAGE_BM_GetNextDirty</a> from GUIDEV_UsageBM.o(.text.GUI_USAGE_BM_GetNextDirty) referenced from GUIDEV_UsageBM.o(.rodata.API)
 <LI><a href="#[3]">GUI__BIDI_Log2VisBuffered</a> from GUI_UC_EnableBIDI.o(.text.GUI__BIDI_Log2VisBuffered) referenced 2 times from GUI_CharLine.o(.data.GUI_CharLine_pfLog2Vis)
 <LI><a href="#[4]">GUI__DrawCharEXT</a> from GUI_EncExt.o(.text.GUI__DrawCharEXT) referenced 2 times from GUI_Core.o(.data.GUI__pfDrawCharEXT)
 <LI><a href="#[7]">GUI__MixColors</a> from GUI__Alpha.o(.text.GUI__MixColors) referenced 2 times from GUI__Alpha.o(.data.GUI__pfMixColors)
 <LI><a href="#[14]">HardFault_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[14]">HardFault_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[43]">KPP_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[46]">LCDIF_IRQHandler</a> from emwin_support.o(.text.LCDIF_IRQHandler) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[c]">LCD_AA_MixColors16</a> from LCD_AA.o(.text.LCD_AA_MixColors16) referenced 2 times from LCD_AA.o(.data.LCD_AA_pfMixColors16)
 <LI><a href="#[fc]">LCD_DrawHLine</a> from LCD.o(.text.LCD_DrawHLine) referenced from GUI_Core.o(.rodata._HL_APIList)
 <LI><a href="#[fc]">LCD_DrawHLine</a> from LCD.o(.text.LCD_DrawHLine) referenced 2 times from GUI_DrawGradient.o(.text.GUI_DrawGradientV)
 <LI><a href="#[19f]">LCD_DrawPixel</a> from LCD.o(.text.LCD_DrawPixel) referenced from GUI_Core.o(.rodata._HL_APIList)
 <LI><a href="#[b]">LCD_GetpPalConvTableBM</a> from LCD_Color.o(.text.LCD_GetpPalConvTableBM) referenced 2 times from GUI_Core.o(.data.GUI_pfGetpPalConvTable)
 <LI><a href="#[18b]">LCD_Index2Color_8888</a> from GUICC_8888_Index2Color.o(.text.LCD_Index2Color_8888) referenced from GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
 <LI><a href="#[10b]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text.LCD_Index2Color_M8888I) referenced from GUI_DrawBitmap_8888.o(.rodata.GUI_BitmapMethodsM8888I)
 <LI><a href="#[10b]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text.LCD_Index2Color_M8888I) referenced from GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
 <LI><a href="#[10b]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text.LCD_Index2Color_M8888I) referenced 2 times from GUI__Alpha.o(.text.GUI__DoAlphaBlending)
 <LI><a href="#[10b]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text.LCD_Index2Color_M8888I) referenced 2 times from LCD_RLEAlpha.o(.text._Draw)
 <LI><a href="#[10b]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text.LCD_Index2Color_M8888I) referenced 2 times from GUI_DrawBitmap_8888.o(.text._DrawBitmap_M8888I)
 <LI><a href="#[10b]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text.LCD_Index2Color_M8888I) referenced 2 times from GUIDEV_WriteToActiveAlpha.o(.text._WriteToActiveAlpha)
 <LI><a href="#[121]">LCD_SetPixelAA4_Trans</a> from LCD_AA.o(.text.LCD_SetPixelAA4_Trans) referenced 2 times from GUIAA_Lib.o(.text._FlushLine)
 <LI><a href="#[10f]">LISTWHEEL_Callback</a> from LISTWHEEL.o(.text.LISTWHEEL_Callback) referenced 2 times from LISTWHEEL.o(.text.LISTWHEEL_CreateUser)
 <LI><a href="#[110]">LISTWHEEL_OwnerDraw</a> from LISTWHEEL.o(.text.LISTWHEEL_OwnerDraw) referenced 2 times from LISTWHEEL.o(.text.LISTWHEEL_CreateUser)
 <LI><a href="#[14c]">LISTWHEEL_SetBkColor</a> from LISTWHEEL.o(.text.LISTWHEEL_SetBkColor) referenced from alarm.o(.text._cbClock)
 <LI><a href="#[14b]">LISTWHEEL_SetTextColor</a> from LISTWHEEL.o(.text.LISTWHEEL_SetTextColor) referenced from alarm.o(.text._cbClock)
 <LI><a href="#[d6]">LPI2C1_DriverIRQHandler</a> from fsl_lpi2c.o(.text.LPI2C1_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[38]">LPI2C1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[d7]">LPI2C2_DriverIRQHandler</a> from fsl_lpi2c.o(.text.LPI2C2_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[39]">LPI2C2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[d8]">LPI2C3_DriverIRQHandler</a> from fsl_lpi2c.o(.text.LPI2C3_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[3a]">LPI2C3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[d9]">LPI2C4_DriverIRQHandler</a> from fsl_lpi2c.o(.text.LPI2C4_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[3b]">LPI2C4_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[da]">LPSPI1_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[3c]">LPSPI1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[db]">LPSPI2_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[3d]">LPSPI2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[dc]">LPSPI3_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[3e]">LPSPI3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[dd]">LPSPI4_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[3f]">LPSPI4_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ce]">LPUART1_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[30]">LPUART1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[cf]">LPUART2_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[31]">LPUART2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[d0]">LPUART3_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[32]">LPUART3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[d1]">LPUART4_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[33]">LPUART4_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[d2]">LPUART5_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[34]">LPUART5_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[d3]">LPUART6_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[35]">LPUART6_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[d4]">LPUART7_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[36]">LPUART7_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[d5]">LPUART8_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[37]">LPUART8_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[15]">MemManage_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[13]">NMI_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[13]">NMI_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[96]">PIT_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[59]">PMU_EVENT_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[82]">PWM1_0_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[83]">PWM1_1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[84]">PWM1_2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[85]">PWM1_3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[86]">PWM1_FAULT_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a5]">PWM2_0_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a6]">PWM2_1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a7]">PWM2_2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a8]">PWM2_3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a9]">PWM2_FAULT_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[aa]">PWM3_0_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ab]">PWM3_1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ac]">PWM3_2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ad]">PWM3_3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ae]">PWM3_FAULT_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[af]">PWM4_0_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[b0]">PWM4_1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[b1]">PWM4_2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[b2]">PWM4_3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[b3]">PWM4_FAULT_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[48]">PXP_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[1a]">PendSV_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[1a]">PendSV_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[79]">RTWDOG_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[7f]">Reserved115_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[9b]">Reserved143_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[9c]">Reserved144_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[b7]">Reserved171_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[50]">Reserved68_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[5a]">Reserved78_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[62]">Reserved86_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[63]">Reserved87_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[12]">Reset_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e0]">SAI1_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[54]">SAI1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e1]">SAI2_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[55]">SAI2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e2]">SAI3_RX_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[56]">SAI3_RX_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e3]">SAI3_TX_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[57]">SAI3_TX_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[89]">SEMC_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[52]">SJC_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[4a]">SNVS_HP_WRAPPER_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[4b]">SNVS_HP_WRAPPER_TZ_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[4c]">SNVS_LP_WRAPPER_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e4]">SPDIF_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[58]">SPDIF_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[7e]">SRC_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[18]">SVC_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[18]">SVC_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[1b]">SysTick_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[1b]">SysTick_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[bb]">SystemInit</a> from system_mimxrt1062.o(.text.SystemInit) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[5b]">TEMP_LOW_HIGH_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[5c]">TEMP_PANIC_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a1]">TMR1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a2]">TMR2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a3]">TMR3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[a4]">TMR4_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[51]">TRNG_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[44]">TSC_DIG_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[8d]">USB_OTG1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[8c]">USB_OTG2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[5d]">USB_PHY1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[5e]">USB_PHY2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[e9]">USDHC1_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[8a]">USDHC1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[ea]">USDHC2_DriverIRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[8b]">USDHC2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[17]">UsageFault_Handler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[78]">WDOG1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[49]">WDOG2_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[111]">WINDOW_Callback</a> from WINDOW.o(.text.WINDOW_Callback) referenced 2 times from WINDOW.o(.text.WINDOW_CreateUser)
 <LI><a href="#[1a7]">WINDOW_CreateIndirect</a> from WINDOW.o(.text.WINDOW_CreateIndirect) referenced from weather.o(.rodata._aDialogCreate)
 <LI><a href="#[ff]">WM_HandlePID</a> from WM_Touch.o(.text.WM_HandlePID) referenced 2 times from GUI_PID.o(.text.GUI_PID_StoreState)
 <LI><a href="#[14a]">WM_SetCallback</a> from WM_Lib.o(.text.WM_SetCallback) referenced from alarm.o(.text._cbClock)
 <LI><a href="#[11a]">WM__Paint1</a> from WM.o(.text.WM__Paint1) referenced 2 times from WM.o(.text.WM__PaintWinAndOverlays)
 <LI><a href="#[11a]">WM__Paint1</a> from WM.o(.text.WM__Paint1) referenced 2 times from WM.o(.text._Paint1Trans)
 <LI><a href="#[90]">XBAR1_IRQ_0_1_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[91]">XBAR1_IRQ_2_3_IRQHandler</a> from startup_mimxrt1062.o(.text) referenced from startup_mimxrt1062.o(.isr_vector)
 <LI><a href="#[11c]">_AnimateWin</a> from emwin_slide_show.o(.text._AnimateWin) referenced from emwin_slide_show.o(.text._AnimateCreate)
 <LI><a href="#[146]">_ButtonSkin</a> from emwin_slide_show.o(.text._ButtonSkin) referenced from emwin_slide_show.o(.text._cbBk)
 <LI><a href="#[185]">_CalcSizeOfChar</a> from GUI_UC_EncodeNone.o(.text._CalcSizeOfChar) referenced from GUI_UC_EncodeNone.o(.rodata.GUI_UC_None)
 <LI><a href="#[166]">_CallDrawBitmapHW</a> from GUI_DrawBitmap_8888.o(.text._CallDrawBitmapHW) referenced from GUI_DrawBitmap_8888.o(.rodata.GUI_BitmapMethodsM8888I)
 <LI><a href="#[10e]">_ClearCache</a> from emwin_support.o(.text._ClearCache) referenced from emwin_support.o(.text.LCD_X_Config)
 <LI><a href="#[18d]">_Color2IndexBulk</a> from GUICC_8888.o(.text._Color2IndexBulk) referenced from GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
 <LI><a href="#[191]">_Color2IndexBulk_M8888I</a> from GUICC_M8888I.o(.text._Color2IndexBulk_M8888I) referenced from GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
 <LI><a href="#[187]">_Color2Index_0</a> from GUICC_0.o(.text._Color2Index_0) referenced from GUICC_0.o(.rodata.LCD_API_ColorConv_0)
 <LI><a href="#[18a]">_Color2Index_8888</a> from GUICC_8888.o(.text._Color2Index_8888) referenced from GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
 <LI><a href="#[18f]">_Color2Index_M8888I</a> from GUICC_M8888I.o(.text._Color2Index_M8888I) referenced from GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
 <LI><a href="#[134]">_CopyBuffer</a> from GUIDRV_Lin_32.o(.text._CopyBuffer) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[2]">_Create</a> from BUTTON_Skin.o(.text._Create) referenced 2 times from BUTTON_Skin.o(.data.BUTTON__Skin)
 <LI><a href="#[11f]">_Draw</a> from LCD_RLEAlpha.o(.text._Draw) referenced 2 times from LCD_RLEAlpha.o(.text._DrawBitmap_RLEAlpha)
 <LI><a href="#[159]">_DrawBitmap</a> from GUIDRV_Lin_32.o(.text._DrawBitmap) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[177]">_DrawBitmap</a> from GUIDEV_32.o(.text._DrawBitmap) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[19c]">_DrawBitmap</a> from GUI_DRAW_BITMAP.o(.text._DrawBitmap) referenced from GUI_DRAW_BITMAP.o(.rodata._ConstObjData)
 <LI><a href="#[165]">_DrawBitmap_M8888I</a> from GUI_DrawBitmap_8888.o(.text._DrawBitmap_M8888I) referenced from GUI_DrawBitmap_8888.o(.rodata.GUI_BitmapMethodsM8888I)
 <LI><a href="#[167]">_DrawBitmap_RLEAlpha</a> from LCD_RLEAlpha.o(.text._DrawBitmap_RLEAlpha) referenced from LCD_RLEAlpha.o(.rodata.GUI_BitmapMethodsRLEAlpha)
 <LI><a href="#[e]">_DrawCharAA4_Trans</a> from GUIAA_Char4.o(.text._DrawCharAA4_Trans) referenced 2 times from GUIAA_Char4.o(.data._pfDrawCharAA4_Trans)
 <LI><a href="#[11e]">_DrawClip</a> from LCD_RLEAlpha.o(.text._DrawClip) referenced 4 times from LCD_RLEAlpha.o(.text._DrawBitmap_RLEAlpha)
 <LI><a href="#[195]">_DrawDown</a> from WIDGET_Effect_None.o(.text._DrawDown) referenced from WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
 <LI><a href="#[19a]">_DrawDown</a> from WIDGET_Effect_Simple.o(.text._DrawDown) referenced from WIDGET_Effect_Simple.o(.rodata.WIDGET_Effect_Simple)
 <LI><a href="#[196]">_DrawDownRect</a> from WIDGET_Effect_None.o(.text._DrawDownRect) referenced from WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
 <LI><a href="#[19b]">_DrawDownRect</a> from WIDGET_Effect_Simple.o(.text._DrawDownRect) referenced from WIDGET_Effect_Simple.o(.rodata.WIDGET_Effect_Simple)
 <LI><a href="#[197]">_DrawFlat</a> from WIDGET_Effect_None.o(.text._DrawFlat) referenced from WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
 <LI><a href="#[15a]">_DrawHLine</a> from GUIDRV_Lin_32.o(.text._DrawHLine) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[178]">_DrawHLine</a> from GUIDEV_32.o(.text._DrawHLine) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[f9]">_DrawHLine</a> from GUIAA_Lib.o(.text._DrawHLine) referenced 2 times from GUIAA_Lib.o(.text.GUI_AA_Init)
 <LI><a href="#[1a3]">_DrawNonExistingCharacter_Dummy</a> from GUI_Char.o(.text._DrawNonExistingCharacter_Dummy) referenced from GUI_Char.o(.rodata._NonExistingCharacter_Dummy)
 <LI><a href="#[193]">_DrawUp</a> from WIDGET_Effect_None.o(.text._DrawUp) referenced from WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
 <LI><a href="#[198]">_DrawUp</a> from WIDGET_Effect_Simple.o(.text._DrawUp) referenced from WIDGET_Effect_Simple.o(.rodata.WIDGET_Effect_Simple)
 <LI><a href="#[194]">_DrawUpRect</a> from WIDGET_Effect_None.o(.text._DrawUpRect) referenced from WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
 <LI><a href="#[199]">_DrawUpRect</a> from WIDGET_Effect_Simple.o(.text._DrawUpRect) referenced from WIDGET_Effect_Simple.o(.rodata.WIDGET_Effect_Simple)
 <LI><a href="#[15b]">_DrawVLine</a> from GUIDRV_Lin_32.o(.text._DrawVLine) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[179]">_DrawVLine</a> from GUIDEV_32.o(.text._DrawVLine) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[186]">_Encode</a> from GUI_UC_EncodeNone.o(.text._Encode) referenced from GUI_UC_EncodeNone.o(.rodata.GUI_UC_None)
 <LI><a href="#[fb]">_ExecAnimations</a> from GUI_ANIM.o(.text._ExecAnimations) referenced 2 times from GUI_ANIM.o(.text.GUI_ANIM_StartEx)
 <LI><a href="#[15c]">_FillRect</a> from GUIDRV_Lin_32.o(.text._FillRect) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[17a]">_FillRect</a> from GUIDEV_32.o(.text._FillRect) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[157]">_GUI_USAGE_BM_Delete</a> from GUIDEV_UsageBM.o(.text._GUI_USAGE_BM_Delete) referenced from GUIDEV_UsageBM.o(.rodata.API)
 <LI><a href="#[183]">_GetCharCode</a> from GUI_UC_EncodeNone.o(.text._GetCharCode) referenced from GUI_UC_EncodeNone.o(.rodata.GUI_UC_None)
 <LI><a href="#[184]">_GetCharSize</a> from GUI_UC_EncodeNone.o(.text._GetCharSize) referenced from GUI_UC_EncodeNone.o(.rodata.GUI_UC_None)
 <LI><a href="#[163]">_GetDevData</a> from GUIDRV_Lin_32.o(.text._GetDevData) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[181]">_GetDevData</a> from GUIDEV_32.o(.text._GetDevData) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[161]">_GetDevFunc</a> from GUIDRV_Lin_32.o(.text._GetDevFunc) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[17f]">_GetDevFunc</a> from GUIDEV_32.o(.text._GetDevFunc) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[162]">_GetDevProp</a> from GUIDRV_Lin_32.o(.text._GetDevProp) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[180]">_GetDevProp</a> from GUIDEV_32.o(.text._GetDevProp) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[189]">_GetIndexMask_0</a> from GUICC_0.o(.text._GetIndexMask_0) referenced from GUICC_0.o(.rodata.LCD_API_ColorConv_0)
 <LI><a href="#[18c]">_GetIndexMask_8888</a> from GUICC_8888.o(.text._GetIndexMask_8888) referenced from GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
 <LI><a href="#[190]">_GetIndexMask_M8888I</a> from GUICC_M8888I.o(.text._GetIndexMask_M8888I) referenced from GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
 <LI><a href="#[124]">_GetMotionTagR</a> from WM_Motion.o(.text._GetMotionTagR) referenced 2 times from WM_Motion.o(.text._GetConfirmation)
 <LI><a href="#[120]">_GetMotionTagXY</a> from WM_Motion.o(.text._GetMotionTagXY) referenced 2 times from WM_Motion.o(.text._ExecMotion)
 <LI><a href="#[1a2]">_GetNonExistingCharWidth_Dummy</a> from GUI_Char.o(.text._GetNonExistingCharWidth_Dummy) referenced from GUI_Char.o(.rodata._NonExistingCharacter_Dummy)
 <LI><a href="#[15d]">_GetPixelIndex</a> from GUIDRV_Lin_32.o(.text._GetPixelIndex) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[17b]">_GetPixelIndex</a> from GUIDEV_32.o(.text._GetPixelIndex) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[129]">_GetPos</a> from GUIDRV_Lin_32.o(.text._GetPos) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[164]">_GetRect</a> from GUIDRV_Lin_32.o(.text._GetRect) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[182]">_GetRect</a> from GUIDEV_32.o(.text._GetRect) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[19d]">_GetXSize</a> from GUI_DRAW_BITMAP.o(.text._GetXSize) referenced from GUI_DRAW_BITMAP.o(.rodata._ConstObjData)
 <LI><a href="#[19e]">_GetYSize</a> from GUI_DRAW_BITMAP.o(.text._GetYSize) referenced from GUI_DRAW_BITMAP.o(.rodata._ConstObjData)
 <LI><a href="#[18e]">_Index2ColorBulk</a> from GUICC_8888.o(.text._Index2ColorBulk) referenced from GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
 <LI><a href="#[192]">_Index2ColorBulk_M8888I</a> from GUICC_M8888I.o(.text._Index2ColorBulk_M8888I) referenced from GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
 <LI><a href="#[188]">_Index2Color_0</a> from GUICC_0.o(.text._Index2Color_0) referenced from GUICC_0.o(.rodata.LCD_API_ColorConv_0)
 <LI><a href="#[12d]">_Init</a> from GUIDRV_Lin_32.o(.text._Init) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[1a0]">_MULTIBUF_Begin</a> from WM_MULTIBUF.o(.text._MULTIBUF_Begin) referenced from WM_MULTIBUF.o(.rodata._MULTIBUF_APIList)
 <LI><a href="#[1a1]">_MULTIBUF_End</a> from WM_MULTIBUF.o(.text._MULTIBUF_End) referenced from WM_MULTIBUF.o(.rodata._MULTIBUF_APIList)
 <LI><a href="#[123]">_Motion_AutoWithinParent</a> from WM_Motion.o(.text._Motion_AutoWithinParent) referenced 2 times from WM_Motion.o(.text._GetConfirmation)
 <LI><a href="#[122]">_Motion_ByWindow</a> from WM_Motion.o(.text._Motion_ByWindow) referenced 4 times from WM_Motion.o(.text._GetConfirmation)
 <LI><a href="#[12f]">_Off</a> from GUIDRV_Lin_32.o(.text._Off) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[12e]">_On</a> from GUIDRV_Lin_32.o(.text._On) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[f7]">_OnExit</a> from GUI_Task.o(.text._OnExit) referenced 2 times from GUI_Task.o(.text.GUITASK_Init)
 <LI><a href="#[f8]">_OnExit</a> from GUIAA_Lib.o(.text._OnExit) referenced 2 times from GUIAA_Lib.o(.text.GUI_AA_Init)
 <LI><a href="#[fa]">_OnExit</a> from GUI_ANIM.o(.text._OnExit) referenced 2 times from GUI_ANIM.o(.text.GUI_ANIM_Create)
 <LI><a href="#[fd]">_OnExit</a> from GUI_MULTIBUF.o(.text._OnExit) referenced 2 times from GUI_MULTIBUF.o(.text.GUI_MULTIBUF_ConfigEx)
 <LI><a href="#[fe]">_OnExit</a> from GUI_PID.o(.text._OnExit) referenced 2 times from GUI_PID.o(.text.GUI_PID_StoreState)
 <LI><a href="#[109]">_OnExit</a> from GUI_Timer.o(.text._OnExit) referenced 2 times from GUI_Timer.o(.text.GUI_TIMER_Create)
 <LI><a href="#[10a]">_OnExit</a> from GUI_Core.o(.text._OnExit) referenced 2 times from GUI_Core.o(.text.GUI__Config)
 <LI><a href="#[10c]">_OnExit</a> from GUI__Alpha.o(.text._OnExit) referenced 2 times from GUI__Alpha.o(.text.GUI__GetAlphaBuffer)
 <LI><a href="#[10d]">_OnExit</a> from LCD_Color.o(.text._OnExit) referenced 2 times from LCD_Color.o(.text.LCD_InitColors)
 <LI><a href="#[115]">_OnExit</a> from WM.o(.text._OnExit) referenced 2 times from WM.o(.text.WM_Init)
 <LI><a href="#[116]">_OnExit</a> from WM_Motion.o(.text._OnExit) referenced 2 times from WM_Motion.o(.text.WM_MOTION_Enable)
 <LI><a href="#[11b]">_OnExit</a> from WM_Touch.o(.text._OnExit) referenced 2 times from WM_Touch.o(.text.WM__SetMotionCallback)
 <LI><a href="#[f]">_OnTouchDefault</a> from BUTTON.o(.text._OnTouchDefault) referenced 2 times from BUTTON.o(.data._pfOnTouch)
 <LI><a href="#[1]">_Paint</a> from BUTTON_Skin.o(.text._Paint) referenced 2 times from BUTTON_Skin.o(.data.BUTTON__Skin)
 <LI><a href="#[100]">_QR_Mask0</a> from GUI_QR.o(.text._QR_Mask0) referenced from GUI_QR.o(.text.GUI_QR_Create)
 <LI><a href="#[101]">_QR_Mask1</a> from GUI_QR.o(.text._QR_Mask1) referenced from GUI_QR.o(.text.GUI_QR_Create)
 <LI><a href="#[102]">_QR_Mask2</a> from GUI_QR.o(.text._QR_Mask2) referenced from GUI_QR.o(.text.GUI_QR_Create)
 <LI><a href="#[103]">_QR_Mask3</a> from GUI_QR.o(.text._QR_Mask3) referenced from GUI_QR.o(.text.GUI_QR_Create)
 <LI><a href="#[104]">_QR_Mask4</a> from GUI_QR.o(.text._QR_Mask4) referenced from GUI_QR.o(.text.GUI_QR_Create)
 <LI><a href="#[105]">_QR_Mask5</a> from GUI_QR.o(.text._QR_Mask5) referenced from GUI_QR.o(.text.GUI_QR_Create)
 <LI><a href="#[106]">_QR_Mask6</a> from GUI_QR.o(.text._QR_Mask6) referenced from GUI_QR.o(.text.GUI_QR_Create)
 <LI><a href="#[107]">_QR_Mask7</a> from GUI_QR.o(.text._QR_Mask7) referenced from GUI_QR.o(.text.GUI_QR_Create)
 <LI><a href="#[126]">_ReadRect</a> from GUIDRV_Lin_32.o(.text._ReadRect) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[127]">_SetAlpha</a> from GUIDRV_Lin_32.o(.text._SetAlpha) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[130]">_SetAlphaMode</a> from GUIDRV_Lin_32.o(.text._SetAlphaMode) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[1a5]">_SetBkColor</a> from LCD.o(.text._SetBkColor) referenced from LCD.o(.rodata._SetColorAPI)
 <LI><a href="#[132]">_SetChroma</a> from GUIDRV_Lin_32.o(.text._SetChroma) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[131]">_SetChromaMode</a> from GUIDRV_Lin_32.o(.text._SetChromaMode) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[1a4]">_SetColor</a> from LCD.o(.text._SetColor) referenced from LCD.o(.rodata._SetColorAPI)
 <LI><a href="#[133]">_SetDevFunc</a> from GUIDRV_Lin_32.o(.text._SetDevFunc) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[1a6]">_SetDrawMode</a> from LCD.o(.text._SetDrawMode) referenced from LCD.o(.rodata._SetColorAPI)
 <LI><a href="#[160]">_SetOrg</a> from GUIDRV_Lin_32.o(.text._SetOrg) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[17e]">_SetOrg</a> from GUIDEV_32.o(.text._SetOrg) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[10]">_SetPixelAlpha</a> from GUI_DrawBitmap_8888.o(.text._SetPixelAlpha) referenced 2 times from GUI_DrawBitmap_8888.o(.data._pfSetPixelAlpha)
 <LI><a href="#[15e]">_SetPixelIndex</a> from GUIDRV_Lin_32.o(.text._SetPixelIndex) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[17c]">_SetPixelIndex</a> from GUIDEV_32.o(.text._SetPixelIndex) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[128]">_SetPos</a> from GUIDRV_Lin_32.o(.text._SetPos) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[12c]">_SetSize</a> from GUIDRV_Lin_32.o(.text._SetSize) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[125]">_SetVRAMAddr</a> from GUIDRV_Lin_32.o(.text._SetVRAMAddr) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[136]">_SetVRAM_BufferPTR</a> from GUIDRV_Lin_32.o(.text._SetVRAM_BufferPTR) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[12b]">_SetVSize</a> from GUIDRV_Lin_32.o(.text._SetVSize) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[12a]">_SetVis</a> from GUIDRV_Lin_32.o(.text._SetVis) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[135]">_ShowBuffer</a> from GUIDRV_Lin_32.o(.text._ShowBuffer) referenced 2 times from GUIDRV_Lin_32.o(.text._GetDevFunc)
 <LI><a href="#[143]">_UBA_Empty</a> from GUI__BiDi2.o(.text._UBA_Empty) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[13b]">_UBA_ResolveAL</a> from GUI__BiDi2.o(.text._UBA_ResolveAL) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[139]">_UBA_ResolveCombiningMarks</a> from GUI__BiDi2.o(.text._UBA_ResolveCombiningMarks) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[13f]">_UBA_ResolveEN</a> from GUI__BiDi2.o(.text._UBA_ResolveEN) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[13e]">_UBA_ResolveESCSET</a> from GUI__BiDi2.o(.text._UBA_ResolveESCSET) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[13a]">_UBA_ResolveEuropeanNumbers</a> from GUI__BiDi2.o(.text._UBA_ResolveEuropeanNumbers) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[141]">_UBA_ResolveNeutralsByContext</a> from GUI__BiDi2.o(.text._UBA_ResolveNeutralsByContext) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[142]">_UBA_ResolveNeutralsByLevel</a> from GUI__BiDi2.o(.text._UBA_ResolveNeutralsByLevel) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[140]">_UBA_ResolvePairedBrackets</a> from GUI__BiDi2.o(.text._UBA_ResolvePairedBrackets) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[13c]">_UBA_ResolveSeparators</a> from GUI__BiDi2.o(.text._UBA_ResolveSeparators) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[13d]">_UBA_ResolveTerminators</a> from GUI__BiDi2.o(.text._UBA_ResolveTerminators) referenced from GUI__BiDi2.o(.text._UBA_RuleDispatch)
 <LI><a href="#[15f]">_XorPixel</a> from GUIDRV_Lin_32.o(.text._XorPixel) referenced from GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
 <LI><a href="#[17d]">_XorPixel</a> from GUIDEV_32.o(.text._XorPixel) referenced from GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
 <LI><a href="#[bc]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mimxrt1062.o(.text)
 <LI><a href="#[144]">_cbAlarm</a> from emwin_slide_show.o(.text._cbAlarm) referenced from emwin_slide_show.o(.text._cbBk)
 <LI><a href="#[114]">_cbBackWin</a> from WM.o(.text._cbBackWin) referenced 2 times from WM.o(.text.WM_Init)
 <LI><a href="#[153]">_cbBk</a> from emwin_slide_show.o(.text._cbBk) referenced from emwin_slide_show.o(.text.main)
 <LI><a href="#[14f]">_cbButton</a> from weather.o(.text._cbButton) referenced from weather.o(.text._cbDialog)
 <LI><a href="#[f4]">_cbClock</a> from alarm.o(.text._cbClock) referenced from alarm.o(.text.CreateAlarm)
 <LI><a href="#[f6]">_cbDialog</a> from weather.o(.text._cbDialog) referenced from weather.o(.text.CreateWeather)
 <LI><a href="#[f5]">_cbInfo</a> from info.o(.text._cbInfo) referenced from info.o(.text.CreateInfo)
 <LI><a href="#[112]">_cbInvalidateOne</a> from WM_BringToTop.o(.text._cbInvalidateOne) referenced 2 times from WM_BringToTop.o(.text.WM_BringToTop)
 <LI><a href="#[149]">_cbListwheel</a> from alarm.o(.text._cbListwheel) referenced from alarm.o(.text._cbClock)
 <LI><a href="#[117]">_cbMotion</a> from WM_Motion.o(.text._cbMotion) referenced 2 times from WM_Motion.o(.text.WM_MOTION_Enable)
 <LI><a href="#[118]">_cbPaintMemDev</a> from WM.o(.text._cbPaintMemDev) referenced 2 times from WM.o(.text.WM__Paint)
 <LI><a href="#[14d]">_cbStartStop</a> from alarm.o(.text._cbStartStop) referenced from alarm.o(.text._cbClock)
 <LI><a href="#[113]">_cbTimer</a> from WM_Timer.o(.text._cbTimer) referenced 2 times from WM_Timer.o(.text.WM_CreateTimer)
 <LI><a href="#[138]">_cbTimer</a> from WM_Motion.o(.text._cbTimer) referenced 2 times from WM_Motion.o(.text._StartMotionTimer)
 <LI><a href="#[150]">_cbWinCurrent</a> from weather.o(.text._cbWinCurrent) referenced from weather.o(.text._cbDialog)
 <LI><a href="#[151]">_cbWinPreview</a> from weather.o(.text._cbWinPreview) referenced from weather.o(.text._cbDialog)
 <LI><a href="#[ba]">main</a> from emwin_slide_show.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[5]">memcpy</a> from memmove.o(.text) referenced 2 times from GUI__Private.o(.data.GUI__pfMemcpy)
 <LI><a href="#[6]">memset</a> from memseta.o(.text) referenced 2 times from GUI__Private.o(.data.GUI__pfMemset)
 <LI><a href="#[8]">strcmp</a> from strcmp.o(.text) referenced 2 times from GUI__Private.o(.data.GUI__pfStrcmp)
 <LI><a href="#[9]">strcpy</a> from strcpy.o(.text) referenced 2 times from GUI__Private.o(.data.GUI__pfStrcpy)
 <LI><a href="#[a]">strlen</a> from strlen.o(.text) referenced 2 times from GUI__Private.o(.data.GUI__pfStrlen)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[bc]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[408]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[1a9]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1ad]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[409]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[40a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[40b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[40c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[40d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[12]"></a>Reset_Handler</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[97]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[98]"></a>ACMP2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[99]"></a>ACMP3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[9a]"></a>ACMP4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[5f]"></a>ADC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[60]"></a>ADC2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[95]"></a>ADC_ETC_ERROR_IRQ_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[92]"></a>ADC_ETC_IRQ0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[93]"></a>ADC_ETC_IRQ1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[94]"></a>ADC_ETC_IRQ2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[53]"></a>BEE_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[16]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[de]"></a>CAN1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[df]"></a>CAN2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[ef]"></a>CAN3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>CCM_1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[7c]"></a>CCM_2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[2f]"></a>CORE_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[47]"></a>CSI_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[4d]"></a>CSU_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[2d]"></a>CTI0_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[2e]"></a>CTI1_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[61]"></a>DCDC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[4e]"></a>DCP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[4f]"></a>DCP_VMI_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[bd]"></a>DMA0_DMA16_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>DMA10_DMA26_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c8]"></a>DMA11_DMA27_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>DMA12_DMA28_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>DMA13_DMA29_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>DMA14_DMA30_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[cc]"></a>DMA15_DMA31_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>DMA1_DMA17_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>DMA2_DMA18_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>DMA3_DMA19_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>DMA4_DMA20_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>DMA5_DMA21_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>DMA6_DMA22_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>DMA7_DMA23_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>DMA8_DMA24_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>DMA9_DMA25_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>DMA_ERROR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[11]"></a>DefaultISR</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP1_IRQHandler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> fsl_lpuart.o(.data.s_lpuartIsr)
<LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[9d]"></a>ENC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[9e]"></a>ENC2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[9f]"></a>ENC3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a0]"></a>ENC4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[ee]"></a>ENET2_1588_Timer_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[ed]"></a>ENET2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>ENET_1588_Timer_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[eb]"></a>ENET_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>EWM_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[e5]"></a>FLEXIO1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>FLEXIO2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>FLEXIO3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>FLEXRAM_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[e7]"></a>FLEXSPI2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>FLEXSPI_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>GPC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[6c]"></a>GPIO1_Combined_0_15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[6d]"></a>GPIO1_Combined_16_31_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[64]"></a>GPIO1_INT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[65]"></a>GPIO1_INT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[66]"></a>GPIO1_INT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[67]"></a>GPIO1_INT3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[68]"></a>GPIO1_INT4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[69]"></a>GPIO1_INT5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[6a]"></a>GPIO1_INT6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[6b]"></a>GPIO1_INT7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[6e]"></a>GPIO2_Combined_0_15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[6f]"></a>GPIO2_Combined_16_31_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[70]"></a>GPIO3_Combined_0_15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[71]"></a>GPIO3_Combined_16_31_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[72]"></a>GPIO4_Combined_0_15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[73]"></a>GPIO4_Combined_16_31_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[74]"></a>GPIO5_Combined_0_15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[75]"></a>GPIO5_Combined_16_31_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b9]"></a>GPIO6_7_8_9_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[45]"></a>GPR_IRQ_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[80]"></a>GPT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[81]"></a>GPT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[43]"></a>KPP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[da]"></a>LPSPI1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>LPSPI2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>LPSPI3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>LPSPI4_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[96]"></a>PIT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[59]"></a>PMU_EVENT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[82]"></a>PWM1_0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[83]"></a>PWM1_1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[84]"></a>PWM1_2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[85]"></a>PWM1_3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[86]"></a>PWM1_FAULT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a5]"></a>PWM2_0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a6]"></a>PWM2_1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a7]"></a>PWM2_2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a8]"></a>PWM2_3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a9]"></a>PWM2_FAULT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[aa]"></a>PWM3_0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[ab]"></a>PWM3_1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[ac]"></a>PWM3_2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[ad]"></a>PWM3_3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[ae]"></a>PWM3_FAULT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[af]"></a>PWM4_0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b0]"></a>PWM4_1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b1]"></a>PWM4_2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b2]"></a>PWM4_3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b3]"></a>PWM4_FAULT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[48]"></a>PXP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[79]"></a>RTWDOG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[7f]"></a>Reserved115_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[9b]"></a>Reserved143_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[9c]"></a>Reserved144_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b7]"></a>Reserved171_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[50]"></a>Reserved68_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[5a]"></a>Reserved78_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[62]"></a>Reserved86_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[63]"></a>Reserved87_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[e0]"></a>SAI1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>SAI2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>SAI3_RX_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>SAI3_TX_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>SEMC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[52]"></a>SJC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[4a]"></a>SNVS_HP_WRAPPER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[4b]"></a>SNVS_HP_WRAPPER_TZ_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[4c]"></a>SNVS_LP_WRAPPER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[e4]"></a>SPDIF_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[7e]"></a>SRC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[5b]"></a>TEMP_LOW_HIGH_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[5c]"></a>TEMP_PANIC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a1]"></a>TMR1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a2]"></a>TMR2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a3]"></a>TMR3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[a4]"></a>TMR4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[51]"></a>TRNG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[44]"></a>TSC_DIG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[8d]"></a>USB_OTG1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[8c]"></a>USB_OTG2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[5d]"></a>USB_PHY1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[5e]"></a>USB_PHY2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[e9]"></a>USDHC1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>USDHC2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[78]"></a>WDOG1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[49]"></a>WDOG2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[90]"></a>XBAR1_IRQ_0_1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[91]"></a>XBAR1_IRQ_2_3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[13]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1062.o(.text)
<LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[14]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1062.o(.text)
<LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[18]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1062.o(.text)
<LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[1a]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1062.o(.text)
<LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[1b]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1062.o(.text)
<LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[1c]"></a>DMA0_DMA16_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_DMA17_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[1e]"></a>DMA2_DMA18_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[1f]"></a>DMA3_DMA19_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[20]"></a>DMA4_DMA20_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[21]"></a>DMA5_DMA21_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[22]"></a>DMA6_DMA22_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[23]"></a>DMA7_DMA23_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[24]"></a>DMA8_DMA24_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[25]"></a>DMA9_DMA25_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[26]"></a>DMA10_DMA26_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[27]"></a>DMA11_DMA27_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[28]"></a>DMA12_DMA28_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[29]"></a>DMA13_DMA29_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[2a]"></a>DMA14_DMA30_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[2b]"></a>DMA15_DMA31_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[2c]"></a>DMA_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[30]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[31]"></a>LPUART2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[32]"></a>LPUART3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[33]"></a>LPUART4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[34]"></a>LPUART5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[35]"></a>LPUART6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[36]"></a>LPUART7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[37]"></a>LPUART8_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[38]"></a>LPI2C1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[39]"></a>LPI2C2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[3a]"></a>LPI2C3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[3b]"></a>LPI2C4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[3c]"></a>LPSPI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[3d]"></a>LPSPI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[3e]"></a>LPSPI3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[3f]"></a>LPSPI4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[40]"></a>CAN1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[41]"></a>CAN2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[54]"></a>SAI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[55]"></a>SAI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[56]"></a>SAI3_RX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[57]"></a>SAI3_TX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[58]"></a>SPDIF_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[76]"></a>FLEXIO1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[77]"></a>FLEXIO2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[87]"></a>FLEXSPI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[88]"></a>FLEXSPI_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[8a]"></a>USDHC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[8b]"></a>USDHC2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[8e]"></a>ENET_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[8f]"></a>ENET_1588_Timer_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b4]"></a>ENET2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b5]"></a>ENET2_1588_Timer_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b6]"></a>CAN3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[b8]"></a>FLEXIO3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mimxrt1062.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[2e4]"></a>abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, siabs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[40e]"></a>____aeabi_memcpy8$ret$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[40f]"></a>___aeabi_memmove$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[410]"></a>___aeabi_memmove4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[411]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[412]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[22f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SavePrivateContextOnDemand
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
</UL>

<P><STRONG><a name="[5]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Private.o(.data.GUI__pfMemcpy)
</UL>
<P><STRONG><a name="[3ff]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RS_BLOCK_InitBlock
</UL>

<P><STRONG><a name="[1ac]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[413]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[414]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1ab]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[318]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcDatasizeY
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDistToNextItem
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDestination
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_Log2Vis
</UL>

<P><STRONG><a name="[415]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPT_GetDefaultConfig
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetDefaultConfig
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_Init
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_SlaveTransferHandleIRQ
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialManager_OpenWriteHandle
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialManager_OpenReadHandle
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialManager_Init
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Private.o(.data.GUI__pfMemset)
</UL>
<P><STRONG><a name="[a]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI__Private.o(.data.GUI__pfStrlen)
</UL>
<P><STRONG><a name="[8]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Private.o(.data.GUI__pfStrcmp)
</UL>
<P><STRONG><a name="[308]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[9]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI__Private.o(.data.GUI__pfStrcpy)
</UL>
<P><STRONG><a name="[1aa]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[416]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[417]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[418]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>APP_ELCDIF_Init</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, emwin_support.o(.text.APP_ELCDIF_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[1b0]"></a>APP_LCDIF_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, emwin_support.o(.text.APP_LCDIF_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = APP_LCDIF_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Confirm
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDIF_IRQHandler
</UL>

<P><STRONG><a name="[1b2]"></a>BOARD_BootClockRUN</STRONG> (Thumb, 1404 bytes, Stack size 40 bytes, clock_config.o(.text.BOARD_BootClockRUN))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BOARD_BootClockRUN &rArr; CLOCK_SetMux
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SwitchOsc
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitRcOsc24M
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitExternalClk
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitArmPll
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_DeinitUsb2Pll
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_DeinitEnetPll
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_DeinitAudioPll
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetMux
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootClocks
</UL>

<P><STRONG><a name="[406]"></a>BOARD_ConfigMPU</STRONG> (Thumb, 564 bytes, Stack size 20 bytes, board.o(.text.BOARD_ConfigMPU))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BOARD_ConfigMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ba]"></a>BOARD_DebugConsoleSrcFreq</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, board.o(.text.BOARD_DebugConsoleSrcFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BOARD_DebugConsoleSrcFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[1bc]"></a>BOARD_InitBootClocks</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, clock_config.o(.text.BOARD_InitBootClocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BOARD_InitBootClocks &rArr; BOARD_BootClockRUN &rArr; CLOCK_SetMux
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bd]"></a>BOARD_InitBootPins</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pin_mux.o(.text.BOARD_InitBootPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BOARD_InitBootPins
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitSemcPins
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitI2C1Pins
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c1]"></a>BOARD_InitDebugConsole</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, board.o(.text.BOARD_InitDebugConsole))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; SerialManager_Init &rArr; Serial_UartInit &rArr; HAL_UartInit &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c3]"></a>BOARD_InitGPT</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, emwin_slide_show.o(.text.BOARD_InitGPT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BOARD_InitGPT &rArr; GPT_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPT_Init
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPT_GetDefaultConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bf]"></a>BOARD_InitI2C1Pins</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, pin_mux.o(.text.BOARD_InitI2C1Pins))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootPins
</UL>

<P><STRONG><a name="[1c6]"></a>BOARD_InitLcd</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, emwin_slide_show.o(.text.BOARD_InitLcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BOARD_InitLcd &rArr; GPIO_PinInit &rArr; GPIO_PinSetInterruptConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePinOutput
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ca]"></a>BOARD_InitLcdifPixelClock</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, emwin_slide_show.o(.text.BOARD_InitLcdifPixelClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BOARD_InitLcdifPixelClock &rArr; CLOCK_InitVideoPll
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitVideoPll
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1be]"></a>BOARD_InitPins</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, pin_mux.o(.text.BOARD_InitPins))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootPins
</UL>

<P><STRONG><a name="[1c0]"></a>BOARD_InitSemcPins</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, pin_mux.o(.text.BOARD_InitSemcPins))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootPins
</UL>

<P><STRONG><a name="[1cc]"></a>BOARD_Touch_Poll</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, emwin_support.o(.text.BOARD_Touch_Poll))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = BOARD_Touch_Poll &rArr; FT5406_RT_GetSingleTouch &rArr; FT5406_RT_ReadTouchData &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_GetSingleTouch
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>BUTTON_Callback</STRONG> (Thumb, 270 bytes, Stack size unknown bytes, BUTTON.o(.text.BUTTON_Callback))
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStartStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON.o(.text.BUTTON_CreateUser)
</UL>
<P><STRONG><a name="[1da]"></a>BUTTON_CreateAsChild</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, BUTTON.o(.text.BUTTON_CreateAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateAsChild &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[1a8]"></a>BUTTON_CreateIndirect</STRONG> (Thumb, 66 bytes, Stack size unknown bytes, BUTTON.o(.text.BUTTON_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateIndirect &rArr; BUTTON_SetText &rArr; GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> weather.o(.rodata._aDialogCreate)
</UL>
<P><STRONG><a name="[1db]"></a>BUTTON_CreateUser</STRONG> (Thumb, 178 bytes, Stack size unknown bytes, BUTTON.o(.text.BUTTON_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
</UL>

<P><STRONG><a name="[0]"></a>BUTTON_DrawSkinFlex</STRONG> (Thumb, 580 bytes, Stack size unknown bytes, BUTTON_SkinFlex.o(.text.BUTTON_DrawSkinFlex))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonSkin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON.o(.data.BUTTON__DefaultProps)
</UL>
<P><STRONG><a name="[1ee]"></a>BUTTON_GetText</STRONG> (Thumb, 108 bytes, Stack size unknown bytes, BUTTON.o(.text.BUTTON_GetText))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStartStop
</UL>

<P><STRONG><a name="[1d8]"></a>BUTTON_IsPressed</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, BUTTON.o(.text.BUTTON_IsPressed))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStartStop
</UL>

<P><STRONG><a name="[145]"></a>BUTTON_SetBitmapEx</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, BUTTON_Bitmap.o(.text.BUTTON_SetBitmapEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetBitmapEx &rArr; GUI_DRAW_BITMAP_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwin_slide_show.o(.text._cbBk)
</UL>
<P><STRONG><a name="[1f1]"></a>BUTTON_SetSkin</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, BUTTON_Skin.o(.text.BUTTON_SetSkin))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[1dc]"></a>BUTTON_SetText</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, BUTTON.o(.text.BUTTON_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetText &rArr; GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[1f0]"></a>BUTTON__SetDrawObj</STRONG> (Thumb, 66 bytes, Stack size unknown bytes, BUTTON__SetDrawObj.o(.text.BUTTON__SetDrawObj))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBitmapEx
</UL>

<P><STRONG><a name="[1b7]"></a>CLOCK_DeinitAudioPll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_DeinitAudioPll))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1b8]"></a>CLOCK_DeinitEnetPll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_DeinitEnetPll))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1b9]"></a>CLOCK_DeinitUsb2Pll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_DeinitUsb2Pll))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1f8]"></a>CLOCK_GetAhbFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_GetAhbFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLOCK_GetAhbFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetIpgFreq
</UL>

<P><STRONG><a name="[1fa]"></a>CLOCK_GetFreq</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CLOCK_GetFreq &rArr; CLOCK_GetPerClkFreq &rArr; CLOCK_GetIpgFreq &rArr; CLOCK_GetAhbFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSemcFreq
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPerClkFreq
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetIpgFreq
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetAhbFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[1fe]"></a>CLOCK_GetIpgFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_GetIpgFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CLOCK_GetIpgFreq &rArr; CLOCK_GetAhbFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetAhbFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPerClkFreq
</UL>

<P><STRONG><a name="[1ff]"></a>CLOCK_GetPerClkFreq</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_GetPerClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CLOCK_GetPerClkFreq &rArr; CLOCK_GetIpgFreq &rArr; CLOCK_GetAhbFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetIpgFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[1bb]"></a>CLOCK_GetPllFreq</STRONG> (Thumb, 484 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetPllFreq))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
</UL>

<P><STRONG><a name="[1fd]"></a>CLOCK_GetSemcFreq</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_GetSemcFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLOCK_GetSemcFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[1fc]"></a>CLOCK_GetSysPfdFreq</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_GetSysPfdFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_GetSysPfdFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSemcFreq
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
</UL>

<P><STRONG><a name="[1fb]"></a>CLOCK_GetUsb1PfdFreq</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_GetUsb1PfdFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_GetUsb1PfdFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSemcFreq
</UL>

<P><STRONG><a name="[1b6]"></a>CLOCK_InitArmPll</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_InitArmPll))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1b3]"></a>CLOCK_InitExternalClk</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_InitExternalClk))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1b4]"></a>CLOCK_InitRcOsc24M</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_InitRcOsc24M))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1cb]"></a>CLOCK_InitVideoPll</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_InitVideoPll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_InitVideoPll
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcdifPixelClock
</UL>

<P><STRONG><a name="[1b5]"></a>CLOCK_SwitchOsc</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_SwitchOsc))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[200]"></a>CreateAlarm</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, alarm.o(.text.CreateAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = CreateAlarm &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[201]"></a>CreateInfo</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, info.o(.text.CreateInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = CreateInfo &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[202]"></a>CreateMemdevContainer</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, emwin_slide_show.o(.text.CreateMemdevContainer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = CreateMemdevContainer &rArr; GUI_MEMDEV_CreateFixed32 &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
</UL>

<P><STRONG><a name="[206]"></a>CreateWeather</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, weather.o(.text.CreateWeather))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = CreateWeather
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[1c2]"></a>DbgConsole_Init</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, fsl_debug_console.o(.text.DbgConsole_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DbgConsole_Init &rArr; SerialManager_Init &rArr; Serial_UartInit &rArr; HAL_UartInit &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialManager_OpenWriteHandle
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialManager_OpenReadHandle
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialManager_Init
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[20b]"></a>ELCDIF_Reset</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fsl_elcdif.o(.text.ELCDIF_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
</UL>

<P><STRONG><a name="[1af]"></a>ELCDIF_RgbModeInit</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, fsl_elcdif.o(.text.ELCDIF_RgbModeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_Reset
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ELCDIF_Init
</UL>

<P><STRONG><a name="[1cd]"></a>FT5406_RT_GetSingleTouch</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, fsl_ft5406_rt.o(.text.FT5406_RT_GetSingleTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = FT5406_RT_GetSingleTouch &rArr; FT5406_RT_ReadTouchData &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_ReadTouchData
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_Touch_Poll
</UL>

<P><STRONG><a name="[20d]"></a>FT5406_RT_Init</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, fsl_ft5406_rt.o(.text.FT5406_RT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FT5406_RT_Init &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[20c]"></a>FT5406_RT_ReadTouchData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_ft5406_rt.o(.text.FT5406_RT_ReadTouchData))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FT5406_RT_ReadTouchData &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_GetSingleTouch
</UL>

<P><STRONG><a name="[20f]"></a>GL_DrawBitmap</STRONG> (Thumb, 168 bytes, Stack size unknown bytes, GUI_DrawBitmap.o(.text.GL_DrawBitmap))
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
</UL>

<P><STRONG><a name="[212]"></a>GL_DrawLineEx</STRONG> (Thumb, 458 bytes, Stack size unknown bytes, GUI_DrawLine.o(.text.GL_DrawLineEx))
<BR><BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine1Ex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[217]"></a>GL_DrawPoint</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, GUI_DrawLib.o(.text.GL_DrawPoint))
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine1Ex
</UL>

<P><STRONG><a name="[218]"></a>GL_FillCircle</STRONG> (Thumb, 226 bytes, Stack size unknown bytes, GUI_Circ.o(.text.GL_FillCircle))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[219]"></a>GL_FillCircleAA_HiRes</STRONG> (Thumb, 230 bytes, Stack size unknown bytes, GUIAA_Circle.o(.text.GL_FillCircleAA_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[216]"></a>GL_FillPolygon</STRONG> (Thumb, 544 bytes, Stack size unknown bytes, GUI_FillPolygon.o(.text.GL_FillPolygon))
<BR><BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[21d]"></a>GL_SetDefault</STRONG> (Thumb, 142 bytes, Stack size unknown bytes, GUI_Common.o(.text.GL_SetDefault))
<BR><BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[1c7]"></a>GPIO_PinInit</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, fsl_gpio.o(.text.GPIO_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_PinInit &rArr; GPIO_PinSetInterruptConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinSetInterruptConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcd
</UL>

<P><STRONG><a name="[222]"></a>GPIO_PinSetInterruptConfig</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, fsl_gpio.o(.text.GPIO_PinSetInterruptConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PinSetInterruptConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>

<P><STRONG><a name="[221]"></a>GPIO_PinWrite</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_gpio.o(.text.GPIO_PinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePinOutput
</UL>

<P><STRONG><a name="[1c4]"></a>GPT_GetDefaultConfig</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, fsl_gpt.o(.text.GPT_GetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPT_GetDefaultConfig &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitGPT
</UL>

<P><STRONG><a name="[1c5]"></a>GPT_Init</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, fsl_gpt.o(.text.GPT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPT_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPT_GetInstance
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitGPT
</UL>

<P><STRONG><a name="[16d]"></a>GUIMONO_DispChar</STRONG> (Thumb, 344 bytes, Stack size unknown bytes, GUI_CharM.o(.text.GUIMONO_DispChar))
<BR><BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata.GUI_Font6x8)
</UL>
<P><STRONG><a name="[16e]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUI_CharM.o(.text.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata.GUI_Font6x8)
</UL>
<P><STRONG><a name="[16f]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, GUI_CharM.o(.text.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata.GUI_Font6x8)
</UL>
<P><STRONG><a name="[170]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, GUI_CharM.o(.text.GUIMONO_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata.GUI_Font6x8)
</UL>
<P><STRONG><a name="[171]"></a>GUIPROP_AA4_EXT_DispChar</STRONG> (Thumb, 210 bytes, Stack size unknown bytes, GUIAA_Char4Ext.o(.text.GUIPROP_AA4_EXT_DispChar))
<BR><BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawNonExistingCharacter
</UL>
<BR>[Address Reference Count : 3]<UL><LI> aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
<LI> aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
<LI> aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
</UL>
<P><STRONG><a name="[169]"></a>GUIPROP_DispChar</STRONG> (Thumb, 250 bytes, Stack size unknown bytes, GUI_CharP.o(.text.GUIPROP_DispChar))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawNonExistingCharacter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> F13_1.o(.rodata.GUI_Font13_1)
</UL>
<P><STRONG><a name="[176]"></a>GUIPROP_EXT_DispChar</STRONG> (Thumb, 216 bytes, Stack size unknown bytes, GUI_CharPExt.o(.text.GUIPROP_EXT_DispChar))
<BR><BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawNonExistingCharacter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> font_13_r.o(.rodata.GUI_Font_13_R)
</UL>
<P><STRONG><a name="[172]"></a>GUIPROP_EXT_GetCharDistX</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharDistX))
<BR><BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNonExistingCharWidth
</UL>
<BR>[Address Reference Count : 4]<UL><LI> aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
<LI> aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
<LI> aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
<LI> font_13_r.o(.rodata.GUI_Font_13_R)
</UL>
<P><STRONG><a name="[175]"></a>GUIPROP_EXT_GetCharInfo</STRONG> (Thumb, 68 bytes, Stack size unknown bytes, GUI_CharPExt.o(.text.GUIPROP_EXT_GetCharInfo))
<BR>[Address Reference Count : 4]<UL><LI> aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
<LI> aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
<LI> aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
<LI> font_13_r.o(.rodata.GUI_Font_13_R)
</UL>
<P><STRONG><a name="[173]"></a>GUIPROP_EXT_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, GUI_CharPExt.o(.text.GUIPROP_EXT_GetFontInfo))
<BR>[Address Reference Count : 4]<UL><LI> aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
<LI> aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
<LI> aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
<LI> font_13_r.o(.rodata.GUI_Font_13_R)
</UL>
<P><STRONG><a name="[174]"></a>GUIPROP_EXT_IsInFont</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUI_CharPExt.o(.text.GUIPROP_EXT_IsInFont))
<BR>[Address Reference Count : 4]<UL><LI> aa4_b_100.o(.rodata.GUI_FontAA4_B_100)
<LI> aa4_b_20.o(.rodata.GUI_FontAA4_B_20)
<LI> aa4_b_40.o(.rodata.GUI_FontAA4_B_40)
<LI> font_13_r.o(.rodata.GUI_Font_13_R)
</UL>
<P><STRONG><a name="[d]"></a>GUIPROP_EXT__ClearLine</STRONG> (Thumb, 256 bytes, Stack size unknown bytes, GUI_EncExt.o(.text.GUIPROP_EXT__ClearLine))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNonExistingCharWidth
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EncExt.o(.data._fpClearLine)
</UL>
<P><STRONG><a name="[168]"></a>GUIPROP_EXT__DispLine</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, GUI_EncExt.o(.text.GUIPROP_EXT__DispLine))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EncExt.o(.rodata.GUI_ENC_APIList_EXT)
</UL>
<P><STRONG><a name="[226]"></a>GUIPROP_EXT__FindChar</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_CharPExt.o(.text.GUIPROP_EXT__FindChar))
<BR><BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[16a]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 78 bytes, Stack size unknown bytes, GUI_CharP.o(.text.GUIPROP_GetCharDistX))
<BR><BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNonExistingCharWidth
</UL>
<BR>[Address Reference Count : 1]<UL><LI> F13_1.o(.rodata.GUI_Font13_1)
</UL>
<P><STRONG><a name="[16b]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, GUI_CharP.o(.text.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> F13_1.o(.rodata.GUI_Font13_1)
</UL>
<P><STRONG><a name="[16c]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUI_CharP.o(.text.GUIPROP_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> F13_1.o(.rodata.GUI_Font13_1)
</UL>
<P><STRONG><a name="[22e]"></a>GUITASK_CopyContext</STRONG> (Thumb, 110 bytes, Stack size unknown bytes, GUI_Task.o(.text.GUITASK_CopyContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUITASK_CopyContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[231]"></a>GUITASK_Init</STRONG> (Thumb, 98 bytes, Stack size unknown bytes, GUI_Task.o(.text.GUITASK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUITASK_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[235]"></a>GUI_AA_DrawRoundedRect</STRONG> (Thumb, 1024 bytes, Stack size unknown bytes, GUIAA_DrawRoundedRect.o(.text.GUI_AA_DrawRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_AA_DrawRoundedRect &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[21b]"></a>GUI_AA_Exit</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUIAA_Lib.o(.text.GUI_AA_Exit))
<BR><BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[23d]"></a>GUI_AA_FillCircle</STRONG> (Thumb, 192 bytes, Stack size unknown bytes, GUIAA_Circle.o(.text.GUI_AA_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_AA_FillCircle &rArr; GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[239]"></a>GUI_AA_HiRes2Pixel</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUIAA_Lib.o(.text.GUI_AA_HiRes2Pixel))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[23e]"></a>GUI_AA_Init</STRONG> (Thumb, 338 bytes, Stack size unknown bytes, GUIAA_Lib.o(.text.GUI_AA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
</UL>

<P><STRONG><a name="[21a]"></a>GUI_AA_Init_HiRes</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, GUIAA_Lib.o(.text.GUI_AA_Init_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[228]"></a>GUI_AA__DrawCharAA4</STRONG> (Thumb, 286 bytes, Stack size unknown bytes, GUIAA_Char4.o(.text.GUI_AA__DrawCharAA4))
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
</UL>

<P><STRONG><a name="[242]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 150 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_AllocInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[243]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Create
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRS
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA_ResolvePairedBrackets
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConstructContext
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[245]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 108 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Create
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_AddItem
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRS
</UL>

<P><STRONG><a name="[30d]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[246]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 68 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_Free))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Delete
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Create
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_AddItem
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Delete
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[272]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[1d1]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_FreePtr))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[1d2]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_FreePtrArray))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[233]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 182 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreatehCrit
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>

<P><STRONG><a name="[24b]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_GetMaxSize))
<BR><BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[32b]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_GetSize))
<BR><BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[277]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[1d0]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_LockH))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_GetInfo
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextColor
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextAlign
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetSel
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetDeceleration
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetBkColor
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_MoveToPos
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_GetPos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_StartEx
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Create
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_AddItem
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetText
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopAutoMove
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcDatasizeY
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPressed
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDistToNextItem
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDestination
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateTimer
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckTimer
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SavePrivateContextOnDemand
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Exec
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Delete
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopAuto
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Start
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecAnimations
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRS
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA_ResolvePairedBrackets
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConstructContext
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[24c]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 214 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_Realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[24d]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_RequestSize))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[279]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[1d3]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_GetInfo
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextColor
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextAlign
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetSel
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetDeceleration
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetBkColor
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_MoveToPos
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_GetPos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_StartEx
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Create
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_AddItem
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetText
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopAutoMove
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcDatasizeY
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPressed
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDistToNextItem
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDestination
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateTimer
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckTimer
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SavePrivateContextOnDemand
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Exec
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Delete
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopAuto
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Start
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecAnimations
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[26b]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Delete
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Create
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[3f8]"></a>GUI_ALLOC_p2h</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, GUI_Alloc.o(.text.GUI_ALLOC_p2h))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>

<P><STRONG><a name="[24e]"></a>GUI_ANIM_AddItem</STRONG> (Thumb, 310 bytes, Stack size unknown bytes, GUI_ANIM.o(.text.GUI_ANIM_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_ANIM_AddItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AnimateCreate
</UL>

<P><STRONG><a name="[24f]"></a>GUI_ANIM_Create</STRONG> (Thumb, 112 bytes, Stack size unknown bytes, GUI_ANIM.o(.text.GUI_ANIM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_ANIM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AnimateCreate
</UL>

<P><STRONG><a name="[250]"></a>GUI_ANIM_Delete</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, GUI_ANIM.o(.text.GUI_ANIM_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecAnimations
</UL>

<P><STRONG><a name="[251]"></a>GUI_ANIM_Exec</STRONG> (Thumb, 500 bytes, Stack size unknown bytes, GUI_ANIM.o(.text.GUI_ANIM_Exec))
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecAnimations
</UL>

<P><STRONG><a name="[253]"></a>GUI_ANIM_Start</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, GUI_ANIM.o(.text.GUI_ANIM_Start))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecAnimations
</UL>

<P><STRONG><a name="[255]"></a>GUI_ANIM_StartEx</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, GUI_ANIM.o(.text.GUI_ANIM_StartEx))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AnimateCreate
</UL>

<P><STRONG><a name="[11d]"></a>GUI_ANIM__AccelDecel</STRONG> (Thumb, 102 bytes, Stack size unknown bytes, GUI_ANIM.o(.text.GUI_ANIM__AccelDecel))
<BR>[Address Reference Count : 1]<UL><LI> emwin_slide_show.o(.text._AnimateCreate)
</UL>
<P><STRONG><a name="[256]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 130 bytes, Stack size unknown bytes, GUI_ARRAY.o(.text.GUI_ARRAY_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
</UL>

<P><STRONG><a name="[257]"></a>GUI_ARRAY_Create</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, GUI_ARRAY.o(.text.GUI_ARRAY_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
</UL>

<P><STRONG><a name="[258]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, GUI_ARRAY.o(.text.GUI_ARRAY_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>

<P><STRONG><a name="[259]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 98 bytes, Stack size unknown bytes, GUI_ARRAY_DeleteItem.o(.text.GUI_ARRAY_DeleteItem))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetText
</UL>

<P><STRONG><a name="[25a]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, GUI_ARRAY.o(.text.GUI_ARRAY_GetNumItems))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetText
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcDatasizeY
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDistToNextItem
</UL>

<P><STRONG><a name="[25b]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, GUI_ARRAY.o(.text.GUI_ARRAY_GethItem))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcDatasizeY
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDistToNextItem
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDestination
</UL>

<P><STRONG><a name="[25d]"></a>GUI_ARRAY_GetpItemLocked</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, GUI_ARRAY.o(.text.GUI_ARRAY_GetpItemLocked))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcDatasizeY
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDistToNextItem
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDestination
</UL>

<P><STRONG><a name="[25c]"></a>GUI_ARRAY__GethItem</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, GUI_ARRAY.o(.text.GUI_ARRAY__GethItem))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>

<P><STRONG><a name="[25e]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 106 bytes, Stack size unknown bytes, GUI_Cursor.o(.text.GUI_CURSOR_SetPositionEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3df]"></a>GUI_CalcColorDist</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_CalcColorDist))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[204]"></a>GUI_Clear</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUI_Core.o(.text.GUI_Clear))
<BR><BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStartStop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[263]"></a>GUI_ClearRect</STRONG> (Thumb, 108 bytes, Stack size unknown bytes, GUI_Core.o(.text.GUI_ClearRect))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[264]"></a>GUI_ClearRectEx</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_Core.o(.text.GUI_ClearRectEx))
<BR><BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
</UL>

<P><STRONG><a name="[207]"></a>GUI_CreateDialogBox</STRONG> (Thumb, 196 bytes, Stack size unknown bytes, DIALOG.o(.text.GUI_CreateDialogBox))
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateWeather
</UL>

<P><STRONG><a name="[2d1]"></a>GUI_DCACHE_Clear</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUI_Core.o(.text.GUI_DCACHE_Clear), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>

<P><STRONG><a name="[347]"></a>GUI_DCACHE_SetClearCacheHook</STRONG> (Thumb, 12 bytes, Stack size unknown bytes, GUI_Core.o(.text.GUI_DCACHE_SetClearCacheHook))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[26e]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 82 bytes, Stack size unknown bytes, GUI_Device.o(.text.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[26f]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, GUI_Device.o(.text.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[271]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, GUI_Device.o(.text.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[270]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 144 bytes, Stack size unknown bytes, GUI_Device.o(.text.GUI_DEVICE_Link))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
</UL>

<P><STRONG><a name="[273]"></a>GUI_DEVICE_LinkDevices</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, GUI_Device.o(.text.GUI_DEVICE_LinkDevices))
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[33e]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, GUI_Device.o(.text.GUI_DEVICE_Unlink))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[2a5]"></a>GUI_DEVICE_UnlinkTaskDevices</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, GUI_Device.o(.text.GUI_DEVICE_UnlinkTaskDevices))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[2ae]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUI_Device.o(.text.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[1ef]"></a>GUI_DRAW_BITMAP_Create</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, GUI_DRAW_BITMAP.o(.text.GUI_DRAW_BITMAP_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_DRAW_BITMAP_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBitmapEx
</UL>

<P><STRONG><a name="[1ed]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, GUI_DRAW.o(.text.GUI_DRAW__Draw))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[274]"></a>GUI_Delay</STRONG> (Thumb, 130 bytes, Stack size unknown bytes, GUI_Time.o(.text.GUI_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27a]"></a>GUI_DispString</STRONG> (Thumb, 278 bytes, Stack size unknown bytes, GUI_DispString.o(.text.GUI_DispString))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>

<P><STRONG><a name="[281]"></a>GUI_DispStringAt</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, GUI_DispString.o(.text.GUI_DispStringAt))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
</UL>

<P><STRONG><a name="[147]"></a>GUI_DispStringInRect</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, GUI_DispString.o(.text.GUI_DispStringInRect))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStartStop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 2]<UL><LI> weather.o(.text._cbButton)
<LI> weather.o(.text._cbWinCurrent)
</UL>
<P><STRONG><a name="[282]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, GUI_DispString.o(.text.GUI_DispStringInRectMax))
<BR><BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
</UL>

<P><STRONG><a name="[205]"></a>GUI_DrawBitmap</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, GUI_DrawBitmap.o(.text.GUI_DrawBitmap))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1ec]"></a>GUI_DrawGradientV</STRONG> (Thumb, 118 bytes, Stack size unknown bytes, GUI_DrawGradient.o(.text.GUI_DrawGradientV))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[1e2]"></a>GUI_DrawHLine</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, GUI_DrawLib.o(.text.GUI_DrawHLine))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[287]"></a>GUI_DrawLine</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, GUI_DrawLine.o(.text.GUI_DrawLine))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
</UL>

<P><STRONG><a name="[1eb]"></a>GUI_DrawRect</STRONG> (Thumb, 196 bytes, Stack size unknown bytes, GUI_2DLib.o(.text.GUI_DrawRect))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[1e3]"></a>GUI_DrawVLine</STRONG> (Thumb, 82 bytes, Stack size unknown bytes, GUI_DrawLib.o(.text.GUI_DrawVLine))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[276]"></a>GUI_Exec</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[28a]"></a>GUI_Exec1</STRONG> (Thumb, 80 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_Exec1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[1e4]"></a>GUI_FillRect</STRONG> (Thumb, 88 bytes, Stack size unknown bytes, GUI_DrawLib.o(.text.GUI_FillRect))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[28c]"></a>GUI_FillRoundedRect</STRONG> (Thumb, 270 bytes, Stack size unknown bytes, GUI_FillRoundedRect.o(.text.GUI_FillRoundedRect))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[28e]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_GetBitmapPixelIndex))
<BR><BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
</UL>

<P><STRONG><a name="[28f]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 144 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_GetBitmapPixelIndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>

<P><STRONG><a name="[2c8]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>

<P><STRONG><a name="[22a]"></a>GUI_GetBkColor</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_GetBkColor))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[291]"></a>GUI_GetCharDistX</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, GUI_Char.o(.text.GUI_GetCharDistX))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[292]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, GUI_Char.o(.text.GUI_GetCharDistXEx))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[1e6]"></a>GUI_GetClientRect</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_GetClientRect))
<BR><BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[229]"></a>GUI_GetColor</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_GetColor))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[25f]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, GUI_SelectLayer.o(.text.GUI_GetCursorLayer))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[27b]"></a>GUI_GetFontDistY</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, GUI_Char.o(.text.GUI_GetFontDistY))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[295]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, GUI_SelectLayer.o(.text.GUI_GetLayerPosEx))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[297]"></a>GUI_GetOrg</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_GetOrg))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[238]"></a>GUI_GetPenSize</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_GetPenSize))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
</UL>

<P><STRONG><a name="[252]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, GUI_Time.o(.text.GUI_GetTime))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_MoveToPos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPressed
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckTimer
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagXY
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Exec
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Start
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
</UL>

<P><STRONG><a name="[27c]"></a>GUI_GetYAdjust</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, GUI_Char.o(.text.GUI_GetYAdjust))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[35f]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_GetYSizeOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
</UL>

<P><STRONG><a name="[2ca]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[2c9]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[262]"></a>GUI_GotoXY</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_GotoXY))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>

<P><STRONG><a name="[298]"></a>GUI_Init</STRONG> (Thumb, 304 bytes, Stack size unknown bytes, GUI_Core.o(.text.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_Init &rArr; GUI__Config &rArr; LCD_X_Config &rArr; FT5406_RT_Init &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplaySize
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dd]"></a>GUI_Lock</STRONG> (Thumb, 124 bytes, Stack size unknown bytes, GUI_Task.o(.text.GUI_Lock))
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_UnlinkTaskDevices
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Delete
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Create
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_GetInfo
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextColor
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextAlign
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetSel
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetDeceleration
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetBkColor
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_MoveToPos
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_GetPos
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_StartEx
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Create
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_AddItem
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetText
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Start
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Exec
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Delete
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecAnimations
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_ConvertUC2UTF8
</UL>

<P><STRONG><a name="[2a6]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, GUIDEV_Clear.o(.text.GUI_MEMDEV_Clear))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2a7]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, GUIDEV.o(.text.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2a8]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 162 bytes, Stack size unknown bytes, GUIDEV.o(.text.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[2ac]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, GUIDEV.o(.text.GUI_MEMDEV_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Create &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[2ad]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 148 bytes, Stack size unknown bytes, GUIDEV.o(.text.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[203]"></a>GUI_MEMDEV_CreateFixed32</STRONG> (Thumb, 64 bytes, Stack size unknown bytes, GUIDEV_CreateFixed.o(.text.GUI_MEMDEV_CreateFixed32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateFixed32 &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
</UL>

<P><STRONG><a name="[2b0]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 80 bytes, Stack size unknown bytes, GUIDEV.o(.text.GUI_MEMDEV_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2b2]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 382 bytes, Stack size unknown bytes, GUIDEV_Banding.o(.text.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[2bb]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, GUIDEV.o(.text.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[2bd]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, GUIDEV_GetDataPtr.o(.text.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[2be]"></a>GUI_MEMDEV_GetXSize</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, GUIDEV_GetXSize.o(.text.GUI_MEMDEV_GetXSize))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
</UL>

<P><STRONG><a name="[2b7]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, GUIDEV_GetYSize.o(.text.GUI_MEMDEV_GetYSize))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[119]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUIDEV_StaticDevices.o(.text.GUI_MEMDEV_Paint1Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 2]<UL><LI> WM.o(.text.WM__PaintWinAndOverlays)
<LI> WM.o(.text._Paint1Trans)
</UL>
<P><STRONG><a name="[2b9]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, GUIDEV_ReduceYSize.o(.text.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[14e]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 82 bytes, Stack size unknown bytes, GUIDEV.o(.text.GUI_MEMDEV_Select))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm.o(.text._cbClock)
</UL>
<P><STRONG><a name="[2ba]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, GUIDEV_SetOrg.o(.text.GUI_MEMDEV_SetOrg))
<BR><BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[2c0]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, GUIDEV_Write.o(.text.GUI_MEMDEV_Write))
<BR><BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[2c4]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 114 bytes, Stack size unknown bytes, GUIDEV_Write.o(.text.GUI_MEMDEV_WriteAt))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
</UL>

<P><STRONG><a name="[2af]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 280 bytes, Stack size unknown bytes, GUIDEV.o(.text.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[137]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 364 bytes, Stack size unknown bytes, GUIDEV_WriteToActiveAlpha.o(.text.GUI_MEMDEV__WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[2c5]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, GUIDEV.o(.text.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[2ab]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 1972 bytes, Stack size unknown bytes, GUIDEV_WriteToActiveOpaque.o(.text.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[3fa]"></a>GUI_MULTIBUF_Begin</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUI_MULTIBUF.o(.text.GUI_MULTIBUF_Begin))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_Begin
</UL>

<P><STRONG><a name="[2ce]"></a>GUI_MULTIBUF_BeginEx</STRONG> (Thumb, 136 bytes, Stack size unknown bytes, GUI_MULTIBUF.o(.text.GUI_MULTIBUF_BeginEx), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[344]"></a>GUI_MULTIBUF_Config</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_MULTIBUF.o(.text.GUI_MULTIBUF_Config))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2cf]"></a>GUI_MULTIBUF_ConfigEx</STRONG> (Thumb, 68 bytes, Stack size unknown bytes, GUI_MULTIBUF.o(.text.GUI_MULTIBUF_ConfigEx), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>

<P><STRONG><a name="[1b1]"></a>GUI_MULTIBUF_Confirm</STRONG> (Thumb, 66 bytes, Stack size unknown bytes, GUI_MULTIBUF.o(.text.GUI_MULTIBUF_Confirm))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_LCDIF_IRQHandler
</UL>

<P><STRONG><a name="[3fb]"></a>GUI_MULTIBUF_End</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUI_MULTIBUF.o(.text.GUI_MULTIBUF_End))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_End
</UL>

<P><STRONG><a name="[2d0]"></a>GUI_MULTIBUF_EndEx</STRONG> (Thumb, 124 bytes, Stack size unknown bytes, GUI_MULTIBUF.o(.text.GUI_MULTIBUF_EndEx), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DCACHE_Clear
</UL>

<P><STRONG><a name="[3bf]"></a>GUI_MergeRect</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_MergeRect))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[1e7]"></a>GUI_MoveRect</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[3a5]"></a>GUI_PID_GetState</STRONG> (Thumb, 120 bytes, Stack size unknown bytes, GUI_PID.o(.text.GUI_PID_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3a4]"></a>GUI_PID_IsEmpty</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, GUI_PID.o(.text.GUI_PID_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[2d2]"></a>GUI_PID_StoreState</STRONG> (Thumb, 246 bytes, Stack size unknown bytes, GUI_PID.o(.text.GUI_PID_StoreState))
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[2d4]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 74 bytes, Stack size unknown bytes, GUI_OnKey.o(.text.GUI_PollKeyMsg))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[2d6]"></a>GUI_QR_Create</STRONG> (Thumb, 4024 bytes, Stack size unknown bytes, GUI_QR.o(.text.GUI_QR_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_QR_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RS_BLOCK_InitBlock
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Delete
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Delete
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CalcRunLength
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CalcN1N3
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRS
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAME_FILLER_Next
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
</UL>

<P><STRONG><a name="[2e7]"></a>GUI_QR_Draw</STRONG> (Thumb, 68 bytes, Stack size unknown bytes, GUI_QR.o(.text.GUI_QR_Draw))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
</UL>

<P><STRONG><a name="[2e8]"></a>GUI_QR_GetInfo</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, GUI_QR.o(.text.GUI_QR_GetInfo))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
</UL>

<P><STRONG><a name="[2e9]"></a>GUI_ReadRectEx</STRONG> (Thumb, 102 bytes, Stack size unknown bytes, LCD_ReadRect.o(.text.GUI_ReadRectEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[3e4]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[2eb]"></a>GUI_RestoreContext</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_RestoreContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[2ec]"></a>GUI_SPLINE_Create</STRONG> (Thumb, 884 bytes, Stack size unknown bytes, GUI_SPLINE.o(.text.GUI_SPLINE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_SPLINE_Create &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
</UL>

<P><STRONG><a name="[2ed]"></a>GUI_SPLINE_Delete</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUI_SPLINE.o(.text.GUI_SPLINE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
</UL>

<P><STRONG><a name="[2ee]"></a>GUI_SPLINE_DrawAA</STRONG> (Thumb, 584 bytes, Stack size unknown bytes, GUI_SPLINE.o(.text.GUI_SPLINE_DrawAA))
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
</UL>

<P><STRONG><a name="[261]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 1358 bytes, Stack size unknown bytes, GUI_SPRITE.o(.text.GUI_SPRITE_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[2f8]"></a>GUI_SaveContext_W</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_SaveContext_W))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[2a9]"></a>GUI_SelectLCD</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_SelectLCD))
<BR><BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[2fa]"></a>GUI_SelectLayer</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, GUI_SelectLayer.o(.text.GUI_SelectLayer))
<BR><BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[148]"></a>GUI_SetBkColor</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_SetBkColor))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStartStop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>
<BR>[Address Reference Count : 2]<UL><LI> alarm.o(.text._cbClock)
<LI> weather.o(.text._cbWinCurrent)
</UL>
<P><STRONG><a name="[152]"></a>GUI_SetColor</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_SetColor))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStartStop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> weather.o(.text._cbWinCurrent)
</UL>
<P><STRONG><a name="[2fb]"></a>GUI_SetColorIndex</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_SetColorIndex))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallDrawBitmapHW
</UL>

<P><STRONG><a name="[30e]"></a>GUI_SetDefaultFont</STRONG> (Thumb, 12 bytes, Stack size unknown bytes, GUI_Core.o(.text.GUI_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[210]"></a>GUI_SetDrawMode</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_SetDrawMode))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>

<P><STRONG><a name="[1e5]"></a>GUI_SetFont</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_SetFont))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStartStop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[260]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUI_SelectLayer.o(.text.GUI_SetLayerPosEx))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[2a1]"></a>GUI_SetOrg</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_SetOrg))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[1e8]"></a>GUI_SetTextMode</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUI_Common.o(.text.GUI_SetTextMode))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
</UL>

<P><STRONG><a name="[2d3]"></a>GUI_SignalEvent</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUI_WaitEvent.o(.text.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[2fe]"></a>GUI_StoreKey</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_OnKey.o(.text.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[2ff]"></a>GUI_TIMER_Create</STRONG> (Thumb, 180 bytes, Stack size unknown bytes, GUI_Timer.o(.text.GUI_TIMER_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartMotionTimer
</UL>

<P><STRONG><a name="[301]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 124 bytes, Stack size unknown bytes, GUI_Timer.o(.text.GUI_TIMER_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[108]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 112 bytes, Stack size unknown bytes, GUI_Timer.o(.text.GUI_TIMER_Exec))
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Timer.o(.text.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[303]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, GUI_Timer.o(.text.GUI_TIMER_GetFlag))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[304]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 62 bytes, Stack size unknown bytes, GUI_Timer.o(.text.GUI_TIMER_Restart))
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[305]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, GUI_Timer.o(.text.GUI_TIMER_SetPeriod))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[306]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, GUI_Timer.o(.text.GUI_TIMER__GetFirstTimer))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[307]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, GUI_Timer.o(.text.GUI_TIMER__GetNextTimerLin))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[1ce]"></a>GUI_TOUCH_StoreStateEx</STRONG> (Thumb, 88 bytes, Stack size unknown bytes, GUI_TOUCH.o(.text.GUI_TOUCH_StoreStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 12 + Unknown Stack Size
<LI>Call Chain = GUI_TOUCH_StoreStateEx &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_Touch_Poll
</UL>

<P><STRONG><a name="[309]"></a>GUI_UC_ConvertUC2UTF8</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, GUI_UC_ConvertUC2UTF8.o(.text.GUI_UC_ConvertUC2UTF8))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_Log2Vis
</UL>

<P><STRONG><a name="[30a]"></a>GUI_UC_Encode</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, GUI_UC.o(.text.GUI_UC_Encode))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_ConvertUC2UTF8
</UL>

<P><STRONG><a name="[22c]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, GUI_UC.o(.text.GUI_UC__GetCharCodeInc))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawCharEXT
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChar
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetPresentationForm
</UL>

<P><STRONG><a name="[280]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, GUI_UC.o(.text.GUI_UC__NumChars2NumBytes))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[3e8]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, GUIDEV_Usage.o(.text.GUI_USAGE_AddRect))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[2c6]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, GUIDEV_UsageBM.o(.text.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[2b1]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, GUIDEV_Usage.o(.text.GUI_USAGE_DecUseCnt))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[1e0]"></a>GUI_Unlock</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_Task.o(.text.GUI_Unlock))
<BR><BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Delete
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Create
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_GetInfo
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextColor
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextAlign
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetSel
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetDeceleration
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetBkColor
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_MoveToPos
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_GetPos
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_StartEx
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Create
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_AddItem
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetText
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Start
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Exec
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Delete
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecAnimations
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_ConvertUC2UTF8
</UL>

<P><STRONG><a name="[30c]"></a>GUI_X_Config</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, emwin_support.o(.text.GUI_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[278]"></a>GUI_X_Delay</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, emwin_support.o(.text.GUI_X_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_X_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[2a3]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emwin_support.o(.text.GUI_X_GetTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
</UL>

<P><STRONG><a name="[275]"></a>GUI_X_GetTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, emwin_support.o(.text.GUI_X_GetTime))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>

<P><STRONG><a name="[29a]"></a>GUI_X_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emwin_support.o(.text.GUI_X_Init))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[234]"></a>GUI_X_InitOS</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emwin_support.o(.text.GUI_X_InitOS))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>

<P><STRONG><a name="[2a4]"></a>GUI_X_Lock</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emwin_support.o(.text.GUI_X_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[30b]"></a>GUI_X_Unlock</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emwin_support.o(.text.GUI_X_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
</UL>

<P><STRONG><a name="[310]"></a>GUI__ASinHQ</STRONG> (Thumb, 96 bytes, Stack size unknown bytes, GUI__SinHQ.o(.text.GUI__ASinHQ))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
</UL>

<P><STRONG><a name="[30f]"></a>GUI__ATan2</STRONG> (Thumb, 88 bytes, Stack size unknown bytes, GUI__SinHQ.o(.text.GUI__ATan2))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ASinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
</UL>

<P><STRONG><a name="[311]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, GUI__Alpha.o(.text.GUI__AllocAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[313]"></a>GUI__AlphaPreserveTrans</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, GUI_SetAlpha.o(.text.GUI__AlphaPreserveTrans))
<BR><BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetOrMask
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[315]"></a>GUI__BIDI2_IsNSM</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text.GUI__BIDI2_IsNSM))
<BR><BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAttribs
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetPresentationForm
</UL>

<P><STRONG><a name="[317]"></a>GUI__BIDI2_Log2Vis</STRONG> (Thumb, 148 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text.GUI__BIDI2_Log2Vis))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI__BIDI2_Log2Vis &rArr; _UBA &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReorderAndMirror
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DropContext
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoJoiningAndDecoding
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConstructContext
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_ConvertUC2UTF8
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI_Log2VisBuffered
</UL>

<P><STRONG><a name="[3]"></a>GUI__BIDI_Log2VisBuffered</STRONG> (Thumb, 62 bytes, Stack size unknown bytes, GUI_UC_EnableBIDI.o(.text.GUI__BIDI_Log2VisBuffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI__BIDI_Log2VisBuffered &rArr; GUI__BIDI2_Log2Vis &rArr; _UBA &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_Log2Vis
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_CharLine.o(.data.GUI_CharLine_pfLog2Vis)
</UL>
<P><STRONG><a name="[3e0]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 354 bytes, Stack size unknown bytes, GUI__CompactPixelIndices.o(.text.GUI__CompactPixelIndices))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>

<P><STRONG><a name="[31e]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, GUI__CompactPixelIndices.o(.text.GUI__CompactPixelIndicesEx))
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[299]"></a>GUI__Config</STRONG> (Thumb, 64 bytes, Stack size unknown bytes, GUI_Core.o(.text.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; FT5406_RT_Init &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[31f]"></a>GUI__ConvertColor2Index</STRONG> (Thumb, 420 bytes, Stack size unknown bytes, GUI__CompactPixelIndices.o(.text.GUI__ConvertColor2Index))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>

<P><STRONG><a name="[27f]"></a>GUI__DispLine</STRONG> (Thumb, 164 bytes, Stack size unknown bytes, GUI_CharLine.o(.text.GUI__DispLine))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[285]"></a>GUI__DispStringInRect</STRONG> (Thumb, 506 bytes, Stack size unknown bytes, GUI_DispString.o(.text.GUI__DispStringInRect))
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[323]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 474 bytes, Stack size unknown bytes, GUI__Alpha.o(.text.GUI__DoAlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[4]"></a>GUI__DrawCharEXT</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, GUI_EncExt.o(.text.GUI__DrawCharEXT))
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.data.GUI__pfDrawCharEXT)
</UL>
<P><STRONG><a name="[227]"></a>GUI__DrawNonExistingCharacter</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, GUI_Char.o(.text.GUI__DrawNonExistingCharacter))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_DispChar
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[1e1]"></a>GUI__DrawTwinArc4</STRONG> (Thumb, 552 bytes, Stack size unknown bytes, GUI__DrawTwinArc.o(.text.GUI__DrawTwinArc4))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[324]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 358 bytes, Stack size unknown bytes, GUI__ExpandPixelIndices.o(.text.GUI__ExpandPixelIndicesEx))
<BR><BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[312]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 218 bytes, Stack size unknown bytes, GUI__Alpha.o(.text.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
</UL>

<P><STRONG><a name="[27e]"></a>GUI__GetLineDistX</STRONG> (Thumb, 132 bytes, Stack size unknown bytes, GUI_CharLine.o(.text.GUI__GetLineDistX))
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[27d]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 78 bytes, Stack size unknown bytes, GUI_CharLine.o(.text.GUI__GetLineNumChars))
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[22b]"></a>GUI__GetNonExistingCharWidth</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, GUI_Char.o(.text.GUI__GetNonExistingCharWidth))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_GetCharDistX
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
</UL>

<P><STRONG><a name="[22d]"></a>GUI__GetOverlap</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, GUI_CharLine.o(.text.GUI__GetOverlap))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[326]"></a>GUI__GetPresentationForm</STRONG> (Thumb, 282 bytes, Stack size unknown bytes, GUI__Arabic.o(.text.GUI__GetPresentationForm))
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_IsNSM
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTableIndex
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLigature
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoJoiningAndDecoding
</UL>

<P><STRONG><a name="[322]"></a>GUI__HandleEOLine</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUI__Private.o(.text.GUI__HandleEOLine))
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[3ae]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, GUI__Private.o(.text.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[284]"></a>GUI__IntersectRects</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, GUI__Private.o(.text.GUI__IntersectRects))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[3e6]"></a>GUI__IsArabicCharacter</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUI__Arabic.o(.text.GUI__IsArabicCharacter))
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoJoiningAndDecoding
</UL>

<P><STRONG><a name="[213]"></a>GUI__ManageCache</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI__ManageCache.o(.text.GUI__ManageCache))
<BR><BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[329]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 254 bytes, Stack size unknown bytes, GUI__ManageCache.o(.text.GUI__ManageCacheEx), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[7]"></a>GUI__MixColors</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, GUI__Alpha.o(.text.GUI__MixColors))
<BR>[Address Reference Count : 1]<UL><LI> GUI__Alpha.o(.data.GUI__pfMixColors)
</UL>
<P><STRONG><a name="[37b]"></a>GUI__ReduceRect</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUI__Private.o(.text.GUI__ReduceRect))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[232]"></a>GUI__RegisterExit</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUI_Core.o(.text.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Create
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetMotionCallback
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>

<P><STRONG><a name="[1f3]"></a>GUI__SetText</STRONG> (Thumb, 138 bytes, Stack size unknown bytes, GUI__Private.o(.text.GUI__SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
</UL>

<P><STRONG><a name="[3f9]"></a>GUI__memset</STRONG> (Thumb, 114 bytes, Stack size unknown bytes, GUI__Private.o(.text.GUI__memset))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[28d]"></a>GUI__sqrt32</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, GUI__Private.o(.text.GUI__sqrt32))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPositionXY
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestinationXY
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>

<P><STRONG><a name="[32a]"></a>GUI__strcmp_hp</STRONG> (Thumb, 66 bytes, Stack size unknown bytes, GUI__Private.o(.text.GUI__strcmp_hp))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[361]"></a>GUI__strlen</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, GUI__Private.o(.text.GUI__strlen))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
</UL>

<P><STRONG><a name="[215]"></a>GUI_sin</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, GUI_DrawLine.o(.text.GUI_sin))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[32c]"></a>HAL_UartInit</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, lpuart_adapter.o(.text.HAL_UartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_UartInit &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_UartInit
</UL>

<P><STRONG><a name="[46]"></a>LCDIF_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emwin_support.o(.text.LCDIF_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LCDIF_IRQHandler &rArr; APP_LCDIF_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_LCDIF_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.isr_vector)
</UL>
<P><STRONG><a name="[c]"></a>LCD_AA_MixColors16</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, LCD_AA.o(.text.LCD_AA_MixColors16))
<BR>[Address Reference Count : 1]<UL><LI> LCD_AA.o(.data.LCD_AA_pfMixColors16)
</UL>
<P><STRONG><a name="[314]"></a>LCD_AA_SetOrMask</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, LCD_AA.o(.text.LCD_AA_SetOrMask))
<BR><BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
</UL>

<P><STRONG><a name="[2ef]"></a>LCD_Color2Index</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD.o(.text.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallDrawBitmapHW
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>

<P><STRONG><a name="[211]"></a>LCD_DrawBitmap</STRONG> (Thumb, 564 bytes, Stack size unknown bytes, LCD.o(.text.LCD_DrawBitmap))
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_DispChar
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[fc]"></a>LCD_DrawHLine</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, LCD.o(.text.LCD_DrawHLine))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
</UL>
<BR>[Address Reference Count : 2]<UL><LI> GUI_Core.o(.rodata._HL_APIList)
<LI> GUI_DrawGradient.o(.text.GUI_DrawGradientV)
</UL>
<P><STRONG><a name="[19f]"></a>LCD_DrawPixel</STRONG> (Thumb, 108 bytes, Stack size unknown bytes, LCD.o(.text.LCD_DrawPixel))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.rodata._HL_APIList)
</UL>
<P><STRONG><a name="[289]"></a>LCD_DrawVLine</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, LCD.o(.text.LCD_DrawVLine))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine1Ex
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
</UL>

<P><STRONG><a name="[225]"></a>LCD_FillRect</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, LCD.o(.text.LCD_FillRect))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[32f]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetBitsPerPixelEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[290]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, LCD_GetColorIndex.o(.text.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[294]"></a>LCD_GetColorIndex</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, LCD_GetColorIndex.o(.text.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallDrawBitmapHW
</UL>

<P><STRONG><a name="[330]"></a>LCD_GetMirrorXEx</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetMirrorXEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[331]"></a>LCD_GetMirrorYEx</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetMirrorYEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[332]"></a>LCD_GetNumColors</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetNumColors))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[333]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetNumColorsEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[334]"></a>LCD_GetNumLayers</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, LCD_GetNumDisplays.o(.text.LCD_GetNumLayers))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[335]"></a>LCD_GetPalette</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetPalette))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[2f0]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, LCD_GetPixelColor.o(.text.LCD_GetPixelColor))
<BR><BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>

<P><STRONG><a name="[336]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, LCD_GetP.o(.text.LCD_GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[296]"></a>LCD_GetPosEx</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, LCD_Set.o(.text.LCD_GetPosEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[337]"></a>LCD_GetSwapXYEx</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetSwapXYEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[2b5]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetVXSizeEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[23f]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetVXSizeMax))
<BR><BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>

<P><STRONG><a name="[2b6]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetVYSizeEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[339]"></a>LCD_GetXSize</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetXSize))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateIndicator
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AnimateWin
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[29c]"></a>LCD_GetXSizeDisplay</STRONG> (Thumb, 12 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetXSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[2b3]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetXSizeEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>

<P><STRONG><a name="[29e]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetXSizeMax))
<BR><BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[33a]"></a>LCD_GetYSize</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetYSize))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[29d]"></a>LCD_GetYSizeDisplay</STRONG> (Thumb, 12 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetYSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[2b4]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetYSizeEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>

<P><STRONG><a name="[29f]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_GetYSizeMax))
<BR><BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[b]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, LCD_Color.o(.text.LCD_GetpPalConvTableBM))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.data.GUI_pfGetpPalConvTable)
</UL>
<P><STRONG><a name="[241]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 114 bytes, Stack size unknown bytes, LCD_Color.o(.text.LCD_GetpPalConvTableUncached))
<BR><BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
</UL>

<P><STRONG><a name="[240]"></a>LCD_Index2Color</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD.o(.text.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>

<P><STRONG><a name="[18b]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUICC_8888_Index2Color.o(.text.LCD_Index2Color_8888))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
</UL>
<P><STRONG><a name="[10b]"></a>LCD_Index2Color_M8888I</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, GUICC_M8888I_Index2Color.o(.text.LCD_Index2Color_M8888I))
<BR>[Address Reference Count : 6]<UL><LI> GUI_DrawBitmap_8888.o(.rodata.GUI_BitmapMethodsM8888I)
<LI> GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
<LI> GUI_DrawBitmap_8888.o(.text._DrawBitmap_M8888I)
<LI> LCD_RLEAlpha.o(.text._Draw)
<LI> GUI__Alpha.o(.text.GUI__DoAlphaBlending)
<LI> GUIDEV_WriteToActiveAlpha.o(.text._WriteToActiveAlpha)
</UL>
<P><STRONG><a name="[29b]"></a>LCD_Init</STRONG> (Thumb, 202 bytes, Stack size unknown bytes, LCD.o(.text.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[33b]"></a>LCD_InitColors</STRONG> (Thumb, 64 bytes, Stack size unknown bytes, LCD_Color.o(.text.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[33c]"></a>LCD_InitLUT</STRONG> (Thumb, 142 bytes, Stack size unknown bytes, LCD_Color.o(.text.LCD_InitLUT))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[2f9]"></a>LCD_SelectLCD</STRONG> (Thumb, 68 bytes, Stack size unknown bytes, LCD_SelectLCD.o(.text.LCD_SelectLCD))
<BR><BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[21e]"></a>LCD_SetBkColor</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, LCD.o(.text.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[343]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, LCD.o(.text.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[33f]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, LCD_SetClipRectEx.o(.text.LCD_SetClipRectEx))
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[2c3]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, LCD.o(.text.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[21f]"></a>LCD_SetColor</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, LCD.o(.text.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[2fc]"></a>LCD_SetColorIndex</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, LCD.o(.text.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
</UL>

<P><STRONG><a name="[2a0]"></a>LCD_SetDisplaySize</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD_SetDisplaySize))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[220]"></a>LCD_SetDrawMode</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, LCD.o(.text.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_DispChar
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[33d]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, LCD_Set.o(.text.LCD_SetLUTEntryEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[121]"></a>LCD_SetPixelAA4_Trans</STRONG> (Thumb, 162 bytes, Stack size unknown bytes, LCD_AA.o(.text.LCD_SetPixelAA4_Trans))
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_Trans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIAA_Lib.o(.text._FlushLine)
</UL>
<P><STRONG><a name="[2f1]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, LCD.o(.text.LCD_SetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
</UL>

<P><STRONG><a name="[2fd]"></a>LCD_SetPosEx</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, LCD_Set.o(.text.LCD_SetPosEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[340]"></a>LCD_SetSizeEx</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, LCD_Set.o(.text.LCD_SetSizeEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[341]"></a>LCD_SetVRAMAddrEx</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, LCD_Set.o(.text.LCD_SetVRAMAddrEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[342]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, LCD_Set.o(.text.LCD_SetVSizeEx))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2c2]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, LCD_UpdateColorIndices.o(.text.LCD_UpdateColorIndices))
<BR><BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[320]"></a>LCD_X_Config</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, emwin_support.o(.text.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = LCD_X_Config &rArr; FT5406_RT_Init &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetDefaultConfig
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Config
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DCACHE_SetClearCacheHook
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_Init
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[348]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, emwin_support.o(.text.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ELCDIF_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChromaMode
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[2cc]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 468 bytes, Stack size unknown bytes, LCD.o(.text.LCD__DrawBitmap_1bpp))
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[349]"></a>LCD__GetBPP</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[2bc]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, LCD_GetEx.o(.text.LCD__GetBPPDevice))
<BR><BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[34a]"></a>LISTWHEEL_AddString</STRONG> (Thumb, 196 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_AddString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LISTWHEEL_AddString &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetText
</UL>

<P><STRONG><a name="[10f]"></a>LISTWHEEL_Callback</STRONG> (Thumb, 1542 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LISTWHEEL_Callback &rArr; _CreateTimer &rArr; WM_CreateTimer &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopAutoMove
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPressed
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDistToNextItem
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateTimer
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckTimer
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbListwheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LISTWHEEL.o(.text.LISTWHEEL_CreateUser)
</UL>
<P><STRONG><a name="[359]"></a>LISTWHEEL_CreateEx</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LISTWHEEL_CreateEx &rArr; LISTWHEEL_CreateUser &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[35a]"></a>LISTWHEEL_CreateUser</STRONG> (Thumb, 202 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LISTWHEEL_CreateUser &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetText
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateEx
</UL>

<P><STRONG><a name="[35c]"></a>LISTWHEEL_GetPos</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_GetPos))
<BR><BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDistToNextItem
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[35d]"></a>LISTWHEEL_MoveToPos</STRONG> (Thumb, 110 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_MoveToPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LISTWHEEL_MoveToPos &rArr; _CreateTimer &rArr; WM_CreateTimer &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopAutoMove
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDestination
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateTimer
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[110]"></a>LISTWHEEL_OwnerDraw</STRONG> (Thumb, 310 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_OwnerDraw))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LISTWHEEL.o(.text.LISTWHEEL_CreateUser)
</UL>
<P><STRONG><a name="[14c]"></a>LISTWHEEL_SetBkColor</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_SetBkColor))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm.o(.text._cbClock)
</UL>
<P><STRONG><a name="[362]"></a>LISTWHEEL_SetDeceleration</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_SetDeceleration))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[363]"></a>LISTWHEEL_SetFont</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_SetFont))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcDatasizeY
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[365]"></a>LISTWHEEL_SetSel</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_SetSel))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[35b]"></a>LISTWHEEL_SetText</STRONG> (Thumb, 96 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LISTWHEEL_SetText &rArr; LISTWHEEL_AddString &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
</UL>

<P><STRONG><a name="[366]"></a>LISTWHEEL_SetTextAlign</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_SetTextAlign))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[14b]"></a>LISTWHEEL_SetTextColor</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, LISTWHEEL.o(.text.LISTWHEEL_SetTextColor))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm.o(.text._cbClock)
</UL>
<P><STRONG><a name="[d6]"></a>LPI2C1_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPI2C1_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler &rArr; LPI2C_MasterTransferHandleIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[d7]"></a>LPI2C2_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPI2C2_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler &rArr; LPI2C_MasterTransferHandleIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>LPI2C3_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPI2C3_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler &rArr; LPI2C_MasterTransferHandleIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>LPI2C4_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPI2C4_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler &rArr; LPI2C_MasterTransferHandleIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[36a]"></a>LPI2C_GetInstance</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[36f]"></a>LPI2C_MasterCheckAndClearError</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterCheckAndClearError))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferHandleIRQ
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterReceive
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>

<P><STRONG><a name="[345]"></a>LPI2C_MasterGetDefaultConfig</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, fsl_lpi2c.o(.text.LPI2C_MasterGetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPI2C_MasterGetDefaultConfig &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[346]"></a>LPI2C_MasterInit</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, fsl_lpi2c.o(.text.LPI2C_MasterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LPI2C_MasterInit &rArr; LPI2C_MasterSetBaudRate
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSetBaudRate
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetInstance
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetCyclesForWidth
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[36d]"></a>LPI2C_MasterReceive</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, fsl_lpi2c.o(.text.LPI2C_MasterReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
</UL>

<P><STRONG><a name="[370]"></a>LPI2C_MasterSend</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsl_lpi2c.o(.text.LPI2C_MasterSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LPI2C_MasterSend &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
</UL>

<P><STRONG><a name="[36b]"></a>LPI2C_MasterSetBaudRate</STRONG> (Thumb, 220 bytes, Stack size 36 bytes, fsl_lpi2c.o(.text.LPI2C_MasterSetBaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LPI2C_MasterSetBaudRate
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[371]"></a>LPI2C_MasterStop</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, fsl_lpi2c.o(.text.LPI2C_MasterStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
</UL>

<P><STRONG><a name="[372]"></a>LPI2C_MasterTransferAbort</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterTransferAbort))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferHandleIRQ
</UL>

<P><STRONG><a name="[20e]"></a>LPI2C_MasterTransferBlocking</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, fsl_lpi2c.o(.text.LPI2C_MasterTransferBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSend
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterReceive
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_Init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_ReadTouchData
</UL>

<P><STRONG><a name="[368]"></a>LPI2C_MasterTransferHandleIRQ</STRONG> (Thumb, 498 bytes, Stack size 40 bytes, fsl_lpi2c.o(.text.LPI2C_MasterTransferHandleIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LPI2C_MasterTransferHandleIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferAbort
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>

<P><STRONG><a name="[369]"></a>LPI2C_SlaveTransferHandleIRQ</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, fsl_lpi2c.o(.text.LPI2C_SlaveTransferHandleIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPI2C_SlaveTransferHandleIRQ &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_SlaveCheckAndClearError
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>LPUART1_DriverIRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_lpuart.o(.text.LPUART1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART1_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>LPUART2_DriverIRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_lpuart.o(.text.LPUART2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART2_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>LPUART3_DriverIRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_lpuart.o(.text.LPUART3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART3_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>LPUART4_DriverIRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_lpuart.o(.text.LPUART4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART4_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[d2]"></a>LPUART5_DriverIRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_lpuart.o(.text.LPUART5_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART5_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>LPUART6_DriverIRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_lpuart.o(.text.LPUART6_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART6_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>LPUART7_DriverIRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_lpuart.o(.text.LPUART7_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART7_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>LPUART8_DriverIRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fsl_lpuart.o(.text.LPUART8_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART8_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[32d]"></a>LPUART_GetDefaultConfig</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsl_lpuart.o(.text.LPUART_GetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPUART_GetDefaultConfig &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
</UL>

<P><STRONG><a name="[374]"></a>LPUART_GetInstance</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[32e]"></a>LPUART_Init</STRONG> (Thumb, 488 bytes, Stack size 40 bytes, fsl_lpuart.o(.text.LPUART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
</UL>

<P><STRONG><a name="[208]"></a>SerialManager_Init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, serial_manager.o(.text.SerialManager_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SerialManager_Init &rArr; Serial_UartInit &rArr; HAL_UartInit &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_UartInit
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
</UL>

<P><STRONG><a name="[20a]"></a>SerialManager_OpenReadHandle</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, serial_manager.o(.text.SerialManager_OpenReadHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SerialManager_OpenReadHandle &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
</UL>

<P><STRONG><a name="[209]"></a>SerialManager_OpenWriteHandle</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, serial_manager.o(.text.SerialManager_OpenWriteHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SerialManager_OpenWriteHandle &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
</UL>

<P><STRONG><a name="[376]"></a>Serial_UartInit</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, serial_port_uart.o(.text.Serial_UartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Serial_UartInit &rArr; HAL_UartInit &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialManager_Init
</UL>

<P><STRONG><a name="[bb]"></a>SystemInit</STRONG> (Thumb, 300 bytes, Stack size 20 bytes, system_mimxrt1062.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1062.o(.text)
</UL>
<P><STRONG><a name="[377]"></a>SystemInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_mimxrt1062.o(.text.SystemInitHook))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1d6]"></a>WIDGET_AndState</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, WIDGET.o(.text.WIDGET_AndState))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
</UL>

<P><STRONG><a name="[1cf]"></a>WIDGET_HandleActive</STRONG> (Thumb, 320 bytes, Stack size unknown bytes, WIDGET.o(.text.WIDGET_HandleActive))
<BR><BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[267]"></a>WIDGET_OrState</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, WIDGET.o(.text.WIDGET_OrState))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[37e]"></a>WIDGET_SetFocusable</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, WIDGET.o(.text.WIDGET_SetFocusable))
<BR><BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[37d]"></a>WIDGET_SetState</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, WIDGET.o(.text.WIDGET_SetState))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[1df]"></a>WIDGET__Init</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, WIDGET.o(.text.WIDGET__Init))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>

<P><STRONG><a name="[111]"></a>WINDOW_Callback</STRONG> (Thumb, 282 bytes, Stack size unknown bytes, WINDOW.o(.text.WINDOW_Callback))
<BR><BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WINDOW.o(.text.WINDOW_CreateUser)
</UL>
<P><STRONG><a name="[1a7]"></a>WINDOW_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, WINDOW.o(.text.WINDOW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = WINDOW_CreateIndirect &rArr; WINDOW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> weather.o(.rodata._aDialogCreate)
</UL>
<P><STRONG><a name="[384]"></a>WINDOW_CreateUser</STRONG> (Thumb, 122 bytes, Stack size unknown bytes, WINDOW.o(.text.WINDOW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = WINDOW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
</UL>

<P><STRONG><a name="[2aa]"></a>WM_Activate</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, WM.o(.text.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[385]"></a>WM_BringToBottom</STRONG> (Thumb, 132 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_BringToBottom))
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[379]"></a>WM_BringToTop</STRONG> (Thumb, 126 bytes, Stack size unknown bytes, WM_BringToTop.o(.text.WM_BringToTop))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[38c]"></a>WM_CreateTimer</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, WM_Timer.o(.text.WM_CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = WM_CreateTimer &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateTimer
</UL>

<P><STRONG><a name="[1de]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 356 bytes, Stack size unknown bytes, WM.o(.text.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInfo
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateAlarm
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>

<P><STRONG><a name="[2c1]"></a>WM_Deactivate</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, WM.o(.text.WM_Deactivate))
<BR><BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[1d4]"></a>WM_DefaultProc</STRONG> (Thumb, 74 bytes, Stack size unknown bytes, WM.o(.text.WM_DefaultProc))
<BR><BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[354]"></a>WM_DeleteTimer</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, WM_Timer.o(.text.WM_DeleteTimer))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopAutoMove
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[26d]"></a>WM_DeleteWindow</STRONG> (Thumb, 308 bytes, Stack size unknown bytes, WM.o(.text.WM_DeleteWindow))
<BR><BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateUser
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[28b]"></a>WM_Exec</STRONG> (Thumb, 158 bytes, Stack size unknown bytes, WM.o(.text.WM_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[38b]"></a>WM_ForEachDesc</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_ForEachDesc))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[3a2]"></a>WM_GetActiveWindow</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, WM.o(.text.WM_GetActiveWindow))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[293]"></a>WM_GetClientRect</STRONG> (Thumb, 56 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetClientRect))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStartStop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>

<P><STRONG><a name="[34e]"></a>WM_GetClientRectEx</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetClientRectEx))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[266]"></a>WM_GetClientWindow</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetClientWindow))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[265]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 12 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[398]"></a>WM_GetDialogItem</STRONG> (Thumb, 120 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetDialogItem))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
</UL>

<P><STRONG><a name="[39a]"></a>WM_GetFirstChild</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetFirstChild))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[26a]"></a>WM_GetFocusedWindow</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetFocusedWindow))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
</UL>

<P><STRONG><a name="[360]"></a>WM_GetHasTrans</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, WM_SetTrans.o(.text.WM_GetHasTrans))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_OwnerDraw
</UL>

<P><STRONG><a name="[39b]"></a>WM_GetId</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetId))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[34b]"></a>WM_GetInsideRect</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetInsideRect))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
</UL>

<P><STRONG><a name="[350]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetInsideRectEx))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>

<P><STRONG><a name="[387]"></a>WM_GetParent</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetParent))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[39c]"></a>WM_GetUserData</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, WM_UserData.o(.text.WM_GetUserData))
<BR><BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
</UL>

<P><STRONG><a name="[39e]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetWindowOrgX))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AnimateWin
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[39f]"></a>WM_GetWindowOrgY</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetWindowOrgY))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinCurrent
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInfo
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
</UL>

<P><STRONG><a name="[3a0]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_GetWindowRectEx))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
</UL>

<P><STRONG><a name="[3a1]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, WM_GetWindowSize.o(.text.WM_GetWindowSizeX))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3a3]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, WM_GetWindowSize.o(.text.WM_GetWindowSizeY))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWinPreview
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[ff]"></a>WM_HandlePID</STRONG> (Thumb, 750 bytes, Stack size unknown bytes, WM_Touch.o(.text.WM_HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = WM_HandlePID &rArr; GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsEmpty
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_PID.o(.text.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[34d]"></a>WM_HasCaptured</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_HasCaptured))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>

<P><STRONG><a name="[380]"></a>WM_HasFocus</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_HasFocus))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[2a2]"></a>WM_Init</STRONG> (Thumb, 224 bytes, Stack size unknown bytes, WM.o(.text.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[38e]"></a>WM_InvalidateRect</STRONG> (Thumb, 148 bytes, Stack size unknown bytes, WM.o(.text.WM_InvalidateRect))
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateIndicator
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[1f2]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, WM.o(.text.WM_InvalidateWindow))
<BR><BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextColor
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextAlign
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetSel
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetFont
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetBkColor
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetText
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_AddString
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPressed
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
</UL>

<P><STRONG><a name="[3b2]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_InvalidateWindowAndDescs))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
</UL>

<P><STRONG><a name="[3b3]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 102 bytes, Stack size unknown bytes, WM.o(.text.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[3b4]"></a>WM_IsEnabled</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_IsEnabled))
<BR><BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[3b5]"></a>WM_IsFocusable</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_IsFocusable))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[37f]"></a>WM_IsWindow</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_IsWindow))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3b7]"></a>WM_MOTION_Enable</STRONG> (Thumb, 68 bytes, Stack size unknown bytes, WM_Motion.o(.text.WM_MOTION_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = WM_MOTION_Enable &rArr; _ExecMotion &rArr; _StartMotionTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetMotionCallback
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[407]"></a>WM_MULTIBUF_Enable</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, WM_MULTIBUF.o(.text.WM_MULTIBUF_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3ba]"></a>WM_MoveTo</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM_Move.o(.text.WM_MoveTo))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AnimateWin
</UL>

<P><STRONG><a name="[3bc]"></a>WM_MoveWindow</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM_Move.o(.text.WM_MoveWindow))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
</UL>

<P><STRONG><a name="[357]"></a>WM_NotifyParent</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_NotifyParent))
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[2d5]"></a>WM_OnKey</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_OnKey))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[3ab]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, WM_PID__GetPrevState.o(.text.WM_PID__SetPrevState))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[358]"></a>WM_ReleaseCapture</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, WM_SetCapture.o(.text.WM_ReleaseCapture))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3be]"></a>WM_ResizeWindow</STRONG> (Thumb, 244 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_ResizeWindow))
<BR><BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>

<P><STRONG><a name="[356]"></a>WM_RestartTimer</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, WM_Timer.o(.text.WM_RestartTimer))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAlarm
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateTimer
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckTimer
</UL>

<P><STRONG><a name="[3a7]"></a>WM_Screen2hWin</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, WM_Screen2Win.o(.text.WM_Screen2hWin))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[38d]"></a>WM_SelectWindow</STRONG> (Thumb, 70 bytes, Stack size unknown bytes, WM.o(.text.WM_SelectWindow))
<BR><BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[397]"></a>WM_SendMessage</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM.o(.text.WM_SendMessage))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_ByWindow
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
</UL>

<P><STRONG><a name="[269]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_SendMessageNoPara))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClock
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[391]"></a>WM_SendToParent</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_SendToParent))
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[14a]"></a>WM_SetCallback</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_SetCallback))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm.o(.text._cbClock)
</UL>
<P><STRONG><a name="[352]"></a>WM_SetCapture</STRONG> (Thumb, 64 bytes, Stack size unknown bytes, WM_SetCapture.o(.text.WM_SetCapture))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>

<P><STRONG><a name="[378]"></a>WM_SetFocus</STRONG> (Thumb, 206 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_SetFocus))
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[26c]"></a>WM_SetFocusOnNextChild</STRONG> (Thumb, 78 bytes, Stack size unknown bytes, WM_SetFocusOnNextChild.o(.text.WM_SetFocusOnNextChild))
<BR><BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[383]"></a>WM_SetFocusOnPrevChild</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, WM_SetFocusOnPrevChild.o(.text.WM_SetFocusOnPrevChild))
<BR><BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[1e9]"></a>WM_SetHasTrans</STRONG> (Thumb, 78 bytes, Stack size unknown bytes, WM_SetTrans.o(.text.WM_SetHasTrans))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[3c6]"></a>WM_SetSize</STRONG> (Thumb, 80 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_SetSize))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[283]"></a>WM_SetUserClipRect</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_SetUserClipRect))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[3c8]"></a>WM_SetUserData</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, WM_UserData.o(.text.WM_SetUserData))
<BR><BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[268]"></a>WM_ShowWindow</STRONG> (Thumb, 56 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_ShowWindow))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[3c5]"></a>WM_ValidateWindow</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, WM_Lib.o(.text.WM_ValidateWindow))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>

<P><STRONG><a name="[3c7]"></a>WM__ActivateClipRect</STRONG> (Thumb, 82 bytes, Stack size unknown bytes, WM.o(.text.WM__ActivateClipRect))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[3a6]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreatehCrit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3af]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, WM.o(.text.WM__ClipAtParentBorders))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[392]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, WM_Timer.o(.text.WM__DeleteAssocTimer))
<BR><BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[393]"></a>WM__DetachWindow</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, WM.o(.text.WM__DetachWindow))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[396]"></a>WM__ForEachDesc</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__ForEachDesc))
<BR><BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>

<P><STRONG><a name="[390]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__GetClientRectEx))
<BR><BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[37a]"></a>WM__GetClientRectWin</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, WM.o(.text.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>

<P><STRONG><a name="[3cb]"></a>WM__GetFirstSibling</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__GetFirstSibling))
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[3c2]"></a>WM__GetFocusedChild</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__GetFocusedChild))
<BR><BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[3cd]"></a>WM__GetLastSibling</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__GetLastSibling))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[23b]"></a>WM__GetNextIVR</STRONG> (Thumb, 366 bytes, Stack size unknown bytes, WM.o(.text.WM__GetNextIVR))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[236]"></a>WM__GetOrgX_AA</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__GetOrgX_AA))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[237]"></a>WM__GetOrgY_AA</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__GetOrgY_AA))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[386]"></a>WM__GetPrevSibling</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__GetPrevSibling))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[39d]"></a>WM__GetUserDataEx</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, WM_UserData.o(.text.WM__GetUserDataEx))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
</UL>

<P><STRONG><a name="[23a]"></a>WM__InitIVRSearch</STRONG> (Thumb, 258 bytes, Stack size unknown bytes, WM.o(.text.WM__InitIVRSearch))
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[38a]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 176 bytes, Stack size unknown bytes, WM.o(.text.WM__InsertWindowIntoList))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[3ad]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, WM.o(.text.WM__InvalidateDrawAndDescs))
<BR><BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[3d1]"></a>WM__InvalidateParent</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, WM.o(.text.WM__InvalidateParent))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[3b0]"></a>WM__InvalidateRect</STRONG> (Thumb, 130 bytes, Stack size unknown bytes, WM.o(.text.WM__InvalidateRect))
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[388]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, WM.o(.text.WM__InvalidateRectEx))
<BR><BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[382]"></a>WM__IsAncestor</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__IsAncestor))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[381]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__IsAncestorOrSelf))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[3cc]"></a>WM__IsChild</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__IsChild))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>

<P><STRONG><a name="[1ea]"></a>WM__IsEnabled</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__IsEnabled))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3a8]"></a>WM__IsInModalArea</STRONG> (Thumb, 80 bytes, Stack size unknown bytes, WM_Touch.o(.text.WM__IsInModalArea))
<BR><BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3b6]"></a>WM__IsWindow</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, WM.o(.text.WM__IsWindow))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[3bb]"></a>WM__MoveTo</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, WM_Move.o(.text.WM__MoveTo))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[3bd]"></a>WM__MoveWindow</STRONG> (Thumb, 156 bytes, Stack size unknown bytes, WM_Move.o(.text.WM__MoveWindow))
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>

<P><STRONG><a name="[3d3]"></a>WM__Paint</STRONG> (Thumb, 170 bytes, Stack size unknown bytes, WM.o(.text.WM__Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[11a]"></a>WM__Paint1</STRONG> (Thumb, 198 bytes, Stack size unknown bytes, WM.o(.text.WM__Paint1))
<BR><BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 2]<UL><LI> WM.o(.text.WM__PaintWinAndOverlays)
<LI> WM.o(.text._Paint1Trans)
</UL>
<P><STRONG><a name="[3ac]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 56 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__RemoveCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[389]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, WM.o(.text.WM__RemoveWindowFromList))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[38f]"></a>WM__SendMessage</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__SendMessage))
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>

<P><STRONG><a name="[3aa]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__SendMessageIfEnabled))
<BR><BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[2b8]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__SendMessageNoPara))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3c0]"></a>WM__SendMsgNoData</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, WM.o(.text.WM__SendMsgNoData))
<BR><BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[3d7]"></a>WM__SendPIDMessage</STRONG> (Thumb, 78 bytes, Stack size unknown bytes, WM_Touch.o(.text.WM__SendPIDMessage))
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[3a9]"></a>WM__SendTouchMessage</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, WM_Touch.o(.text.WM__SendTouchMessage))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3b8]"></a>WM__SetMotionCallback</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, WM_Touch.o(.text.WM__SetMotionCallback))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
</UL>

<P><STRONG><a name="[3c9]"></a>WM__SetUserDataEx</STRONG> (Thumb, 80 bytes, Stack size unknown bytes, WM_UserData.o(.text.WM__SetUserDataEx))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
</UL>

<P><STRONG><a name="[37c]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 216 bytes, Stack size unknown bytes, WM__Private.o(.text.WM__UpdateChildPositions))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[ba]"></a>main</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, emwin_slide_show.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = main &rArr; BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; SerialManager_Init &rArr; Serial_UartInit &rArr; HAL_UartInit &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MULTIBUF_Enable
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_Touch_Poll
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcdifPixelClock
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcd
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitGPT
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootPins
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootClocks
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[419]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[41a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[41b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1c9]"></a>CLOCK_SetDiv</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, emwin_slide_show.o(.text.CLOCK_SetDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcdifPixelClock
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcd
</UL>

<P><STRONG><a name="[1c8]"></a>GPIO_WritePinOutput</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, emwin_slide_show.o(.text.GPIO_WritePinOutput))
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcd
</UL>

<P><STRONG><a name="[3db]"></a>_AnimateCreate</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, emwin_slide_show.o(.text._AnimateCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _AnimateCreate &rArr; GUI_ANIM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_StartEx
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Create
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[11c]"></a>_AnimateWin</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, emwin_slide_show.o(.text._AnimateWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _AnimateWin
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwin_slide_show.o(.text._AnimateCreate)
</UL>
<P><STRONG><a name="[146]"></a>_ButtonSkin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, emwin_slide_show.o(.text._ButtonSkin))
<BR><BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwin_slide_show.o(.text._cbBk)
</UL>
<P><STRONG><a name="[405]"></a>_UpdateIndicator</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, emwin_slide_show.o(.text._UpdateIndicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _UpdateIndicator
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[144]"></a>_cbAlarm</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, emwin_slide_show.o(.text._cbAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _cbAlarm &rArr; CreateMemdevContainer &rArr; GUI_MEMDEV_CreateFixed32 &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwin_slide_show.o(.text._cbBk)
</UL>
<P><STRONG><a name="[153]"></a>_cbBk</STRONG> (Thumb, 824 bytes, Stack size 64 bytes, emwin_slide_show.o(.text._cbBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _cbBk &rArr; CreateInfo &rArr; WM_CreateWindowAsChild &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateWeather
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInfo
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateAlarm
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateIndicator
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AnimateCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwin_slide_show.o(.text.main)
</UL>
<P><STRONG><a name="[f4]"></a>_cbClock</STRONG> (Thumb, 1104 bytes, Stack size 72 bytes, alarm.o(.text._cbClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _cbClock &rArr; LISTWHEEL_MoveToPos &rArr; _CreateTimer &rArr; WM_CreateTimer &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetTextAlign
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetSel
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetDeceleration
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_MoveToPos
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_GetPos
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_CreateEx
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm.o(.text.CreateAlarm)
</UL>
<P><STRONG><a name="[149]"></a>_cbListwheel</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, alarm.o(.text._cbListwheel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _cbListwheel &rArr; LISTWHEEL_Callback &rArr; _CreateTimer &rArr; WM_CreateTimer &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm.o(.text._cbClock)
</UL>
<P><STRONG><a name="[14d]"></a>_cbStartStop</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, alarm.o(.text._cbStartStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _cbStartStop
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm.o(.text._cbClock)
</UL>
<P><STRONG><a name="[f5]"></a>_cbInfo</STRONG> (Thumb, 416 bytes, Stack size 80 bytes, info.o(.text._cbInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _cbInfo &rArr; CreateMemdevContainer &rArr; GUI_MEMDEV_CreateFixed32 &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_GetInfo
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> info.o(.text.CreateInfo)
</UL>
<P><STRONG><a name="[14f]"></a>_cbButton</STRONG> (Thumb, 304 bytes, Stack size 48 bytes, weather.o(.text._cbButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = _cbButton
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> weather.o(.text._cbDialog)
</UL>
<P><STRONG><a name="[f6]"></a>_cbDialog</STRONG> (Thumb, 308 bytes, Stack size 64 bytes, weather.o(.text._cbDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _cbDialog &rArr; CreateMemdevContainer &rArr; GUI_MEMDEV_CreateFixed32 &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> weather.o(.text.CreateWeather)
</UL>
<P><STRONG><a name="[150]"></a>_cbWinCurrent</STRONG> (Thumb, 312 bytes, Stack size 48 bytes, weather.o(.text._cbWinCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _cbWinCurrent &rArr; CreateMemdevContainer &rArr; GUI_MEMDEV_CreateFixed32 &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMemdevContainer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> weather.o(.text._cbDialog)
</UL>
<P><STRONG><a name="[151]"></a>_cbWinPreview</STRONG> (Thumb, 484 bytes, Stack size 344 bytes, weather.o(.text._cbWinPreview))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _cbWinPreview &rArr; GUI_SPLINE_Create &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_DrawAA
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Delete
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPLINE_Create
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> weather.o(.text._cbDialog)
</UL>
<P><STRONG><a name="[10e]"></a>_ClearCache</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, emwin_support.o(.text._ClearCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ClearCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwin_support.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[f1]"></a>CLOCK_SetDiv</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, clock_config.o(.text.CLOCK_SetDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_SetDiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clock_config.o(.text.BOARD_BootClockRUN)
</UL>
<P><STRONG><a name="[f2]"></a>CLOCK_SetMux</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, clock_config.o(.text.CLOCK_SetMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_SetMux
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clock_config.o(.text.BOARD_BootClockRUN)
</UL>
<P><STRONG><a name="[1f5]"></a>CLOCK_ControlGate</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsl_elcdif.o(.text.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>

<P><STRONG><a name="[1f4]"></a>CLOCK_EnableClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_elcdif.o(.text.CLOCK_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
</UL>

<P><STRONG><a name="[1f7]"></a>CLOCK_ControlGate</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsl_lpi2c.o(.text.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>

<P><STRONG><a name="[1f6]"></a>CLOCK_EnableClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.CLOCK_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[367]"></a>LPI2C_CommonIRQHandler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fsl_lpi2c.o(.text.LPI2C_CommonIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPI2C_CommonIRQHandler &rArr; LPI2C_MasterTransferHandleIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_SlaveTransferHandleIRQ
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferHandleIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C4_DriverIRQHandler
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C3_DriverIRQHandler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C2_DriverIRQHandler
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C1_DriverIRQHandler
</UL>

<P><STRONG><a name="[36c]"></a>LPI2C_GetCyclesForWidth</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, fsl_lpi2c.o(.text.LPI2C_GetCyclesForWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPI2C_GetCyclesForWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[36e]"></a>LPI2C_MasterWaitForTxReady</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, fsl_lpi2c.o(.text.LPI2C_MasterWaitForTxReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPI2C_MasterWaitForTxReady
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSend
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterReceive
</UL>

<P><STRONG><a name="[373]"></a>LPI2C_SlaveCheckAndClearError</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_SlaveCheckAndClearError))
<BR><BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_SlaveTransferHandleIRQ
</UL>

<P><STRONG><a name="[224]"></a>CLOCK_ControlGate</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsl_gpt.o(.text.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPT_Init
</UL>

<P><STRONG><a name="[223]"></a>GPT_GetInstance</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fsl_gpt.o(.text.GPT_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPT_Init
</UL>

<P><STRONG><a name="[1f9]"></a>CLOCK_GetPeriphClkFreq</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_GetPeriphClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSemcFreq
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetAhbFreq
</UL>

<P><STRONG><a name="[375]"></a>CLOCK_ControlGate</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, fsl_lpuart.o(.text.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[34c]"></a>_CheckTimer</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, LISTWHEEL.o(.text._CheckTimer))
<BR><BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>

<P><STRONG><a name="[34f]"></a>_CreateTimer</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, LISTWHEEL.o(.text._CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _CreateTimer &rArr; WM_CreateTimer &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_MoveToPos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>

<P><STRONG><a name="[35e]"></a>_GetDestination</STRONG> (Thumb, 152 bytes, Stack size unknown bytes, LISTWHEEL.o(.text._GetDestination))
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_MoveToPos
</UL>

<P><STRONG><a name="[355]"></a>_GetDistToNextItem</STRONG> (Thumb, 192 bytes, Stack size unknown bytes, LISTWHEEL.o(.text._GetDistToNextItem))
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_GetPos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>

<P><STRONG><a name="[353]"></a>_OnPressed</STRONG> (Thumb, 168 bytes, Stack size unknown bytes, LISTWHEEL.o(.text._OnPressed))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>

<P><STRONG><a name="[364]"></a>_RecalcDatasizeY</STRONG> (Thumb, 142 bytes, Stack size unknown bytes, LISTWHEEL.o(.text._RecalcDatasizeY))
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_SetFont
</UL>

<P><STRONG><a name="[351]"></a>_StopAutoMove</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, LISTWHEEL.o(.text._StopAutoMove))
<BR><BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_MoveToPos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTWHEEL_Callback
</UL>

<P><STRONG><a name="[1d5]"></a>_OnButtonPressed</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, BUTTON.o(.text._OnButtonPressed))
<BR><BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[1d9]"></a>_OnButtonReleased</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, BUTTON.o(.text._OnButtonReleased))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[1d7]"></a>_OnPidStateChange</STRONG> (Thumb, 68 bytes, Stack size unknown bytes, BUTTON.o(.text._OnPidStateChange))
<BR><BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[f]"></a>_OnTouchDefault</STRONG> (Thumb, 64 bytes, Stack size unknown bytes, BUTTON.o(.text._OnTouchDefault))
<BR><BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON.o(.data._pfOnTouch)
</UL>
<P><STRONG><a name="[2]"></a>_Create</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, BUTTON_Skin.o(.text._Create))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON_Skin.o(.data.BUTTON__Skin)
</UL>
<P><STRONG><a name="[1]"></a>_Paint</STRONG> (Thumb, 130 bytes, Stack size unknown bytes, BUTTON_Skin.o(.text._Paint))
<BR><BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON_Skin.o(.data.BUTTON__Skin)
</UL>
<P><STRONG><a name="[134]"></a>_CopyBuffer</STRONG> (Thumb, 112 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _CopyBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[159]"></a>_DrawBitmap</STRONG> (Thumb, 1294 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._DrawBitmap))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[15a]"></a>_DrawHLine</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._DrawHLine))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[15b]"></a>_DrawVLine</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._DrawVLine))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[15c]"></a>_FillRect</STRONG> (Thumb, 286 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._FillRect))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[163]"></a>_GetDevData</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[161]"></a>_GetDevFunc</STRONG> (Thumb, 268 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[162]"></a>_GetDevProp</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[15d]"></a>_GetPixelIndex</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._GetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[129]"></a>_GetPos</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._GetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _GetPos &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[164]"></a>_GetRect</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[12d]"></a>_Init</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _Init &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[3e1]"></a>_InitOnce</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAM_BufferPTR
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
</UL>

<P><STRONG><a name="[12f]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[12e]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._On))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[126]"></a>_ReadRect</STRONG> (Thumb, 56 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._ReadRect))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[127]"></a>_SetAlpha</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _SetAlpha &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[130]"></a>_SetAlphaMode</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetAlphaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _SetAlphaMode &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[132]"></a>_SetChroma</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetChroma))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _SetChroma &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[131]"></a>_SetChromaMode</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetChromaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _SetChromaMode &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[133]"></a>_SetDevFunc</STRONG> (Thumb, 74 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _SetDevFunc &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[160]"></a>_SetOrg</STRONG> (Thumb, 184 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[15e]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[128]"></a>_SetPos</STRONG> (Thumb, 258 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _SetPos &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[12c]"></a>_SetSize</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _SetSize &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[125]"></a>_SetVRAMAddr</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _SetVRAMAddr &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[136]"></a>_SetVRAM_BufferPTR</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetVRAM_BufferPTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _SetVRAM_BufferPTR &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[12b]"></a>_SetVSize</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[12a]"></a>_SetVis</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._SetVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _SetVis &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[135]"></a>_ShowBuffer</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._ShowBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ShowBuffer &rArr; LCD_X_DisplayDriver &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text._GetDevFunc)
</UL>
<P><STRONG><a name="[15f]"></a>_XorPixel</STRONG> (Thumb, 54 bytes, Stack size unknown bytes, GUIDRV_Lin_32.o(.text._XorPixel))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata.GUIDRV_Lin_32_API)
</UL>
<P><STRONG><a name="[113]"></a>_cbTimer</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, WM_Timer.o(.text._cbTimer))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Timer.o(.text.WM_CreateTimer)
</UL>
<P><STRONG><a name="[3d8]"></a>_AimDestination</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, WM_Motion.o(.text._AimDestination))
<BR><BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestinationXY
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[3d9]"></a>_AimDestinationXY</STRONG> (Thumb, 134 bytes, Stack size unknown bytes, WM_Motion.o(.text._AimDestinationXY))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestination
</UL>

<P><STRONG><a name="[3e2]"></a>_CreatehCrit</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, WM_Motion.o(.text._CreatehCrit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _CreatehCrit &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetphCrit
</UL>

<P><STRONG><a name="[3b9]"></a>_ExecMotion</STRONG> (Thumb, 1888 bytes, Stack size unknown bytes, WM_Motion.o(.text._ExecMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _ExecMotion &rArr; _StartMotionTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartMotionTimer
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SavePrivateContextOnDemand
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessMotion
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetphCrit
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSigns
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestination
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
</UL>

<P><STRONG><a name="[3f0]"></a>_GetConfirmation</STRONG> (Thumb, 196 bytes, Stack size unknown bytes, WM_Motion.o(.text._GetConfirmation))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[3ed]"></a>_GetContext</STRONG> (Thumb, 124 bytes, Stack size unknown bytes, WM_Motion.o(.text._GetContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _GetContext &rArr; _GetphCrit &rArr; _CreatehCrit &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetphCrit
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[124]"></a>_GetMotionTagR</STRONG> (Thumb, 124 bytes, Stack size unknown bytes, WM_Motion.o(.text._GetMotionTagR))
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Motion.o(.text._GetConfirmation)
</UL>
<P><STRONG><a name="[120]"></a>_GetMotionTagXY</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, WM_Motion.o(.text._GetMotionTagXY))
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Motion.o(.text._ExecMotion)
</UL>
<P><STRONG><a name="[3f2]"></a>_GetSigns</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, WM_Motion.o(.text._GetSigns))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[3f1]"></a>_GetphCrit</STRONG> (Thumb, 56 bytes, Stack size unknown bytes, WM_Motion.o(.text._GetphCrit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _GetphCrit &rArr; _CreatehCrit &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreatehCrit
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[123]"></a>_Motion_AutoWithinParent</STRONG> (Thumb, 454 bytes, Stack size unknown bytes, WM_Motion.o(.text._Motion_AutoWithinParent))
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Motion.o(.text._GetConfirmation)
</UL>
<P><STRONG><a name="[122]"></a>_Motion_ByWindow</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, WM_Motion.o(.text._Motion_ByWindow))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Motion.o(.text._GetConfirmation)
</UL>
<P><STRONG><a name="[3f6]"></a>_MoveToNearestSnapPosition</STRONG> (Thumb, 182 bytes, Stack size unknown bytes, WM_Motion.o(.text._MoveToNearestSnapPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _MoveToNearestSnapPosition &rArr; _StartMotionTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartMotionTimer
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessMotion
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPositionXY
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[3fd]"></a>_MoveToNearestSnapPositionXY</STRONG> (Thumb, 138 bytes, Stack size unknown bytes, WM_Motion.o(.text._MoveToNearestSnapPositionXY))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
</UL>

<P><STRONG><a name="[116]"></a>_OnExit</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, WM_Motion.o(.text._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> WM_Motion.o(.text.WM_MOTION_Enable)
</UL>
<P><STRONG><a name="[3f5]"></a>_ProcessMotion</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, WM_Motion.o(.text._ProcessMotion))
<BR><BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[3f4]"></a>_SavePrivateContextOnDemand</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, WM_Motion.o(.text._SavePrivateContextOnDemand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _SavePrivateContextOnDemand &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[3ee]"></a>_Screen2hWin</STRONG> (Thumb, 82 bytes, Stack size unknown bytes, WM_Motion.o(.text._Screen2hWin))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[3f3]"></a>_StartMotionTimer</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, WM_Motion.o(.text._StartMotionTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _StartMotionTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[3ef]"></a>_StopMotionOnHit</STRONG> (Thumb, 78 bytes, Stack size unknown bytes, WM_Motion.o(.text._StopMotionOnHit))
<BR><BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[117]"></a>_cbMotion</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, WM_Motion.o(.text._cbMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _cbMotion &rArr; _ExecMotion &rArr; _StartMotionTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Motion.o(.text.WM_MOTION_Enable)
</UL>
<P><STRONG><a name="[138]"></a>_cbTimer</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, WM_Motion.o(.text._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _cbTimer &rArr; _ExecMotion &rArr; _StartMotionTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Motion.o(.text._StartMotionTimer)
</UL>
<P><STRONG><a name="[3d4]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 142 bytes, Stack size unknown bytes, WM.o(.text.WM__PaintWinAndOverlays))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[395]"></a>_Exec1Draw</STRONG> (Thumb, 164 bytes, Stack size unknown bytes, WM.o(.text._Exec1Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[394]"></a>_Exec1Input</STRONG> (Thumb, 148 bytes, Stack size unknown bytes, WM.o(.text._Exec1Input))
<BR><BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[3cf]"></a>_Findx0</STRONG> (Thumb, 150 bytes, Stack size unknown bytes, WM.o(.text._Findx0))
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[3d0]"></a>_Findx1</STRONG> (Thumb, 128 bytes, Stack size unknown bytes, WM.o(.text._Findx1))
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>

<P><STRONG><a name="[3ce]"></a>_Findy1</STRONG> (Thumb, 176 bytes, Stack size unknown bytes, WM.o(.text._Findy1))
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>

<P><STRONG><a name="[3b1]"></a>_Invalidate1Abs</STRONG> (Thumb, 164 bytes, Stack size unknown bytes, WM.o(.text._Invalidate1Abs))
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[115]"></a>_OnExit</STRONG> (Thumb, 200 bytes, Stack size unknown bytes, WM.o(.text._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text.WM_Init)
</UL>
<P><STRONG><a name="[3d6]"></a>_Paint1Trans</STRONG> (Thumb, 174 bytes, Stack size unknown bytes, WM.o(.text._Paint1Trans))
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[3d5]"></a>_PaintTransChildren</STRONG> (Thumb, 172 bytes, Stack size unknown bytes, WM.o(.text._PaintTransChildren))
<BR><BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[3ca]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, WM.o(.text._SetClipRectUserIntersect))
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[114]"></a>_cbBackWin</STRONG> (Thumb, 74 bytes, Stack size unknown bytes, WM.o(.text._cbBackWin))
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text.WM_Init)
</UL>
<P><STRONG><a name="[118]"></a>_cbPaintMemDev</STRONG> (Thumb, 82 bytes, Stack size unknown bytes, WM.o(.text._cbPaintMemDev))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text.WM__Paint)
</UL>
<P><STRONG><a name="[1a0]"></a>_MULTIBUF_Begin</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, WM_MULTIBUF.o(.text._MULTIBUF_Begin))
<BR><BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Begin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_MULTIBUF.o(.rodata._MULTIBUF_APIList)
</UL>
<P><STRONG><a name="[1a1]"></a>_MULTIBUF_End</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, WM_MULTIBUF.o(.text._MULTIBUF_End))
<BR><BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_MULTIBUF.o(.rodata._MULTIBUF_APIList)
</UL>
<P><STRONG><a name="[399]"></a>_GetDialogItem</STRONG> (Thumb, 112 bytes, Stack size unknown bytes, WM_Lib.o(.text._GetDialogItem))
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[3d2]"></a>_MoveDescendants</STRONG> (Thumb, 116 bytes, Stack size unknown bytes, WM_Move.o(.text._MoveDescendants))
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[338]"></a>_GetMaxValue</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, LCD_GetEx.o(.text._GetMaxValue))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
</UL>

<P><STRONG><a name="[11f]"></a>_Draw</STRONG> (Thumb, 278 bytes, Stack size unknown bytes, LCD_RLEAlpha.o(.text._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _Draw &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawClip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_RLEAlpha.o(.text._DrawBitmap_RLEAlpha)
</UL>
<P><STRONG><a name="[167]"></a>_DrawBitmap_RLEAlpha</STRONG> (Thumb, 568 bytes, Stack size unknown bytes, LCD_RLEAlpha.o(.text._DrawBitmap_RLEAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap_RLEAlpha &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_RLEAlpha.o(.rodata.GUI_BitmapMethodsRLEAlpha)
</UL>
<P><STRONG><a name="[11e]"></a>_DrawClip</STRONG> (Thumb, 116 bytes, Stack size unknown bytes, LCD_RLEAlpha.o(.text._DrawClip))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _DrawClip &rArr; _Draw &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_RLEAlpha.o(.text._DrawBitmap_RLEAlpha)
</UL>
<P><STRONG><a name="[247]"></a>_AddFreeMemory</STRONG> (Thumb, 170 bytes, Stack size unknown bytes, GUI_Alloc.o(.text._AddFreeMemory))
<BR><BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[244]"></a>_Alloc</STRONG> (Thumb, 270 bytes, Stack size unknown bytes, GUI_Alloc.o(.text._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[3da]"></a>_EnlargeBlocks</STRONG> (Thumb, 174 bytes, Stack size unknown bytes, GUI_Alloc.o(.text._EnlargeBlocks))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[248]"></a>_InitOnce</STRONG> (Thumb, 152 bytes, Stack size unknown bytes, GUI_Alloc.o(.text._InitOnce))
<BR><BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[24a]"></a>_RemoveFreeBlock</STRONG> (Thumb, 80 bytes, Stack size unknown bytes, GUI_Alloc.o(.text._RemoveFreeBlock))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[249]"></a>_RemoveHoles</STRONG> (Thumb, 152 bytes, Stack size unknown bytes, GUI_Alloc.o(.text._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[10a]"></a>_OnExit</STRONG> (Thumb, 98 bytes, Stack size unknown bytes, GUI_Core.o(.text._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.text.GUI__Config)
</UL>
<P><STRONG><a name="[3dc]"></a>_BS_Allocate</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, GUI_QR.o(.text._BS_Allocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _BS_Allocate &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
</UL>

<P><STRONG><a name="[2db]"></a>_BS_Append</STRONG> (Thumb, 116 bytes, Stack size unknown bytes, GUI_QR.o(.text._BS_Append))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _BS_Append &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
</UL>

<P><STRONG><a name="[2df]"></a>_BS_AppendBytes</STRONG> (Thumb, 136 bytes, Stack size unknown bytes, GUI_QR.o(.text._BS_AppendBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _BS_AppendBytes &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[2de]"></a>_BS_AppendNum</STRONG> (Thumb, 128 bytes, Stack size unknown bytes, GUI_QR.o(.text._BS_AppendNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _BS_AppendNum &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[3dd]"></a>_BS_Delete</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUI_QR.o(.text._BS_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_DeleteEntry
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[2d7]"></a>_Eat8</STRONG> (Thumb, 324 bytes, Stack size unknown bytes, GUI_QR.o(.text._Eat8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _Eat8 &rArr; _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
</UL>

<P><STRONG><a name="[2d8]"></a>_EatAn</STRONG> (Thumb, 406 bytes, Stack size unknown bytes, GUI_QR.o(.text._EatAn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _EatAn &rArr; _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>

<P><STRONG><a name="[2e2]"></a>_FRAME_FILLER_Next</STRONG> (Thumb, 152 bytes, Stack size unknown bytes, GUI_QR.o(.text._FRAME_FILLER_Next))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>

<P><STRONG><a name="[2dc]"></a>_Free</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, GUI_QR.o(.text._Free))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_p2h
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Delete
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_DeleteEntry
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Delete
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRS
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
</UL>

<P><STRONG><a name="[2e0]"></a>_InitRS</STRONG> (Thumb, 484 bytes, Stack size unknown bytes, GUI_QR.o(.text._InitRS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _InitRS &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>

<P><STRONG><a name="[3fc]"></a>_Malloc</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, GUI_QR.o(.text._Malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
</UL>

<P><STRONG><a name="[2e6]"></a>_QR_CalcN1N3</STRONG> (Thumb, 162 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_CalcN1N3))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>

<P><STRONG><a name="[2e5]"></a>_QR_CalcRunLength</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_CalcRunLength))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>

<P><STRONG><a name="[2dd]"></a>_QR_INPUT_Delete</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_INPUT_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_DeleteEntry
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>

<P><STRONG><a name="[2da]"></a>_QR_INPUT_EncodeBitStream</STRONG> (Thumb, 1332 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_INPUT_EncodeBitStream))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _QR_INPUT_EncodeBitStream &rArr;  _QR_INPUT_EncodeBitStream (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_DeleteEntry
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[2d9]"></a>_QR_INPUT_LIST_CreateEntry</STRONG> (Thumb, 256 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_INPUT_LIST_CreateEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>

<P><STRONG><a name="[3fe]"></a>_QR_INPUT_LIST_DeleteEntry</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_INPUT_LIST_DeleteEntry))
<BR><BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Delete
</UL>

<P><STRONG><a name="[100]"></a>_QR_Mask0</STRONG> (Thumb, 68 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_Mask0))
<BR>[Address Reference Count : 1]<UL><LI> GUI_QR.o(.text.GUI_QR_Create)
</UL>
<P><STRONG><a name="[101]"></a>_QR_Mask1</STRONG> (Thumb, 64 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_Mask1))
<BR>[Address Reference Count : 1]<UL><LI> GUI_QR.o(.text.GUI_QR_Create)
</UL>
<P><STRONG><a name="[102]"></a>_QR_Mask2</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_Mask2))
<BR>[Address Reference Count : 1]<UL><LI> GUI_QR.o(.text.GUI_QR_Create)
</UL>
<P><STRONG><a name="[103]"></a>_QR_Mask3</STRONG> (Thumb, 104 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_Mask3))
<BR>[Address Reference Count : 1]<UL><LI> GUI_QR.o(.text.GUI_QR_Create)
</UL>
<P><STRONG><a name="[104]"></a>_QR_Mask4</STRONG> (Thumb, 88 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_Mask4))
<BR>[Address Reference Count : 1]<UL><LI> GUI_QR.o(.text.GUI_QR_Create)
</UL>
<P><STRONG><a name="[105]"></a>_QR_Mask5</STRONG> (Thumb, 112 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_Mask5))
<BR>[Address Reference Count : 1]<UL><LI> GUI_QR.o(.text.GUI_QR_Create)
</UL>
<P><STRONG><a name="[106]"></a>_QR_Mask6</STRONG> (Thumb, 106 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_Mask6))
<BR>[Address Reference Count : 1]<UL><LI> GUI_QR.o(.text.GUI_QR_Create)
</UL>
<P><STRONG><a name="[107]"></a>_QR_Mask7</STRONG> (Thumb, 104 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_Mask7))
<BR>[Address Reference Count : 1]<UL><LI> GUI_QR.o(.text.GUI_QR_Create)
</UL>
<P><STRONG><a name="[2e3]"></a>_QR_RAW_Delete</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, GUI_QR.o(.text._QR_RAW_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>

<P><STRONG><a name="[2e1]"></a>_RS_BLOCK_InitBlock</STRONG> (Thumb, 234 bytes, Stack size unknown bytes, GUI_QR.o(.text._RS_BLOCK_InitBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _RS_BLOCK_InitBlock &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>

<P><STRONG><a name="[166]"></a>_CallDrawBitmapHW</STRONG> (Thumb, 190 bytes, Stack size unknown bytes, GUI_DrawBitmap_8888.o(.text._CallDrawBitmapHW))
<BR><BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DrawBitmap_8888.o(.rodata.GUI_BitmapMethodsM8888I)
</UL>
<P><STRONG><a name="[3de]"></a>_DoClipping</STRONG> (Thumb, 160 bytes, Stack size unknown bytes, GUI_DrawBitmap_8888.o(.text._DoClipping))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallDrawBitmapHW
</UL>

<P><STRONG><a name="[3e7]"></a>_DrawBitmap</STRONG> (Thumb, 1494 bytes, Stack size unknown bytes, GUI_DrawBitmap_8888.o(.text._DrawBitmap))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_M8888I
</UL>

<P><STRONG><a name="[165]"></a>_DrawBitmap_M8888I</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, GUI_DrawBitmap_8888.o(.text._DrawBitmap_M8888I))
<BR><BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DrawBitmap_8888.o(.rodata.GUI_BitmapMethodsM8888I)
</UL>
<P><STRONG><a name="[10]"></a>_SetPixelAlpha</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, GUI_DrawBitmap_8888.o(.text._SetPixelAlpha))
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DrawBitmap_8888.o(.data._pfSetPixelAlpha)
</UL>
<P><STRONG><a name="[191]"></a>_Color2IndexBulk_M8888I</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUICC_M8888I.o(.text._Color2IndexBulk_M8888I))
<BR><BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M8888I
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
</UL>
<P><STRONG><a name="[18f]"></a>_Color2Index_M8888I</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, GUICC_M8888I.o(.text._Color2Index_M8888I))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
</UL>
<P><STRONG><a name="[190]"></a>_GetIndexMask_M8888I</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, GUICC_M8888I.o(.text._GetIndexMask_M8888I))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
</UL>
<P><STRONG><a name="[192]"></a>_Index2ColorBulk_M8888I</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUICC_M8888I.o(.text._Index2ColorBulk_M8888I))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M8888I
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M8888I.o(.rodata.LCD_API_ColorConv_M8888I)
</UL>
<P><STRONG><a name="[214]"></a>_DrawLine1Ex</STRONG> (Thumb, 528 bytes, Stack size unknown bytes, GUI_DrawLine.o(.text._DrawLine1Ex))
<BR><BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[3ea]"></a>_SetLineColor</STRONG> (Thumb, 162 bytes, Stack size unknown bytes, GUI_DrawLine.o(.text._SetLineColor))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine1Ex
</UL>

<P><STRONG><a name="[fd]"></a>_OnExit</STRONG> (Thumb, 88 bytes, Stack size unknown bytes, GUI_MULTIBUF.o(.text._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> GUI_MULTIBUF.o(.text.GUI_MULTIBUF_ConfigEx)
</UL>
<P><STRONG><a name="[fb]"></a>_ExecAnimations</STRONG> (Thumb, 128 bytes, Stack size unknown bytes, GUI_ANIM.o(.text._ExecAnimations))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Start
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Exec
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Delete
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopAuto
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_ANIM.o(.text.GUI_ANIM_StartEx)
</UL>
<P><STRONG><a name="[fa]"></a>_OnExit</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUI_ANIM.o(.text._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> GUI_ANIM.o(.text.GUI_ANIM_Create)
</UL>
<P><STRONG><a name="[254]"></a>_Start</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUI_ANIM.o(.text._Start))
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_StartEx
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ANIM_Start
</UL>

<P><STRONG><a name="[3ec]"></a>_StopAuto</STRONG> (Thumb, 104 bytes, Stack size unknown bytes, GUI_ANIM.o(.text._StopAuto))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecAnimations
</UL>

<P><STRONG><a name="[2cb]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size unknown bytes, GUIDEV_WriteToActiveOpaque.o(.text._Convert16))
<BR><BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[2cd]"></a>_Convert8</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, GUIDEV_WriteToActiveOpaque.o(.text._Convert8))
<BR><BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[2bf]"></a>_CreateStaticDevice</STRONG> (Thumb, 350 bytes, Stack size unknown bytes, GUIDEV_StaticDevices.o(.text._CreateStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _CreateStaticDevice &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[177]"></a>_DrawBitmap</STRONG> (Thumb, 2040 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._DrawBitmap))
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[178]"></a>_DrawHLine</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._DrawHLine))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[179]"></a>_DrawVLine</STRONG> (Thumb, 200 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._DrawVLine))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[17a]"></a>_FillRect</STRONG> (Thumb, 198 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._FillRect))
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[181]"></a>_GetDevData</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[17f]"></a>_GetDevFunc</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[180]"></a>_GetDevProp</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[17b]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._GetPixelIndex))
<BR><BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[182]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._GetRect))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[17e]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[17c]"></a>_SetPixelIndex</STRONG> (Thumb, 76 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._SetPixelIndex))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[3e9]"></a>_XY2PTR</STRONG> (Thumb, 66 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._XY2PTR))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[17d]"></a>_XorPixel</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, GUIDEV_32.o(.text._XorPixel))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.rodata.GUI_MEMDEV_DEVICE_32)
</UL>
<P><STRONG><a name="[155]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 110 bytes, Stack size unknown bytes, GUIDEV_UsageBM.o(.text.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_AddHLine &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.rodata.API)
</UL>
<P><STRONG><a name="[154]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, GUIDEV_UsageBM.o(.text.GUI_USAGE_BM_AddPixel))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.rodata.API)
</UL>
<P><STRONG><a name="[156]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, GUIDEV_UsageBM.o(.text.GUI_USAGE_BM_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_Clear &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.rodata.API)
</UL>
<P><STRONG><a name="[158]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 238 bytes, Stack size unknown bytes, GUIDEV_UsageBM.o(.text.GUI_USAGE_BM_GetNextDirty))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.rodata.API)
</UL>
<P><STRONG><a name="[157]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, GUIDEV_UsageBM.o(.text._GUI_USAGE_BM_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.rodata.API)
</UL>
<P><STRONG><a name="[19c]"></a>_DrawBitmap</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, GUI_DRAW_BITMAP.o(.text._DrawBitmap))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DRAW_BITMAP.o(.rodata._ConstObjData)
</UL>
<P><STRONG><a name="[19d]"></a>_GetXSize</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUI_DRAW_BITMAP.o(.text._GetXSize))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DRAW_BITMAP.o(.rodata._ConstObjData)
</UL>
<P><STRONG><a name="[19e]"></a>_GetYSize</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, GUI_DRAW_BITMAP.o(.text._GetYSize))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DRAW_BITMAP.o(.rodata._ConstObjData)
</UL>
<P><STRONG><a name="[195]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, WIDGET_Effect_None.o(.text._DrawDown))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
</UL>
<P><STRONG><a name="[196]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, WIDGET_Effect_None.o(.text._DrawDownRect))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
</UL>
<P><STRONG><a name="[197]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, WIDGET_Effect_None.o(.text._DrawFlat))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
</UL>
<P><STRONG><a name="[193]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, WIDGET_Effect_None.o(.text._DrawUp))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
</UL>
<P><STRONG><a name="[194]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, WIDGET_Effect_None.o(.text._DrawUpRect))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata.WIDGET_Effect_None)
</UL>
<P><STRONG><a name="[19a]"></a>_DrawDown</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, WIDGET_Effect_Simple.o(.text._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_Simple.o(.rodata.WIDGET_Effect_Simple)
</UL>
<P><STRONG><a name="[19b]"></a>_DrawDownRect</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, WIDGET_Effect_Simple.o(.text._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _DrawDownRect &rArr; GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_Simple.o(.rodata.WIDGET_Effect_Simple)
</UL>
<P><STRONG><a name="[198]"></a>_DrawUp</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, WIDGET_Effect_Simple.o(.text._DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _DrawUp &rArr; _DrawUpRect &rArr; GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_Simple.o(.rodata.WIDGET_Effect_Simple)
</UL>
<P><STRONG><a name="[199]"></a>_DrawUpRect</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, WIDGET_Effect_Simple.o(.text._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _DrawUpRect &rArr; GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_Simple.o(.rodata.WIDGET_Effect_Simple)
</UL>
<P><STRONG><a name="[3c1]"></a>_Screen2hWin</STRONG> (Thumb, 140 bytes, Stack size unknown bytes, WM_Screen2Win.o(.text._Screen2hWin))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[3c4]"></a>_GetPrevChild</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, WM_SetFocusOnPrevChild.o(.text._GetPrevChild))
<BR><BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[3c3]"></a>_GetNextChild</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, WM_SetFocusOnNextChild.o(.text._GetNextChild))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[112]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, WM_BringToTop.o(.text._cbInvalidateOne))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_BringToTop.o(.text.WM_BringToTop)
</UL>
<P><STRONG><a name="[11b]"></a>_OnExit</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, WM_Touch.o(.text._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> WM_Touch.o(.text.WM__SetMotionCallback)
</UL>
<P><STRONG><a name="[10d]"></a>_OnExit</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, LCD_Color.o(.text._OnExit))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_Color.o(.text.LCD_InitColors)
</UL>
<P><STRONG><a name="[230]"></a>_GetTaskNo</STRONG> (Thumb, 70 bytes, Stack size unknown bytes, GUI_Task.o(.text._GetTaskNo))
<BR><BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
</UL>

<P><STRONG><a name="[f7]"></a>_OnExit</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUI_Task.o(.text._OnExit))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Task.o(.text.GUITASK_Init)
</UL>
<P><STRONG><a name="[1a5]"></a>_SetBkColor</STRONG> (Thumb, 62 bytes, Stack size unknown bytes, LCD.o(.text._SetBkColor))
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.rodata._SetColorAPI)
</UL>
<P><STRONG><a name="[1a4]"></a>_SetColor</STRONG> (Thumb, 62 bytes, Stack size unknown bytes, LCD.o(.text._SetColor))
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.rodata._SetColorAPI)
</UL>
<P><STRONG><a name="[1a6]"></a>_SetDrawMode</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, LCD.o(.text._SetDrawMode))
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.rodata._SetColorAPI)
</UL>
<P><STRONG><a name="[21c]"></a>_Add</STRONG> (Thumb, 78 bytes, Stack size unknown bytes, GUI_FillPolygon.o(.text._Add))
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[286]"></a>_DrawGradient</STRONG> (Thumb, 446 bytes, Stack size unknown bytes, GUI_DrawGradient.o(.text._DrawGradient))
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>

<P><STRONG><a name="[300]"></a>_Link</STRONG> (Thumb, 168 bytes, Stack size unknown bytes, GUI_Timer.o(.text._Link))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[109]"></a>_OnExit</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, GUI_Timer.o(.text._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Timer.o(.text.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[302]"></a>_Unlink</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, GUI_Timer.o(.text._Unlink))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[185]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, GUI_UC_EncodeNone.o(.text._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.rodata.GUI_UC_None)
</UL>
<P><STRONG><a name="[186]"></a>_Encode</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, GUI_UC_EncodeNone.o(.text._Encode))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.rodata.GUI_UC_None)
</UL>
<P><STRONG><a name="[183]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, GUI_UC_EncodeNone.o(.text._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.rodata.GUI_UC_None)
</UL>
<P><STRONG><a name="[184]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, GUI_UC_EncodeNone.o(.text._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.rodata.GUI_UC_None)
</UL>
<P><STRONG><a name="[18d]"></a>_Color2IndexBulk</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, GUICC_8888.o(.text._Color2IndexBulk))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
</UL>
<P><STRONG><a name="[18a]"></a>_Color2Index_8888</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUICC_8888.o(.text._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
</UL>
<P><STRONG><a name="[18c]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, GUICC_8888.o(.text._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
</UL>
<P><STRONG><a name="[18e]"></a>_Index2ColorBulk</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, GUICC_8888.o(.text._Index2ColorBulk))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_8888.o(.rodata.LCD_API_ColorConv_8888)
</UL>
<P><STRONG><a name="[fe]"></a>_OnExit</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, GUI_PID.o(.text._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> GUI_PID.o(.text.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[321]"></a>_DispLine</STRONG> (Thumb, 170 bytes, Stack size unknown bytes, GUI_CharLine.o(.text._DispLine))
<BR><BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[1a3]"></a>_DrawNonExistingCharacter_Dummy</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, GUI_Char.o(.text._DrawNonExistingCharacter_Dummy))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Char.o(.rodata._NonExistingCharacter_Dummy)
</UL>
<P><STRONG><a name="[1a2]"></a>_GetNonExistingCharWidth_Dummy</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, GUI_Char.o(.text._GetNonExistingCharWidth_Dummy))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Char.o(.rodata._NonExistingCharacter_Dummy)
</UL>
<P><STRONG><a name="[10c]"></a>_OnExit</STRONG> (Thumb, 74 bytes, Stack size unknown bytes, GUI__Alpha.o(.text._OnExit))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Alpha.o(.text.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[288]"></a>_DrawRect</STRONG> (Thumb, 56 bytes, Stack size unknown bytes, GUI_2DLib.o(.text._DrawRect))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>

<P><STRONG><a name="[325]"></a>_GetTwinArcPara</STRONG> (Thumb, 82 bytes, Stack size unknown bytes, GUI__DrawTwinArc.o(.text._GetTwinArcPara))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>

<P><STRONG><a name="[e]"></a>_DrawCharAA4_Trans</STRONG> (Thumb, 154 bytes, Stack size unknown bytes, GUIAA_Char4.o(.text._DrawCharAA4_Trans))
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIAA_Char4.o(.data._pfDrawCharAA4_Trans)
</UL>
<P><STRONG><a name="[f9]"></a>_DrawHLine</STRONG> (Thumb, 288 bytes, Stack size unknown bytes, GUIAA_Lib.o(.text._DrawHLine))
<BR><BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIAA_Lib.o(.text.GUI_AA_Init)
</UL>
<P><STRONG><a name="[23c]"></a>_FlushLine</STRONG> (Thumb, 330 bytes, Stack size unknown bytes, GUIAA_Lib.o(.text._FlushLine))
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>

<P><STRONG><a name="[f8]"></a>_OnExit</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, GUIAA_Lib.o(.text._OnExit))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIAA_Lib.o(.text.GUI_AA_Init)
</UL>
<P><STRONG><a name="[2c7]"></a>_WriteToActiveAlpha</STRONG> (Thumb, 396 bytes, Stack size unknown bytes, GUIDEV_WriteToActiveAlpha.o(.text._WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[187]"></a>_Color2Index_0</STRONG> (Thumb, 88 bytes, Stack size unknown bytes, GUICC_0.o(.text._Color2Index_0))
<BR><BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.rodata.LCD_API_ColorConv_0)
</UL>
<P><STRONG><a name="[189]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size unknown bytes, GUICC_0.o(.text._GetIndexMask_0))
<BR><BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.rodata.LCD_API_ColorConv_0)
</UL>
<P><STRONG><a name="[188]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUICC_0.o(.text._Index2Color_0))
<BR><BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.rodata.LCD_API_ColorConv_0)
</UL>
<P><STRONG><a name="[2ea]"></a>LCD_ReadRectEx</STRONG> (Thumb, 452 bytes, Stack size unknown bytes, LCD_ReadRect.o(.text.LCD_ReadRectEx))
<BR><BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>

<P><STRONG><a name="[31a]"></a>_ConstructContext</STRONG> (Thumb, 222 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._ConstructContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _ConstructContext &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAttribs
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_Log2Vis
</UL>

<P><STRONG><a name="[3e3]"></a>_DecideParaLevel</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._DecideParaLevel))
<BR><BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecideParaLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecideParaLevel
</UL>

<P><STRONG><a name="[319]"></a>_DoJoiningAndDecoding</STRONG> (Thumb, 130 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._DoJoiningAndDecoding))
<BR><BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChar
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IsArabicCharacter
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetPresentationForm
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_Log2Vis
</UL>

<P><STRONG><a name="[31d]"></a>_DropContext</STRONG> (Thumb, 102 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._DropContext))
<BR><BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_Log2Vis
</UL>

<P><STRONG><a name="[3eb]"></a>_Free</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._Free))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_p2h
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA_ResolvePairedBrackets
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DropContext
</UL>

<P><STRONG><a name="[316]"></a>_GetAttribs</STRONG> (Thumb, 184 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._GetAttribs))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConstructContext
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_IsNSM
</UL>

<P><STRONG><a name="[3e5]"></a>_GetNextChar</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._GetNextChar))
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoJoiningAndDecoding
</UL>

<P><STRONG><a name="[402]"></a>_IsPriorContextL</STRONG> (Thumb, 80 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._IsPriorContextL))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA_ResolvePairedBrackets
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA_ResolveNeutralsByContext
</UL>

<P><STRONG><a name="[403]"></a>_IsPriorContextRANEN</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._IsPriorContextRANEN))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA_ResolvePairedBrackets
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA_ResolveNeutralsByContext
</UL>

<P><STRONG><a name="[31c]"></a>_ReorderAndMirror</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._ReorderAndMirror))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_Log2Vis
</UL>

<P><STRONG><a name="[401]"></a>_ReverseRange</STRONG> (Thumb, 76 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._ReverseRange))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA
</UL>

<P><STRONG><a name="[404]"></a>_SetBracketPairBC</STRONG> (Thumb, 74 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._SetBracketPairBC))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA_ResolvePairedBrackets
</UL>

<P><STRONG><a name="[31b]"></a>_UBA</STRONG> (Thumb, 2896 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _UBA &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA_RuleDispatch
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReverseRange
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecideParaLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__BIDI2_Log2Vis
</UL>

<P><STRONG><a name="[143]"></a>_UBA_Empty</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_Empty))
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[13b]"></a>_UBA_ResolveAL</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolveAL))
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[139]"></a>_UBA_ResolveCombiningMarks</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolveCombiningMarks))
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[13f]"></a>_UBA_ResolveEN</STRONG> (Thumb, 126 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolveEN))
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[13e]"></a>_UBA_ResolveESCSET</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolveESCSET))
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[13a]"></a>_UBA_ResolveEuropeanNumbers</STRONG> (Thumb, 112 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolveEuropeanNumbers))
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[141]"></a>_UBA_ResolveNeutralsByContext</STRONG> (Thumb, 306 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolveNeutralsByContext))
<BR><BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPriorContextRANEN
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPriorContextL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[142]"></a>_UBA_ResolveNeutralsByLevel</STRONG> (Thumb, 82 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolveNeutralsByLevel))
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[140]"></a>_UBA_ResolvePairedBrackets</STRONG> (Thumb, 812 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolvePairedBrackets))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _UBA_ResolvePairedBrackets &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBracketPairBC
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPriorContextRANEN
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPriorContextL
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[13c]"></a>_UBA_ResolveSeparators</STRONG> (Thumb, 326 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolveSeparators))
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[13d]"></a>_UBA_ResolveTerminators</STRONG> (Thumb, 144 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_ResolveTerminators))
<BR>[Address Reference Count : 1]<UL><LI> GUI__BiDi2.o(.text._UBA_RuleDispatch)
</UL>
<P><STRONG><a name="[400]"></a>_UBA_RuleDispatch</STRONG> (Thumb, 196 bytes, Stack size unknown bytes, GUI__BiDi2.o(.text._UBA_RuleDispatch))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UBA
</UL>

<P><STRONG><a name="[328]"></a>_GetLigature</STRONG> (Thumb, 108 bytes, Stack size unknown bytes, GUI__Arabic.o(.text._GetLigature))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetPresentationForm
</UL>

<P><STRONG><a name="[327]"></a>_GetTableIndex</STRONG> (Thumb, 118 bytes, Stack size unknown bytes, GUI__Arabic.o(.text._GetTableIndex))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetPresentationForm
</UL>

<P><STRONG><a name="[2f3]"></a>_CreateBuffer</STRONG> (Thumb, 156 bytes, Stack size unknown bytes, GUI_SPRITE.o(.text._CreateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[3f7]"></a>_FlushBuffer</STRONG> (Thumb, 140 bytes, Stack size unknown bytes, GUI_SPRITE.o(.text._FlushBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[2f5]"></a>_GetBkIndex</STRONG> (Thumb, 118 bytes, Stack size unknown bytes, GUI_SPRITE.o(.text._GetBkIndex))
<BR><BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[2f6]"></a>_GetBkIndexAlpha</STRONG> (Thumb, 126 bytes, Stack size unknown bytes, GUI_SPRITE.o(.text._GetBkIndexAlpha))
<BR><BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[2f2]"></a>_GetDeviceRect</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, GUI_SPRITE.o(.text._GetDeviceRect))
<BR><BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[2f7]"></a>_ReleaseBuffer</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, GUI_SPRITE.o(.text._ReleaseBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[2f4]"></a>_SetBkIndexBuffered</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, GUI_SPRITE.o(.text._SetBkIndexBuffered))
<BR><BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
